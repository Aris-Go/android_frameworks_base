{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4863a099_f0354b73",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 532,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-01-09T02:07:30Z",
      "side": 1,
      "message": "countToRead \u003e 0 || countInPipe \u003e 0",
      "range": {
        "startLine": 532,
        "startChar": 15,
        "endLine": 532,
        "endChar": 30
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4f9e8c9_b62d972c",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 532,
      "author": {
        "id": 1835301
      },
      "writtenOn": "2024-01-09T07:55:48Z",
      "side": 1,
      "message": "Yes, I fixed it.",
      "parentUuid": "4863a099_f0354b73",
      "range": {
        "startLine": 532,
        "startChar": 15,
        "endLine": 532,
        "endChar": 30
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7860a53a_6b289c79",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 533,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-01-09T02:07:30Z",
      "side": 1,
      "message": "might put \u0027if (countToRead \u003e 0)\u0027 around this, to avoid calling splice(..., 0) once the while loop condition is updated",
      "range": {
        "startLine": 533,
        "startChar": 0,
        "endLine": 533,
        "endChar": 25
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "987106d4_8be09bb2",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 533,
      "author": {
        "id": 1835301
      },
      "writtenOn": "2024-01-09T07:55:48Z",
      "side": 1,
      "message": "Yes, I fixed it.",
      "parentUuid": "7860a53a_6b289c79",
      "range": {
        "startLine": 533,
        "startChar": 0,
        "endLine": 533,
        "endChar": 25
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3c2ab2b_15545ad7",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 537,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-01-09T02:07:30Z",
      "side": 1,
      "message": "copied",
      "range": {
        "startLine": 537,
        "startChar": 26,
        "endLine": 537,
        "endChar": 32
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d1f9672_00f134a2",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 537,
      "author": {
        "id": 1835301
      },
      "writtenOn": "2024-01-09T07:55:48Z",
      "side": 1,
      "message": "Yes, I fixed it.",
      "parentUuid": "e3c2ab2b_15545ad7",
      "range": {
        "startLine": 537,
        "startChar": 26,
        "endLine": 537,
        "endChar": 32
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18c71a4c_362aac05",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 538,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-01-09T02:07:30Z",
      "side": 1,
      "message": "read (irregular verb)",
      "range": {
        "startLine": 538,
        "startChar": 26,
        "endLine": 538,
        "endChar": 32
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4884a1ae_d2a80b46",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 538,
      "author": {
        "id": 1835301
      },
      "writtenOn": "2024-01-09T07:55:48Z",
      "side": 1,
      "message": "Yes, I fixed it.",
      "parentUuid": "18c71a4c_362aac05",
      "range": {
        "startLine": 538,
        "startChar": 26,
        "endLine": 538,
        "endChar": 32
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1e43cc7_7cbd761d",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 543,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-01-09T02:07:30Z",
      "side": 1,
      "message": "if the pipe is throwing an unexpected error, we should still consider this an error, rather than trying to continue?\n\nso if \u0027t \u003d -1\u0027 this should fail, but if \u0027t \u003d 0\u0027.\n\nalso use \u0027{\u0027 \u0027}\u0027 for if statement with else\n\ne.g.\n\n``` maybe\nif (t \u003c 0 || countInPipe \u003c\u003d 0) break;\n```\n\n(noting that L535 implies t\u003d0 here, \u003c\u003d for extra care)",
      "range": {
        "startLine": 540,
        "startChar": 0,
        "endLine": 543,
        "endChar": 26
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1467a461_ed2bb452",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 543,
      "author": {
        "id": 1835301
      },
      "writtenOn": "2024-01-09T07:55:48Z",
      "side": 1,
      "message": "Yes, I added a flag stopReadFlag to handle this case. t\u003d\u003d-1 means real error occured use Log.e, t\u003d\u003d0 means input count larger then real size use Log.w. \nThen if countInPipe\u003d\u003d0, then break, else write the data in pipe to fdOut, and break at next loop.",
      "parentUuid": "f1e43cc7_7cbd761d",
      "range": {
        "startLine": 540,
        "startChar": 0,
        "endLine": 543,
        "endChar": 26
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7372848_57b94394",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 543,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-01-09T18:28:43Z",
      "side": 1,
      "message": "Can you return in this case rather than adding stopReadFlag? I don\u0027t think an additional flag should be needed, or can you say why it is needed?\n\nAlso it should be a boolean not an int how it is used, but I don\u0027t think it\u0027s needed?",
      "parentUuid": "1467a461_ed2bb452",
      "range": {
        "startLine": 540,
        "startChar": 0,
        "endLine": 543,
        "endChar": 26
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "621781c7_cd15a9e0",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 543,
      "author": {
        "id": 1835301
      },
      "writtenOn": "2024-01-10T03:23:21Z",
      "side": 1,
      "message": "Thanks! I use stopReadFlag to deal followed corner cases: \n1. When splice_read in error(t\u003d\u003d-1), countInPipe\u003e0. This means that some data is still in the pipeline and has not been written to the out file. So I want to break after the wirte completed(countInPipe\u003d\u003d0).\n\n2. Input count larger than real file size, when read to the end of file(t\u003d\u003d0), countInPipe\u003e0, countToRead\u003e0. And then call splice_write to out file, but after one operation(countInPipe\u003e0), there is still incomplete data and more loops are needed. Use this variable to avoid calling splice_read operation in the next loop.\n \nOf course, case 1, under such error conditions, it is no longer possible to ensure data integrity, and the writing more data maybe not meaningful.\ncase 2, Maybe we needed handle it.\n\nSo if we don\u0027t handle these cornor case, I will remove the stopReadFlag. What is your opinion?",
      "parentUuid": "f7372848_57b94394",
      "range": {
        "startLine": 540,
        "startChar": 0,
        "endLine": 543,
        "endChar": 26
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c2d7d4b_9d0635b7",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 543,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-01-10T23:44:36Z",
      "side": 1,
      "message": "re 1, \u0027countToRead \u003e 0 || countInPipe \u003e 0\u0027 should cover this condition?\n\nre case 2 - you could run the test for this case without your code, and then preserve the same behavior with your change. This is how I would generally resolve the ambiguity.",
      "parentUuid": "621781c7_cd15a9e0",
      "range": {
        "startLine": 540,
        "startChar": 0,
        "endLine": 543,
        "endChar": 26
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f43f6679_d63a03e1",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 543,
      "author": {
        "id": 1835301
      },
      "writtenOn": "2024-01-11T02:07:05Z",
      "side": 1,
      "message": "Thanks! You\u0027re absolutely right. stopReadFlag is not necessary.  \u0027countToRead \u003e 0 || countInPipe \u003e 0\u0027 can cover all situations. We can set countToRead to zeor when in case 1 and case 2.",
      "parentUuid": "2c2d7d4b_9d0635b7",
      "range": {
        "startLine": 540,
        "startChar": 0,
        "endLine": 543,
        "endChar": 26
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00ad3bdc_3311096b",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 553,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-01-09T02:07:30Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 552,
        "startChar": 26,
        "endLine": 553,
        "endChar": 34
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da26cbc5_36e8638b",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 553,
      "author": {
        "id": 1835301
      },
      "writtenOn": "2024-01-09T07:55:48Z",
      "side": 1,
      "message": "Yes, I fixed it.",
      "parentUuid": "00ad3bdc_3311096b",
      "range": {
        "startLine": 552,
        "startChar": 26,
        "endLine": 553,
        "endChar": 34
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cb0e922_4fd6efca",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 561,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-01-09T02:07:30Z",
      "side": 1,
      "message": "Please fix this ERROR reported by Common Typos: Common typo found: \"exhaused\" -- should it be \"exhausted\"?\n\nAnalyzer Description: Linter for catching common typos motivated by go/todo-fail and go/lol-codesearch. Shared with google3 common typos library go/common-typos.\nOwner: ayeaye-team@google.com\n\nCommon typo found: \"exhaused\" -- should it be \"exhausted\"?\nNote: a line containing \"common_typos_disable\" or \"common_typos_enable\" will turn off or on (respectively) the linter for subsequent lines in the file. Alternatively include the token \"NOTYPO\" within a line to skip typo linting that line or include \u0027No-Typo-Check: \u003creason\u003e\u0027in the commit message.",
      "range": {
        "startLine": 561,
        "startChar": 25,
        "endLine": 561,
        "endChar": 33
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5e66fda_4dd6bbc8",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 561,
      "author": {
        "id": 1835301
      },
      "writtenOn": "2024-01-09T07:55:48Z",
      "side": 1,
      "message": "Yes, I removed this part.",
      "parentUuid": "6cb0e922_4fd6efca",
      "range": {
        "startLine": 561,
        "startChar": 25,
        "endLine": 561,
        "endChar": 33
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5020aaa_53e65b4b",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 574,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-01-09T02:07:30Z",
      "side": 1,
      "message": "note - two comments above on L532 (while statement) and L533 (on the first splice) would avoid needing to handle this case. As the code is here, countInPipe might be larger than COPY_CHECKPOINT_BYTES and further updates would be needed. Rather than add more copies of code here, I think you should remove this case and make the above suggested changes.",
      "range": {
        "startLine": 562,
        "startChar": 0,
        "endLine": 574,
        "endChar": 13
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "effecd51_51652e3d",
        "filename": "core/java/android/os/FileUtils.java",
        "patchSetId": 11
      },
      "lineNbr": 574,
      "author": {
        "id": 1835301
      },
      "writtenOn": "2024-01-09T07:55:48Z",
      "side": 1,
      "message": "Yes, I removed this part.",
      "parentUuid": "d5020aaa_53e65b4b",
      "range": {
        "startLine": 562,
        "startChar": 0,
        "endLine": 574,
        "endChar": 13
      },
      "revId": "50cbc48fcdb94cdf12febd370017c264b921a36f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}