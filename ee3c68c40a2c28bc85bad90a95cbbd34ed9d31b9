{
  "comments": [
    {
      "key": {
        "uuid": "dce47ef9_4185168b",
        "filename": "api/current.txt",
        "patchSetId": 1
      },
      "lineNbr": 15913,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2016-03-24T10:42:17Z",
      "side": 1,
      "message": "The java compiler inlines final static primitives so people have to recompile if they change.\n\nWhen compiling code against Android N stubs they will have one value built into their app, and a different value if they build against O.\n\nDoes it matter? How is this used? (and the one above)\n\nhttp://stackoverflow.com/questions/3524150/is-it-possible-to-disable-javacs-inlining-of-static-final-variables\n\nThis may point to a problem (or a class of problem) we need to fix for N.",
      "range": {
        "startLine": 15913,
        "startChar": 34,
        "endLine": 15913,
        "endChar": 45
      },
      "revId": "ee3c68c40a2c28bc85bad90a95cbbd34ed9d31b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_cebba3e6",
        "filename": "api/current.txt",
        "patchSetId": 1
      },
      "lineNbr": 15913,
      "author": {
        "id": 1022037
      },
      "writtenOn": "2016-03-24T16:02:28Z",
      "side": 1,
      "message": "You are right, but this has apparently never caused any problems for anyone -- or no one has complained, anyway.\n\nFor \"int enums\" (which originate from before we could use Java 5), we almost always define COUNT or LIMIT constants for array sizing and loops, mostly internally to ICU. They all change values as we add more constants to existing sets.\n\nThese constants are not very useful to callers because they don\u0027t select behavior, they are actually invalid as input values; callers normally use the other constants in these sets for selecting behavior.\n\nIt is of course possible that some caller uses these COUNT/LIMIT constants and don\u0027t tell us if they have had any problems. There might be some API methods that return COUNT/LIMIT values as integer versions of \"null\".",
      "parentUuid": "dce47ef9_4185168b",
      "range": {
        "startLine": 15913,
        "startChar": 34,
        "endLine": 15913,
        "endChar": 45
      },
      "revId": "ee3c68c40a2c28bc85bad90a95cbbd34ed9d31b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dce47ef9_41cd16aa",
        "filename": "api/current.txt",
        "patchSetId": 1
      },
      "lineNbr": 15913,
      "author": {
        "id": 1024310
      },
      "writtenOn": "2016-03-24T16:13:02Z",
      "side": 1,
      "message": "\u003e You are right, but this has apparently never caused any problems\n \u003e for anyone -- or no one has complained, anyway.\n\nBut do we know of any other environment, apart from Android, in which it would be normal to build using one version of ICU4J but then execute using another version?\n\nBuilding with the latest version of the SDK and executing on older devices is what\u0027s normal on Android, as the majority of users never are updated to the latest version of the operating system.",
      "parentUuid": "3ca2fa11_cebba3e6",
      "range": {
        "startLine": 15913,
        "startChar": 34,
        "endLine": 15913,
        "endChar": 45
      },
      "revId": "ee3c68c40a2c28bc85bad90a95cbbd34ed9d31b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dca63e27_cbea7595",
        "filename": "api/current.txt",
        "patchSetId": 1
      },
      "lineNbr": 15913,
      "author": {
        "id": 1022037
      },
      "writtenOn": "2016-03-24T16:34:03Z",
      "side": 1,
      "message": "Well, I would be ok with @hiding these COUNT/LIMIT constants. Maybe public ICU should deprecate them. If callers do need (some of) them, then we could add getters.",
      "parentUuid": "dce47ef9_41cd16aa",
      "range": {
        "startLine": 15913,
        "startChar": 34,
        "endLine": 15913,
        "endChar": 45
      },
      "revId": "ee3c68c40a2c28bc85bad90a95cbbd34ed9d31b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b461b121_b3f0d89d",
        "filename": "api/current.txt",
        "patchSetId": 1
      },
      "lineNbr": 15913,
      "author": {
        "id": 1099044
      },
      "writtenOn": "2016-06-14T10:04:50Z",
      "side": 1,
      "message": "If I remember correctly we tried to hide all of these fields and I don\u0027t remember that we intentionally made many exceptions. Maybe these were missed.",
      "parentUuid": "dca63e27_cbea7595",
      "range": {
        "startLine": 15913,
        "startChar": 34,
        "endLine": 15913,
        "endChar": 45
      },
      "revId": "ee3c68c40a2c28bc85bad90a95cbbd34ed9d31b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc14e289_a0f03c83",
        "filename": "api/current.txt",
        "patchSetId": 1
      },
      "lineNbr": 16079,
      "author": {
        "id": 1022037
      },
      "writtenOn": "2016-03-24T03:16:41Z",
      "side": 1,
      "message": "ask Neil whether \"synchronized\" should be removed from this list, since it does not distinguish method signatures",
      "range": {
        "startLine": 16079,
        "startChar": 24,
        "endLine": 16079,
        "endChar": 36
      },
      "revId": "ee3c68c40a2c28bc85bad90a95cbbd34ed9d31b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dce47ef9_c14f6636",
        "filename": "api/current.txt",
        "patchSetId": 1
      },
      "lineNbr": 16079,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2016-03-24T10:42:17Z",
      "side": 1,
      "message": "It\u0027s in the api .txt but removed from the docs.",
      "parentUuid": "fc14e289_a0f03c83",
      "range": {
        "startLine": 16079,
        "startChar": 24,
        "endLine": 16079,
        "endChar": 36
      },
      "revId": "ee3c68c40a2c28bc85bad90a95cbbd34ed9d31b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dce47ef9_e14c6244",
        "filename": "api/current.txt",
        "patchSetId": 1
      },
      "lineNbr": 16383,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2016-03-24T10:42:17Z",
      "side": 1,
      "message": "Hmm. Think we should keep the API footprint (e.g. methods and classes) stable and do this as a follow up once it lands.",
      "range": {
        "startLine": 16383,
        "startChar": 81,
        "endLine": 16383,
        "endChar": 90
      },
      "revId": "ee3c68c40a2c28bc85bad90a95cbbd34ed9d31b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dca63e27_cba275c6",
        "filename": "api/current.txt",
        "patchSetId": 1
      },
      "lineNbr": 16383,
      "author": {
        "id": 1022037
      },
      "writtenOn": "2016-03-24T16:02:28Z",
      "side": 1,
      "message": "Ok. Note that every release will add @stable API.\nThis one is for functionality that had been requested by a Google product.",
      "parentUuid": "dce47ef9_e14c6244",
      "range": {
        "startLine": 16383,
        "startChar": 81,
        "endLine": 16383,
        "endChar": 90
      },
      "revId": "ee3c68c40a2c28bc85bad90a95cbbd34ed9d31b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}