{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ddf8c4cb_d0b35aef",
        "filename": "core/java/android/net/NetworkProvider.java",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1308163
      },
      "writtenOn": "2020-10-16T07:14:52Z",
      "side": 0,
      "message": "This has been fixed by aosp/1459885.\nBut it doesn\u0027t matter.",
      "range": {
        "startLine": 33,
        "startChar": 43,
        "endLine": 33,
        "endChar": 45
      },
      "revId": "90bdb2aeccaeecaee46842f6dd76ae38020fd803",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24bfbb2b_1863ec93",
        "filename": "services/core/java/com/android/server/ConnectivityService.java",
        "patchSetId": 5
      },
      "lineNbr": 7179,
      "author": {
        "id": 1308163
      },
      "writtenOn": "2020-10-16T07:14:52Z",
      "side": 0,
      "message": "Why did you remove this?\nDon\u0027t we need to do some pre-configs for VPN?\n\nAfter merging aosp/1460964, when the VPN NetworkAgent is registered, this check will be used, right?",
      "range": {
        "startLine": 7179,
        "startChar": 16,
        "endLine": 7179,
        "endChar": 82
      },
      "revId": "90bdb2aeccaeecaee46842f6dd76ae38020fd803",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2058a996_1c630c66",
        "filename": "services/core/java/com/android/server/ConnectivityService.java",
        "patchSetId": 5
      },
      "lineNbr": 7179,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2020-10-16T15:58:51Z",
      "side": 0,
      "message": "TL;DR : because VPN agents now have the same lifecycle as others, so they don\u0027t need special lifecycle treatment.\n\n\nWith this patch, there no longer is an UNKNOWN or IDLE state for VPN that Connectivity service sees. The VPN agent was the only one with a different lifecycle and this was done for legacy reasons originally. These reasons (in particular, the Settings app needed to see the network (through CONNECTIVITY_ACTION I presume)) have gone away. With the migration of the VPN agent to the modern lifecycle on the agent side, it can just have the same lifecycle as every other agent on the CS side too, so this is a simplification.\n\nNote that part of the reason other networks only enter this in CONNECTED is to let them update their capabilities without causing wrong callbacks to be sent (see the comment in l.7186 which explains what might happen to VPNs – I added this last year when I fixed that bug). With this bypass, VPNs agents can cause rematches with side effects by sending updates to their capabilities before they call markConnected, because created \u003d true means they can now match requests. In practice they don\u0027t do it, because VpnService calls establish() once and then can\u0027t ever update its capabilities, which is why it used to work.\n\nBut tests do this, and they *should* be able to, and it happened to work before because VPNs used to start in UNKNOWN. Without this patch, ConnectivityServiceTest#testVpnUnvalidated and ConnectivityServiceTest#testVpnStartsWithUnderlyingCaps fail because they update the capabilities between register() and markConnected(), which triggers the bad code path (it triggers a rematch, the test VPN agent starts matching the request put by the test, and when the VPN connects l.7234 sends a spurious callback).\n\nOf course technically I can go and update the tests instead, but this bypass here is still dangerous for future changes and it\u0027s much better that all agents are treated the same way.",
      "parentUuid": "24bfbb2b_1863ec93",
      "range": {
        "startLine": 7179,
        "startChar": 16,
        "endLine": 7179,
        "endChar": 82
      },
      "revId": "90bdb2aeccaeecaee46842f6dd76ae38020fd803",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "690ec61e_2bfaf428",
        "filename": "services/core/java/com/android/server/ConnectivityService.java",
        "patchSetId": 5
      },
      "lineNbr": 7179,
      "author": {
        "id": 1308163
      },
      "writtenOn": "2020-10-19T13:07:48Z",
      "side": 0,
      "message": "My initial concern was that in handleRegisterNetworkAgent(), it will call updateNetworkInfo() first then updateUids().\nFor that moment when handleRegisterNetworkAgent() calls updateNetworkInfo(), the state of VPN is CONNECTING.\nIt means that the line#7196 to line#7241 won\u0027t be run. Especially rematchAllNetworksAndRequests() won\u0027t be called.\nSo we can make sure that before available callback is sent, the uid ragnes has been set. i.e. There is no race condition that a certain app thought it can use network but after a while it can\u0027t because the uid ranges has set and the app is in the blacklist.\nBut this change will make a race condition that I just mentioned above. i.e. The available callback is sent before uid ranges has set.\n\n//\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d//\n\nIt looks like the NetworkCapabilites of VPN doesn\u0027t change from line#7193~line#7232.(Hopefully I don\u0027t miss anything that need to consider.) Can we remove line#7233~7235 since we have done the same thing at line#7185~7192?",
      "parentUuid": "2058a996_1c630c66",
      "range": {
        "startLine": 7179,
        "startChar": 16,
        "endLine": 7179,
        "endChar": 82
      },
      "revId": "90bdb2aeccaeecaee46842f6dd76ae38020fd803",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "40c336a7_9bfdb537",
        "filename": "services/core/java/com/android/server/ConnectivityService.java",
        "patchSetId": 5
      },
      "lineNbr": 7179,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2020-10-21T04:27:28Z",
      "side": 0,
      "message": "\u003e But this change will make a race condition that I just mentioned above. i.e. The available callback is sent before uid ranges has set.\n\nVery nice catch. The ranges are in fact updated in l.7191, as updateAllVpnsCapabilities will transitively call updateCapabilities, which starts with updateUids, however that call is done with the existing NCs and therefore will not serve as an initialization. The call to updateUids() in registerNetworkAgent() is done with a null NCs, and needs to be done.\n\nHowever all of this is better done here. I added the initialization call in the block here. This showed we were calling updateUids even on uncreated VPNs when it makes no sense – this used to be a bug that I found because one of the tests happened to be sensitive to it.\n\nAlso we had no coverage of the issue you mentioned. Added some.",
      "parentUuid": "690ec61e_2bfaf428",
      "range": {
        "startLine": 7179,
        "startChar": 16,
        "endLine": 7179,
        "endChar": 82
      },
      "revId": "90bdb2aeccaeecaee46842f6dd76ae38020fd803",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}