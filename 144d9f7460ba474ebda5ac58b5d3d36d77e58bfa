{
  "comments": [
    {
      "key": {
        "uuid": "9adf390e_58f82254",
        "filename": "services/core/java/com/android/server/connectivity/Nat464Xlat.java",
        "patchSetId": 10
      },
      "lineNbr": 196,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-02-20T10:29:49Z",
      "side": 1,
      "message": "stopClat ?",
      "range": {
        "startLine": 196,
        "startChar": 25,
        "endLine": 196,
        "endChar": 34
      },
      "revId": "144d9f7460ba474ebda5ac58b5d3d36d77e58bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91e1e20b_799851f1",
        "filename": "services/core/java/com/android/server/connectivity/Nat464Xlat.java",
        "patchSetId": 10
      },
      "lineNbr": 196,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-02-21T15:16:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9adf390e_58f82254",
      "range": {
        "startLine": 196,
        "startChar": 25,
        "endLine": 196,
        "endChar": 34
      },
      "revId": "144d9f7460ba474ebda5ac58b5d3d36d77e58bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f42abd32_79ac9999",
        "filename": "services/core/java/com/android/server/connectivity/Nat464Xlat.java",
        "patchSetId": 10
      },
      "lineNbr": 212,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-02-20T10:29:49Z",
      "side": 1,
      "message": "go/avoidwe",
      "range": {
        "startLine": 212,
        "startChar": 41,
        "endLine": 212,
        "endChar": 43
      },
      "revId": "144d9f7460ba474ebda5ac58b5d3d36d77e58bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ebf2537_2e6bd577",
        "filename": "services/core/java/com/android/server/connectivity/Nat464Xlat.java",
        "patchSetId": 10
      },
      "lineNbr": 212,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-02-20T13:59:32Z",
      "side": 1,
      "message": "In general, I don\u0027t find the arguments made by go/avoidwe very convincing. In this case, the we seems pretty unambigous - it refers to this class, or this code.\n\nAlso, even go/avoidwe says that the goal is not to avoid the word itself, but to ensure that the comment is clear. If you find it unclear, can you suggest alternative wording?",
      "parentUuid": "f42abd32_79ac9999",
      "range": {
        "startLine": 212,
        "startChar": 41,
        "endLine": 212,
        "endChar": 43
      },
      "revId": "144d9f7460ba474ebda5ac58b5d3d36d77e58bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "596d6ac1_3e3399e3",
        "filename": "services/core/java/com/android/server/connectivity/Nat464Xlat.java",
        "patchSetId": 10
      },
      "lineNbr": 212,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-02-21T06:17:22Z",
      "side": 1,
      "message": "The reason I mentioned it is because I found it pretty ambiguous here. I don\u0027t know if this is we the control, or we the Nat464Xlat class, or we the network stack, or we the team until I read the comment pretty carefully. Here is an alternative wording :\n\n  Enter IDLE state before updating LinkProperties. handleUpdateLinkProperties ends up\n  calling fixupLinkProperties, and if this Nat464Xlat state was still RUNNING by that\n  time, fixupLinkProperties would wrongly stack the obsolete clat interface in the LP.\n\n\nIn my mind, go/avoidwe exists more to spread the awareness that the common reflex of using \"we\" in comments often has the infortunate tendency to make comments less clear. It\u0027s less about the individual places and more about making people generally steer away from the reflexÂ ; the argument that I buy is that the habit of writing comments without \"we\" is a better habit than the habit of writing comments with \"we\".\nNow if you think your version is clearer than mine please keep the current comment. I don\u0027t feel particularly strongly about it.",
      "parentUuid": "5ebf2537_2e6bd577",
      "range": {
        "startLine": 212,
        "startChar": 41,
        "endLine": 212,
        "endChar": 43
      },
      "revId": "144d9f7460ba474ebda5ac58b5d3d36d77e58bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f60a437d_adefafdc",
        "filename": "services/core/java/com/android/server/connectivity/Nat464Xlat.java",
        "patchSetId": 10
      },
      "lineNbr": 212,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-02-21T15:16:49Z",
      "side": 1,
      "message": "Edited. I don\u0027t think it\u0027s OK to say \"this Nat464Xlat state\" because that would be using \"Nat464Xlat\" as an adjective, and I don\u0027t think that\u0027s correct. But otherwise followed the suggestion.\n\nThat said - I don\u0027t understand how \"we\" could be interpreted as \"we the team\" since the team can\u0027t be in RUNNING state, or communicate to ConnectivityService. RUNNING state is used elsewhere in this file, so at least to me it seems pretty clear that \"we\" here refers to this code - or the control flow or the network stack, because in this file they\u0027re basically synonymous. But in any case, the offending \"we\" is gone.",
      "parentUuid": "596d6ac1_3e3399e3",
      "range": {
        "startLine": 212,
        "startChar": 41,
        "endLine": 212,
        "endChar": 43
      },
      "revId": "144d9f7460ba474ebda5ac58b5d3d36d77e58bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42d91944_65f54cee",
        "filename": "services/core/java/com/android/server/connectivity/Nat464Xlat.java",
        "patchSetId": 10
      },
      "lineNbr": 218,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-02-20T10:29:49Z",
      "side": 1,
      "message": "Can we have a check that this is running on the connectivity service handler thread ? I couldn\u0027t find evidence of the contrary but that was a difficult search. Inside handleUpdateLinkProperties is fine for example",
      "range": {
        "startLine": 218,
        "startChar": 35,
        "endLine": 218,
        "endChar": 61
      },
      "revId": "144d9f7460ba474ebda5ac58b5d3d36d77e58bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab16748e_5301b6e2",
        "filename": "services/core/java/com/android/server/connectivity/Nat464Xlat.java",
        "patchSetId": 10
      },
      "lineNbr": 218,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-02-20T13:59:32Z",
      "side": 1,
      "message": "I\u0027d prefer not to add such a check in this CL due to the risk of crashing other codepaths. Uploading as a separate CL on top of the stack.",
      "parentUuid": "42d91944_65f54cee",
      "range": {
        "startLine": 218,
        "startChar": 35,
        "endLine": 218,
        "endChar": 61
      },
      "revId": "144d9f7460ba474ebda5ac58b5d3d36d77e58bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96500f25_0ec61550",
        "filename": "services/core/java/com/android/server/connectivity/Nat464Xlat.java",
        "patchSetId": 10
      },
      "lineNbr": 218,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-02-21T06:17:22Z",
      "side": 1,
      "message": "Fair enough, thanks.",
      "parentUuid": "ab16748e_5301b6e2",
      "range": {
        "startLine": 218,
        "startChar": 35,
        "endLine": 218,
        "endChar": 61
      },
      "revId": "144d9f7460ba474ebda5ac58b5d3d36d77e58bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c18e8839_b1dc27f0",
        "filename": "services/core/java/com/android/server/connectivity/Nat464Xlat.java",
        "patchSetId": 10
      },
      "lineNbr": 302,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-02-20T10:29:49Z",
      "side": 1,
      "message": "But now without STOPPING, there is nothing expecting the interface removed message, and nothing prevents a quick start-stop-start scenario from leaving the device on a v6 network without clatd.\n\nHere is the scenario I am picturing :\n- Network comes up, CS calls clatd.start(). clatd starts, and this goes into STARTING.\n- IPv4 address appears (or any other reason), CS calls clatd.stop(). clatd stops, and this goes into IDLE.\n- IPv4 disappears, CS calls clatd.start(). clatd starts, and this goes into STARTING.\n- Notification that interface is up is delivered. This goes into RUNNING.\n- Notification that interface is down is delivered. handleInterfaceRemoved calls stop(), this goes into IDLE.\n- Notification that interface is up is delivered, ignored because !isStarting().\n- Nothing else happens and clatd is not running on this v6-only network.\n\nA possible idea to get completely rid of this issue would be to have the clatd interface change with each start, with a sequence number or something, but it looks like that\u0027d require deeper changes",
      "range": {
        "startLine": 302,
        "startChar": 12,
        "endLine": 302,
        "endChar": 18
      },
      "revId": "144d9f7460ba474ebda5ac58b5d3d36d77e58bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d686eb40_7588c975",
        "filename": "services/core/java/com/android/server/connectivity/Nat464Xlat.java",
        "patchSetId": 10
      },
      "lineNbr": 302,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-02-20T13:59:32Z",
      "side": 1,
      "message": "If I understand your comment correctly, in order for there to be a race the interface must come up before the first stop(), but the notification that the interface came up must be delayed past the first stop() and the second start(), such that the second start() causes the code to go from STARTING to RUNNING on the interface that was created by the previous start.\n\nI don\u0027t think that can happen in practice. We only stop and restart clat if an IPv4 address appears and then disappears, or if clatd crashes. If an IPv4 address is added and then removed, then for a race to occur the address has to be added and removed faster than the notification of the add arrives here. I don\u0027t think that can happen because:\n\n- For links that use DHCP, addresses live for at least 60 seconds (MINIMUM_LEASE).\n- On telephony links, IP addresses are provisioned at connect time, so while it\u0027s possible that IPv4 appears after IPv6 or vice versa, addresses don\u0027t disappear once they have appeared.\n\nAs for clatd crashing, that can cause us to restart clat, but there is no accompanying asynchronous event that can cause us to stop clat. I think that to see a race we\u0027d have to suffer a clatd crash just before an IPv4 address is added, which seems really unlikely.\n\nWe cannot change the clat interface name with each start because there are lots of assumptions in various places that the interface name is \"v4-\" plus the base interface name.",
      "parentUuid": "c18e8839_b1dc27f0",
      "range": {
        "startLine": 302,
        "startChar": 12,
        "endLine": 302,
        "endChar": 18
      },
      "revId": "144d9f7460ba474ebda5ac58b5d3d36d77e58bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fb387c8_800674af",
        "filename": "services/core/java/com/android/server/connectivity/Nat464Xlat.java",
        "patchSetId": 10
      },
      "lineNbr": 302,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-02-21T06:17:22Z",
      "side": 1,
      "message": "\u003e We only stop and restart clat if an IPv4 address appears and then disappears\n\nIt\u0027s pretty difficult to prove this. I think it\u0027s true, but the code allows for many other possibilities :\n\n- NetworkInfo#skip464xlat changes values (I don\u0027t think this ever happens to a given network, but then again it\u0027s all in OEM code)\n- NetworkInfo#mNetworkType changes in the lifetime of the network (I don\u0027t think that ever happens)\n- The network gets out of {CONNECTED,SUSPENDED} state and then back in (I don\u0027t think any agent does that, and CS might give them a pretty hard time if they do)\n\nThere\u0027s also the fact that AIUI binder calls are in principle susceptible to unbounded delays. But it may be reasonable to say that if that delay exceeds 60 seconds everything is probably broken anyway.\n\nSo all right, it\u0027s probably okay. Maybe I\u0027d suggest to add a comment that the start-stop-start-before-first-start-notification case would trip this if it ever happened but that it doesn\u0027t.",
      "parentUuid": "d686eb40_7588c975",
      "range": {
        "startLine": 302,
        "startChar": 12,
        "endLine": 302,
        "endChar": 18
      },
      "revId": "144d9f7460ba474ebda5ac58b5d3d36d77e58bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98648eed_ae82acd7",
        "filename": "services/core/java/com/android/server/connectivity/Nat464Xlat.java",
        "patchSetId": 10
      },
      "lineNbr": 302,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-02-21T15:16:49Z",
      "side": 1,
      "message": "Per in-person discussion: the current code also suffers from this race. If we do start-stop-start, and the first interface up notification is delayed for so long that it arrives after the second start, then the current code will also get very confused.\n\nOnce all the CLs in this patch series are merged, it will be possible to make things better, because:\n\n1. We will only remain in STARTING state for long enough for netd to fork/exec clatd and for clatd to create the tun interface. That\u0027s much better than the current state, where we stay in STARTING state until a NAT64 is detected (which may never happen).\n2. Once clatd is started, it\u0027s pretty much guaranteed to start unless there is a local error (which likely means the interface has gone down because the network is disappearing). Thus it is possible to treat this as an error condition instead of as an expected steady state.",
      "parentUuid": "1fb387c8_800674af",
      "range": {
        "startLine": 302,
        "startChar": 12,
        "endLine": 302,
        "endChar": 18
      },
      "revId": "144d9f7460ba474ebda5ac58b5d3d36d77e58bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad545420_269aca96",
        "filename": "services/core/java/com/android/server/connectivity/Nat464Xlat.java",
        "patchSetId": 10
      },
      "lineNbr": 308,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-02-20T10:29:49Z",
      "side": 1,
      "message": "update",
      "range": {
        "startLine": 308,
        "startChar": 92,
        "endLine": 308,
        "endChar": 98
      },
      "revId": "144d9f7460ba474ebda5ac58b5d3d36d77e58bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af52bbf1_aacae512",
        "filename": "services/core/java/com/android/server/connectivity/Nat464Xlat.java",
        "patchSetId": 10
      },
      "lineNbr": 308,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-02-20T13:59:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad545420_269aca96",
      "range": {
        "startLine": 308,
        "startChar": 92,
        "endLine": 308,
        "endChar": 98
      },
      "revId": "144d9f7460ba474ebda5ac58b5d3d36d77e58bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d423d719_9636e5b5",
        "filename": "services/core/java/com/android/server/connectivity/NetworkAgentInfo.java",
        "patchSetId": 10
      },
      "lineNbr": 599,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-02-20T10:29:49Z",
      "side": 1,
      "message": "()\n\n...does this build ?",
      "range": {
        "startLine": 599,
        "startChar": 34,
        "endLine": 599,
        "endChar": 35
      },
      "revId": "144d9f7460ba474ebda5ac58b5d3d36d77e58bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c51e3de0_cb6645a4",
        "filename": "services/core/java/com/android/server/connectivity/NetworkAgentInfo.java",
        "patchSetId": 10
      },
      "lineNbr": 599,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-02-20T13:59:32Z",
      "side": 1,
      "message": "No :-). It was fixed in Ida32d5760c5aecf7aeebef08fdb596291b2ce14a. Done.",
      "parentUuid": "d423d719_9636e5b5",
      "range": {
        "startLine": 599,
        "startChar": 34,
        "endLine": 599,
        "endChar": 35
      },
      "revId": "144d9f7460ba474ebda5ac58b5d3d36d77e58bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b05f788e_82ad8ae9",
        "filename": "services/core/java/com/android/server/connectivity/NetworkAgentInfo.java",
        "patchSetId": 10
      },
      "lineNbr": 599,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-02-21T06:17:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c51e3de0_cb6645a4",
      "range": {
        "startLine": 599,
        "startChar": 34,
        "endLine": 599,
        "endChar": 35
      },
      "revId": "144d9f7460ba474ebda5ac58b5d3d36d77e58bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d61dad9_9e62ff4c",
        "filename": "tests/net/java/com/android/server/connectivity/Nat464XlatTest.java",
        "patchSetId": 10
      },
      "lineNbr": 150,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-02-20T10:29:49Z",
      "side": 1,
      "message": "Curious : why 2 ?",
      "range": {
        "startLine": 150,
        "startChar": 36,
        "endLine": 150,
        "endChar": 37
      },
      "revId": "144d9f7460ba474ebda5ac58b5d3d36d77e58bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}