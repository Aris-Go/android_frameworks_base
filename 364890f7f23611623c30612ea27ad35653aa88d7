{
  "comments": [
    {
      "key": {
        "uuid": "1571e23f_53a7708e",
        "filename": "services/core/java/com/android/server/net/NetworkStatsService.java",
        "patchSetId": 3
      },
      "lineNbr": 398,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-05-17T14:57:02Z",
      "side": 1,
      "message": "While you\u0027re at it, can you just remove this, and also remove this gem of a method from NetworkManagementService?\n\n    @Override\n    public boolean isBandwidthControlEnabled() {\n        mContext.enforceCallingOrSelfPermission(CONNECTIVITY_INTERNAL, TAG);\n        return true;\n    }\n\n:-)\n\nBandwidth control is always enabled.",
      "range": {
        "startLine": 398,
        "startChar": 48,
        "endLine": 398,
        "endChar": 76
      },
      "revId": "364890f7f23611623c30612ea27ad35653aa88d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44dda2aa_a3a9984e",
        "filename": "services/core/java/com/android/server/net/NetworkStatsService.java",
        "patchSetId": 3
      },
      "lineNbr": 425,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-05-17T14:57:02Z",
      "side": 1,
      "message": "The fact that this synchronized block ends here means that other code in this function can execute concurrently with any function that calls assertSystemReady. Is that safe?\n\nOn the face of it seems incorrect registerPollAlarmLocked without holding the lock, but in practice that method is only called from systemReady so it doesn\u0027t seem to matter. That method should probably be renamed to something that doesn\u0027t contain the word Locked, or better yet, the if (mPollIntent !\u003d null) check should be removed and registering the alarm (which is the only thing registerPollAlarmLocked does) should be moved into systemReady directly.\n\nNot sure about registerGlobalAlert. That method seems to assume it\u0027s called from the handler thread, so calling it here from systemReady seems inadvisable. It\u0027s possible though very unlikely that this call to registerGlobalAlert could race with another copy of itself that is running on the handler thread.",
      "range": {
        "startLine": 425,
        "startChar": 8,
        "endLine": 425,
        "endChar": 9
      },
      "revId": "364890f7f23611623c30612ea27ad35653aa88d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1733c01d_b1c21b25",
        "filename": "services/core/java/com/android/server/net/NetworkStatsService.java",
        "patchSetId": 3
      },
      "lineNbr": 1822,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-05-17T14:57:02Z",
      "side": 1,
      "message": "Generally speaking you don\u0027t want to mess with mStatsLock if you can avoid it. It\u0027s often under pressure and frequently contributes to deadlocks. Instead of doing this, why not just make mSystemReady volatile, and set it to true later in systemReady() than happens today?",
      "range": {
        "startLine": 1822,
        "startChar": 8,
        "endLine": 1822,
        "endChar": 20
      },
      "revId": "364890f7f23611623c30612ea27ad35653aa88d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}