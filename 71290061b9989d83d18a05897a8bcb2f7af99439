{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a363bc40_c57fa389",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 7,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2020-10-02T02:13:15Z",
      "side": 1,
      "message": "In AOSP code, DO NOT MERGE is almost never what you want. Unless this message is meant for humans to tell them not to merge the CL? If so, suggest \"DO NOT SUBMIT\".",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 12
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b8bddfc_a7ff17a6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 7,
      "author": {
        "id": 1606087
      },
      "writtenOn": "2020-10-25T23:39:47Z",
      "side": 1,
      "message": "I \"thought\" I needed it earlier due to a downstream conflict with internal master before AOSP was resynced.  I could have been mistaken...\n\nEither way... don\u0027t need it anymore",
      "parentUuid": "a363bc40_c57fa389",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 12
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdfa86b0_a9499269",
        "filename": "api/system-current.txt",
        "patchSetId": 9
      },
      "lineNbr": 4707,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2020-10-02T02:13:15Z",
      "side": 1,
      "message": "Is there a reason none of the APIs here are public? Do we not want to support non-preinstalled apps?",
      "range": {
        "startLine": 4707,
        "startChar": 24,
        "endLine": 4707,
        "endChar": 35
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18658436_27349f4a",
        "filename": "api/system-current.txt",
        "patchSetId": 9
      },
      "lineNbr": 4707,
      "author": {
        "id": 1606087
      },
      "writtenOn": "2020-10-25T23:39:47Z",
      "side": 1,
      "message": "This is only supports Bearers coming from the IMS network which is restricted, and so we decided to keep it as a SystemApi until we have another use case.",
      "parentUuid": "bdfa86b0_a9499269",
      "range": {
        "startLine": 4707,
        "startChar": 24,
        "endLine": 4707,
        "endChar": 35
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc5fabef_d486f2e7",
        "filename": "api/system-current.txt",
        "patchSetId": 9
      },
      "lineNbr": 4707,
      "author": {
        "id": 1606087
      },
      "writtenOn": "2020-11-24T23:59:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18658436_27349f4a",
      "range": {
        "startLine": 4707,
        "startChar": 24,
        "endLine": 4707,
        "endChar": 35
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "facec56d_6b9772dd",
        "filename": "api/system-current.txt",
        "patchSetId": 9
      },
      "lineNbr": 4721,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2020-10-02T02:13:15Z",
      "side": 1,
      "message": "This doesn\u0027t look like it should be public.",
      "range": {
        "startLine": 4721,
        "startChar": 4,
        "endLine": 4721,
        "endChar": 66
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c99a4a8b_741f7d20",
        "filename": "api/system-current.txt",
        "patchSetId": 9
      },
      "lineNbr": 4721,
      "author": {
        "id": 1606087
      },
      "writtenOn": "2020-10-25T23:39:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facec56d_6b9772dd",
      "range": {
        "startLine": 4721,
        "startChar": 4,
        "endLine": 4721,
        "endChar": 66
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c60af700_f7078948",
        "filename": "api/system-current.txt",
        "patchSetId": 9
      },
      "lineNbr": 4730,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2020-10-02T02:13:15Z",
      "side": 1,
      "message": "Nit: do we need an exception for this? A network connecting and disconnecting is not an exceptional event.",
      "range": {
        "startLine": 4730,
        "startChar": 32,
        "endLine": 4730,
        "endChar": 56
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78ae5c38_b41e1941",
        "filename": "api/system-current.txt",
        "patchSetId": 9
      },
      "lineNbr": 4730,
      "author": {
        "id": 1606087
      },
      "writtenOn": "2020-10-25T23:39:47Z",
      "side": 1,
      "message": "An exception is the only way we have to provide a message like this to the api consumer.  I initially proposed having an \"onDestroyed\" event with reasons on the callback but it made the API surface bloated.  Let me know if you have any other ways to deal with it.",
      "parentUuid": "c60af700_f7078948",
      "range": {
        "startLine": 4730,
        "startChar": 32,
        "endLine": 4730,
        "endChar": 56
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70d24cb5_e780b7db",
        "filename": "api/system-current.txt",
        "patchSetId": 9
      },
      "lineNbr": 4730,
      "author": {
        "id": 1606087
      },
      "writtenOn": "2021-01-21T19:45:22Z",
      "side": 1,
      "message": "I\u0027m guessing you\u0027re ok to close this.",
      "parentUuid": "78ae5c38_b41e1941",
      "range": {
        "startLine": 4730,
        "startChar": 32,
        "endLine": 4730,
        "endChar": 56
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6798c5d7_b7bb4096",
        "filename": "api/system-current.txt",
        "patchSetId": 9
      },
      "lineNbr": 8563,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2020-10-02T02:13:15Z",
      "side": 1,
      "message": "Is this an IP address and port? If so, then why not simply use InetSocketAddress? If it\u0027s \"a range of IP addresses all on the same port\", then use IpPrefix instead of LinkAddress.",
      "range": {
        "startLine": 8563,
        "startChar": 116,
        "endLine": 8563,
        "endChar": 159
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2fbaaecc_08d9b937",
        "filename": "api/system-current.txt",
        "patchSetId": 9
      },
      "lineNbr": 8563,
      "author": {
        "id": 1606087
      },
      "writtenOn": "2020-10-25T23:39:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6798c5d7_b7bb4096",
      "range": {
        "startLine": 8563,
        "startChar": 116,
        "endLine": 8563,
        "endChar": 159
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca58a3a3_d5e4fb2b",
        "filename": "core/java/android/net/QosCallbackException.java",
        "patchSetId": 9
      },
      "lineNbr": 53,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2020-10-02T02:13:15Z",
      "side": 1,
      "message": "Can the user close the socket? If so, what happens then? Will there be an exception, either immediately or at some future point in time? If the user closes the socket, is it guaranteed that no future callbacks will arrive for that socket?",
      "range": {
        "startLine": 53,
        "startChar": 4,
        "endLine": 53,
        "endChar": 6
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ccc17ea6_8b228c0b",
        "filename": "core/java/android/net/QosCallbackException.java",
        "patchSetId": 9
      },
      "lineNbr": 53,
      "author": {
        "id": 1606087
      },
      "writtenOn": "2020-11-10T19:58:36Z",
      "side": 1,
      "message": "Everytime an event is passed back the file descriptor is checked to make sure the socket has not closed and the local address has not changed.  If either occur, then an exception is passed back to the consumer and the callback is unregistered.\n\nEach of the individual exceptions have that information in the java doc.",
      "parentUuid": "ca58a3a3_d5e4fb2b",
      "range": {
        "startLine": 53,
        "startChar": 4,
        "endLine": 53,
        "endChar": 6
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08dd06a9_e8fce8a3",
        "filename": "core/java/android/net/QosCallbackException.java",
        "patchSetId": 9
      },
      "lineNbr": 79,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2020-10-02T02:13:15Z",
      "side": 1,
      "message": "This can\u0027t ever return null so @Nullable is incorrect.",
      "range": {
        "startLine": 79,
        "startChar": 4,
        "endLine": 79,
        "endChar": 13
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "44d56fdd_ea7c9157",
        "filename": "core/java/android/net/QosCallbackException.java",
        "patchSetId": 9
      },
      "lineNbr": 79,
      "author": {
        "id": 1606087
      },
      "writtenOn": "2020-10-25T23:39:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08dd06a9_e8fce8a3",
      "range": {
        "startLine": 79,
        "startChar": 4,
        "endLine": 79,
        "endChar": 13
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b69c5b1_86902442",
        "filename": "core/java/android/net/QosFilter.java",
        "patchSetId": 9
      },
      "lineNbr": 44,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2020-10-02T02:13:15Z",
      "side": 1,
      "message": "Need to clarify \"binding\" here. If \"binding\" is used in the sense of, say, Network#bindSocket, then this statement is not really true because there is no reliable way, given a socket, to determine what network it\u0027s bound to. If \"binding\" means \"local IP address and port\", or \"local and remote IP addresses, and local and remote ports\", then you should clarify that.",
      "range": {
        "startLine": 43,
        "startChar": 64,
        "endLine": 44,
        "endChar": 24
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c54d9dcc_224a9e93",
        "filename": "core/java/android/net/QosFilter.java",
        "patchSetId": 9
      },
      "lineNbr": 44,
      "author": {
        "id": 1606087
      },
      "writtenOn": "2020-10-25T23:39:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b69c5b1_86902442",
      "range": {
        "startLine": 43,
        "startChar": 64,
        "endLine": 44,
        "endChar": 24
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c003d621_9e0a2aa2",
        "filename": "core/java/android/net/QosFilter.java",
        "patchSetId": 9
      },
      "lineNbr": 46,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2020-10-02T02:13:15Z",
      "side": 1,
      "message": "This should probably say that the callback will only report QOS changes on this network.",
      "range": {
        "startLine": 46,
        "startChar": 51,
        "endLine": 46,
        "endChar": 52
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10858546_d82d40c4",
        "filename": "core/java/android/net/QosFilter.java",
        "patchSetId": 9
      },
      "lineNbr": 46,
      "author": {
        "id": 1606087
      },
      "writtenOn": "2020-10-25T23:39:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c003d621_9e0a2aa2",
      "range": {
        "startLine": 46,
        "startChar": 51,
        "endLine": 46,
        "endChar": 52
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc51dbef_71191076",
        "filename": "core/java/android/net/QosFilter.java",
        "patchSetId": 9
      },
      "lineNbr": 80,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2020-10-02T02:13:15Z",
      "side": 1,
      "message": "This name is grammatically incorrect. You could call this NotSupportedException or FilterNotSupportedException. But there\u0027s already UnsupportedOperationException which you could use.",
      "range": {
        "startLine": 80,
        "startChar": 24,
        "endLine": 80,
        "endChar": 34
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2fe01de_58f3fad2",
        "filename": "core/java/android/net/QosFilter.java",
        "patchSetId": 9
      },
      "lineNbr": 80,
      "author": {
        "id": 1606087
      },
      "writtenOn": "2020-10-25T23:39:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc51dbef_71191076",
      "range": {
        "startLine": 80,
        "startChar": 24,
        "endLine": 80,
        "endChar": 34
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c185e9da_d4d349fd",
        "filename": "core/java/android/net/QosSession.java",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2020-10-02T02:13:15Z",
      "side": 1,
      "message": "This should be documented.",
      "range": {
        "startLine": 34,
        "startChar": 28,
        "endLine": 34,
        "endChar": 43
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb35d4be_d1424ec3",
        "filename": "core/java/android/net/QosSession.java",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 1606087
      },
      "writtenOn": "2020-10-25T23:39:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c185e9da_d4d349fd",
      "range": {
        "startLine": 34,
        "startChar": 28,
        "endLine": 34,
        "endChar": 43
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6430285e_e6b12089",
        "filename": "core/java/android/net/QosSocketFilter.java",
        "patchSetId": 9
      },
      "lineNbr": 55,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2020-10-02T02:13:15Z",
      "side": 1,
      "message": "For UDP sockets, this can change even if the socket is still usable. What will the system do in that case?",
      "range": {
        "startLine": 55,
        "startChar": 30,
        "endLine": 55,
        "endChar": 43
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72716951_30999c71",
        "filename": "core/java/android/net/QosSocketFilter.java",
        "patchSetId": 9
      },
      "lineNbr": 55,
      "author": {
        "id": 1606087
      },
      "writtenOn": "2020-10-25T23:39:47Z",
      "side": 1,
      "message": "Removed this so that os.getsockname is called in getLocalAddress.  (I\u0027m hoping there isn\u0027t a huge overhead with calling this every time, if there is, I can change things around.)\n\nI also changed the validation logic to support the UDP use case, see comment below.",
      "parentUuid": "6430285e_e6b12089",
      "range": {
        "startLine": 55,
        "startChar": 30,
        "endLine": 55,
        "endChar": 43
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "adfd1f53_f67081b1",
        "filename": "core/java/android/net/QosSocketFilter.java",
        "patchSetId": 9
      },
      "lineNbr": 187,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2020-10-02T02:13:15Z",
      "side": 1,
      "message": "How does the system detect this case? By calling getsockname and seeing if the result is non-null? For UDP sockets the local port can change and I think can both go from null to non-null and from non-null to null.",
      "range": {
        "startLine": 187,
        "startChar": 15,
        "endLine": 187,
        "endChar": 38
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33ef513b_3dae5827",
        "filename": "core/java/android/net/QosSocketFilter.java",
        "patchSetId": 9
      },
      "lineNbr": 187,
      "author": {
        "id": 1606087
      },
      "writtenOn": "2020-10-25T23:39:47Z",
      "side": 1,
      "message": "I didn\u0027t realized, fixed it.  (We technically don\u0027t support UDP form the API surface but I think there\u0027s a way around it, regardless, it\u0027s good to check for.)\n\ntldr;\nYou can look at the code, but this is what I did to remedy:\nQosCallbackSocketValidator now stores the local address when it is first created.  Each time a new session is about to be passed back to the API consumer, the validator ensures that the local address of the fd still matches the one originally captured.",
      "parentUuid": "adfd1f53_f67081b1",
      "range": {
        "startLine": 187,
        "startChar": 15,
        "endLine": 187,
        "endChar": 38
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48b2c1c2_15f11718",
        "filename": "telephony/java/android/telephony/EpsBearerQosSessionAttributes.java",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2020-10-02T02:13:15Z",
      "side": 1,
      "message": "EPS",
      "range": {
        "startLine": 34,
        "startChar": 33,
        "endLine": 34,
        "endChar": 36
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f897206_87c3ab5e",
        "filename": "telephony/java/android/telephony/EpsBearerQosSessionAttributes.java",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 1606087
      },
      "writtenOn": "2020-10-25T23:39:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48b2c1c2_15f11718",
      "range": {
        "startLine": 34,
        "startChar": 33,
        "endLine": 34,
        "endChar": 36
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e8871b4_8883afcb",
        "filename": "telephony/java/android/telephony/EpsBearerQosSessionAttributes.java",
        "patchSetId": 9
      },
      "lineNbr": 56,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2020-10-02T02:13:15Z",
      "side": 1,
      "message": "Since this is an acronym, capitalize it. Quality Class Indicator. Also: where is this defined? Suggest linking to relevant 3GPP spec. The link could be here on this method and/or at the class level.",
      "range": {
        "startLine": 56,
        "startChar": 11,
        "endLine": 56,
        "endChar": 34
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ef5089d_40a92178",
        "filename": "telephony/java/android/telephony/EpsBearerQosSessionAttributes.java",
        "patchSetId": 9
      },
      "lineNbr": 56,
      "author": {
        "id": 1606087
      },
      "writtenOn": "2020-10-25T23:39:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e8871b4_8883afcb",
      "range": {
        "startLine": 56,
        "startChar": 11,
        "endLine": 56,
        "endChar": 34
      },
      "revId": "71290061b9989d83d18a05897a8bcb2f7af99439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}