{
  "comments": [
    {
      "key": {
        "uuid": "eae4be82_a2954128",
        "filename": "tests/net/java/com/android/server/ConnectivityServiceTest.java",
        "patchSetId": 10
      },
      "lineNbr": 153,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2017-10-13T06:55:26Z",
      "side": 1,
      "message": "s/theorical/theoretical/",
      "range": {
        "startLine": 153,
        "startChar": 34,
        "endLine": 153,
        "endChar": 43
      },
      "revId": "230f3d1632104257653bc2f68eea7152741f58ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d874057_e59a3dbf",
        "filename": "tests/net/java/com/android/server/ConnectivityServiceTest.java",
        "patchSetId": 10
      },
      "lineNbr": 872,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-10-13T04:04:46Z",
      "side": 1,
      "message": "Per in-person discussion, if we want to ensure that people don\u0027t forget to unregister callbacks, then let\u0027s do it in a way that doesn\u0027t cost us anything.\n\nFor example, you could add a method to WrappedConnectivityService to count the number of requests that have been filed, and throw an exception if it\u0027s zero.\n\nOr, you could have WrappedConnectivityManager keep track of all requests that have been filed, and in tearDown, scan through them and call unregisterNetworkCallback on each of them. This is similar to the code right below here that tears down all mock network agents.",
      "range": {
        "startLine": 870,
        "startChar": 0,
        "endLine": 872,
        "endChar": 9
      },
      "revId": "230f3d1632104257653bc2f68eea7152741f58ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbb00cde_6b9f85de",
        "filename": "tests/net/java/com/android/server/ConnectivityServiceTest.java",
        "patchSetId": 10
      },
      "lineNbr": 872,
      "author": {
        "id": 1107893
      },
      "writtenOn": "2017-10-13T14:20:35Z",
      "side": 1,
      "message": "I looked a bit more at that this afternoon but I actually don\u0027t like much the idea of adding more artificial probes on top of WrapperConnectivityService or another wrapper.\n\nYou convinced me that the benefits is not worth the cost if going down that path.\n\nThe method I had here has the nice benefit of adding zero test boilerplate or other scaffolding since it relies purely on the api, but unfortunately it is not free if I need to wait until unregistration is done for all ~100 requests.\n\nI could actually skip the unregistration and completely remove the crosstal by doing something about the ConnectivityManager static map for test.\n\nSo here is the middle ground I am proposing:\n - add a package private ctor to ConnectivityManager for accepting a request map that is non-static for tests.\n - the real ConnectivityManager uses the static map (no functional change)\n - I keep the verification step as is, but without unregistration.\n\nI am going to test this and see how much time this adds to the tests.",
      "parentUuid": "0d874057_e59a3dbf",
      "range": {
        "startLine": 870,
        "startChar": 0,
        "endLine": 872,
        "endChar": 9
      },
      "revId": "230f3d1632104257653bc2f68eea7152741f58ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e78efd18_870f175e",
        "filename": "tests/net/java/com/android/server/ConnectivityServiceTest.java",
        "patchSetId": 10
      },
      "lineNbr": 872,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-10-13T15:21:26Z",
      "side": 1,
      "message": "Ack.\n\nI\u0027m still not convinced it\u0027s worth forcing ourselves to include cleanup code in every testcase just in case someone copy+pastes code from this test and thinks it\u0027s not necessary to unregister callbacks in non-test code.\n\nBut if it can be done with no performance penalty and not too much additional complexity I guess it\u0027s OK.",
      "parentUuid": "bbb00cde_6b9f85de",
      "range": {
        "startLine": 870,
        "startChar": 0,
        "endLine": 872,
        "endChar": 9
      },
      "revId": "230f3d1632104257653bc2f68eea7152741f58ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87c2b1fa_2daaf4fe",
        "filename": "tests/net/java/com/android/server/ConnectivityServiceTest.java",
        "patchSetId": 10
      },
      "lineNbr": 872,
      "author": {
        "id": 1107893
      },
      "writtenOn": "2017-10-13T15:35:56Z",
      "side": 1,
      "message": "For posterity I uploaded the patchset that does what I proposed and this is not too much intrusive.\n\nHowever this does add a few additional seconds.\nSo my conclusion is that this is not worth adding.\n\nI ll abandon this change. Thanks for the discussion.",
      "parentUuid": "e78efd18_870f175e",
      "range": {
        "startLine": 870,
        "startChar": 0,
        "endLine": 872,
        "endChar": 9
      },
      "revId": "230f3d1632104257653bc2f68eea7152741f58ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}