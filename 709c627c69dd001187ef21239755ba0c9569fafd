{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a967bb8e_d32a0245",
        "filename": "config/preloaded-classes",
        "patchSetId": 1
      },
      "lineNbr": 1158,
      "author": {
        "id": 1085519
      },
      "writtenOn": "2021-11-04T20:22:07Z",
      "side": 1,
      "message": "this should not be needed",
      "revId": "709c627c69dd001187ef21239755ba0c9569fafd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e9f853b_eb1220de",
        "filename": "config/preloaded-classes",
        "patchSetId": 1
      },
      "lineNbr": 1158,
      "author": {
        "id": 1085519
      },
      "writtenOn": "2021-12-10T16:35:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a967bb8e_d32a0245",
      "revId": "709c627c69dd001187ef21239755ba0c9569fafd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7015db0e_e67d158e",
        "filename": "core/java/android/bluetooth/BluetoothAdapter.java",
        "patchSetId": 1
      },
      "lineNbr": 2035,
      "author": {
        "id": 1087037
      },
      "writtenOn": "2021-11-09T18:54:22Z",
      "side": 1,
      "message": "You need to handle LE Audio here too for telephony",
      "range": {
        "startLine": 2034,
        "startChar": 38,
        "endLine": 2035,
        "endChar": 47
      },
      "revId": "709c627c69dd001187ef21239755ba0c9569fafd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e3e9ae4_c8e903b5",
        "filename": "core/java/android/bluetooth/BluetoothAdapter.java",
        "patchSetId": 1
      },
      "lineNbr": 2035,
      "author": {
        "id": 1085519
      },
      "writtenOn": "2021-12-06T18:27:09Z",
      "side": 1,
      "message": "Done in other patch.",
      "parentUuid": "7015db0e_e67d158e",
      "range": {
        "startLine": 2034,
        "startChar": 38,
        "endLine": 2035,
        "endChar": 47
      },
      "revId": "709c627c69dd001187ef21239755ba0c9569fafd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "367c3fbc_d0a548d7",
        "filename": "core/java/android/bluetooth/BluetoothTbs.java",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1087037
      },
      "writtenOn": "2021-11-10T11:53:01Z",
      "side": 1,
      "message": "Should this be called BluetoothCallControl ?\nIt\u0027s call control profile that sits on top of TBS",
      "range": {
        "startLine": 64,
        "startChar": 19,
        "endLine": 64,
        "endChar": 31
      },
      "revId": "709c627c69dd001187ef21239755ba0c9569fafd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "542d17d1_3e4ff98f",
        "filename": "core/java/android/bluetooth/BluetoothTbs.java",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1085519
      },
      "writtenOn": "2021-12-06T18:27:09Z",
      "side": 1,
      "message": "Wouldn\u0027t this mislead that we actually implement the client side of that profile?\nImho TBS makes things clear.\n\nMaybe BluetoothCallControlTBS ?",
      "parentUuid": "367c3fbc_d0a548d7",
      "range": {
        "startLine": 64,
        "startChar": 19,
        "endLine": 64,
        "endChar": 31
      },
      "revId": "709c627c69dd001187ef21239755ba0c9569fafd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fbcbf14_5d9fb94a",
        "filename": "core/java/android/bluetooth/BluetoothTbs.java",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1730162
      },
      "writtenOn": "2021-12-13T14:37:48Z",
      "side": 1,
      "message": "Per chat, I like this one, BluetoothCallControlTBS, and think it\u0027s a good idea to cover the profile level meaning and the server meaning. Thanks for the proposal.",
      "parentUuid": "542d17d1_3e4ff98f",
      "range": {
        "startLine": 64,
        "startChar": 19,
        "endLine": 64,
        "endChar": 31
      },
      "revId": "709c627c69dd001187ef21239755ba0c9569fafd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e17e3d1_0d7cd1f1",
        "filename": "core/java/android/bluetooth/BluetoothTbs.java",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1121403
      },
      "writtenOn": "2021-12-13T23:47:35Z",
      "side": 1,
      "message": "We normally do not want to expose low layer technology names to upper layer, therefore, maybe something like BluetoothLeCallControl is better? \n\nMoreover, typically the profiles mean phone side profiles, if we have client side profiles, we will name them as clients for example\n\nBluetoothHeadset vs BluetoothHeadsetClient\nBluetoothLeAudio vs BluetoothLeAudioClient\n\nand for this one\n\nBluetoothLeCallControl vs BluetoothLeCallControlClient",
      "parentUuid": "2fbcbf14_5d9fb94a",
      "range": {
        "startLine": 64,
        "startChar": 19,
        "endLine": 64,
        "endChar": 31
      },
      "revId": "709c627c69dd001187ef21239755ba0c9569fafd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "853181b3_aed6feb8",
        "filename": "core/java/android/bluetooth/BluetoothTbs.java",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1546552
      },
      "writtenOn": "2021-12-14T00:10:56Z",
      "side": 1,
      "message": "I spoke to Jack and we agreed that following the hfp pattern is best. This class should be BluetoothLeCallControl and the client implementation should be in the BluetoothLeCallControlClient class.",
      "parentUuid": "8e17e3d1_0d7cd1f1",
      "range": {
        "startLine": 64,
        "startChar": 19,
        "endLine": 64,
        "endChar": 31
      },
      "revId": "709c627c69dd001187ef21239755ba0c9569fafd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "487e70e7_9b0d888e",
        "filename": "core/java/android/bluetooth/BluetoothTbs.java",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1085519
      },
      "writtenOn": "2021-12-14T09:15:12Z",
      "side": 1,
      "message": "The problem is with a \"Client\" here as this is not a client.\nThe other problem is with \"Le\" as TBS is over GATT which in could be used over BR/EDR (even hopefully nobody is doing it)\nRegarding technology names - tbs is on the same level as avrcp or a2dp.\n\nBluetoothCallControlTbs would not work?",
      "parentUuid": "853181b3_aed6feb8",
      "range": {
        "startLine": 64,
        "startChar": 19,
        "endLine": 64,
        "endChar": 31
      },
      "revId": "709c627c69dd001187ef21239755ba0c9569fafd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "306dd090_b30e74fb",
        "filename": "core/java/android/bluetooth/BluetoothTbs.java",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1121403
      },
      "writtenOn": "2021-12-14T09:27:17Z",
      "side": 1,
      "message": "This class will be the server side API and hence BluetoothLeCallControl\n\nFrom TBS spec:\n\nServer: The device that contains the TBS\nClient: The device(s) that connects to the Telephone Bearer Service (TBS)\nand accesses the characteristics on the TBS.\n\nSo only the server will implement the operations behind GATT that does the call control work. Even though there is no client implementation, one would still need a client side wrapper around GATT to achieve a TBS client abstraction. \n\nSince we do not expect anyone to connect TBS over BR/EDR, we can restrict it on LE so that our expectation is clear. \n\nAs for the naming, maybe think about how a generic App developer will read the API:\n\nBluetoothLeCallControl -\u003e means the call control profile to be used in BLE\nBluetoothCallControlTbs -\u003e CallControl and TBS is kind of repeating each other\u0027s meanings as Call Control and Telephone Bearer Service are layer names of the same protocol stack. \n\nThat\u0027s why I kind of prefer a more readable and precise name like BluetoothLeCallControl, also similar to other BLE audio profile names like BluetoothLeAudio and BluetoothLeBroadcast",
      "parentUuid": "487e70e7_9b0d888e",
      "range": {
        "startLine": 64,
        "startChar": 19,
        "endLine": 64,
        "endChar": 31
      },
      "revId": "709c627c69dd001187ef21239755ba0c9569fafd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}