{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "98dd26d3_d91a7d80",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1320563
      },
      "writtenOn": "2024-10-16T01:57:54Z",
      "side": 1,
      "message": "Could you provide the comparison of before/after?\ne.g. the [trace](https://perfetto.dev/docs/quickstart/android-tracing) of original code https://imgur.com/o1YxQVE\nIt seems that there is no obvious interval.",
      "range": {
        "startLine": 11,
        "startChar": 4,
        "endLine": 11,
        "endChar": 12
      },
      "revId": "fed99f1770ca4e08d23fc88dc658d4b4262171b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d12140ab_abbe4079",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1945881
      },
      "writtenOn": "2024-10-16T02:12:01Z",
      "side": 1,
      "message": "Where should the trace be uploaded?\n\nBecause `addWindow` is time-consuming, and vsync is requested at the end of `addWindow`.",
      "parentUuid": "98dd26d3_d91a7d80",
      "range": {
        "startLine": 11,
        "startChar": 4,
        "endLine": 11,
        "endChar": 12
      },
      "revId": "fed99f1770ca4e08d23fc88dc658d4b4262171b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bf7af48_204fd736",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1320563
      },
      "writtenOn": "2024-10-16T02:21:39Z",
      "side": 1,
      "message": "It\u0027s fine to use google drive or photo/imgur for screenshot.\n\nThe vsync is already requested when calling addView -\u003e ViewRootImpl#setView -\u003e ViewRootImpl#requestLayout.\nAs above screenshot link, there is an arrow(`^`) under `addRootView` before the first binder transaction, that\u0027s the vsync request.\nSo usually it is early enough that it requests before the binder call `addToDisplayAsUser`.",
      "parentUuid": "d12140ab_abbe4079",
      "range": {
        "startLine": 11,
        "startChar": 4,
        "endLine": 11,
        "endChar": 12
      },
      "revId": "fed99f1770ca4e08d23fc88dc658d4b4262171b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b68d3c0_3d9a77a2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1945881
      },
      "writtenOn": "2024-10-16T03:15:09Z",
      "side": 1,
      "message": "The [trace snapshot](https://drive.google.com/drive/folders/1L4GWpZZRz5YliaRxJiixNMgYtdwkaVKD?usp\u003dsharing) has been uploaded.",
      "parentUuid": "4bf7af48_204fd736",
      "range": {
        "startLine": 11,
        "startChar": 4,
        "endLine": 11,
        "endChar": 12
      },
      "revId": "fed99f1770ca4e08d23fc88dc658d4b4262171b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39071b12_a360afb3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1320563
      },
      "writtenOn": "2024-10-17T03:08:06Z",
      "side": 1,
      "message": "Thanks for the sharing. Looks like it is easier to happen if the refresh rate is not high (vsync interval is longer).",
      "parentUuid": "6b68d3c0_3d9a77a2",
      "range": {
        "startLine": 11,
        "startChar": 4,
        "endLine": 11,
        "endChar": 12
      },
      "revId": "fed99f1770ca4e08d23fc88dc658d4b4262171b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c8eac26_e671fc50",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1945881
      },
      "writtenOn": "2024-10-14T15:11:15Z",
      "side": 1,
      "message": "This change is ready for review.",
      "revId": "fed99f1770ca4e08d23fc88dc658d4b4262171b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eaf6d46b_4ba9b145",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3252618
      },
      "writtenOn": "2024-10-17T10:12:41Z",
      "side": 1,
      "message": "Removing myself as reviewer since I don\u0027t have as much visibility on this part of the codebase.",
      "revId": "fed99f1770ca4e08d23fc88dc658d4b4262171b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7e5f4c9_00930313",
        "filename": "libs/WindowManager/Shell/src/com/android/wm/shell/startingsurface/SplashscreenWindowCreator.java",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1320563
      },
      "writtenOn": "2024-10-16T06:15:23Z",
      "side": 1,
      "message": "How about simply trigger vsync here, which could even run earlier.\n```\n  // Pre-schedule vsync to run relayoutWindow by frame callback earlier.\n  mChoreographer.postFrameCallback(frameTimeNanos -\u003e {});\n```\nThat also avoids creating additional logic dependency.",
      "revId": "fed99f1770ca4e08d23fc88dc658d4b4262171b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7111af8_6026fda9",
        "filename": "libs/WindowManager/Shell/src/com/android/wm/shell/startingsurface/SplashscreenWindowCreator.java",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1945881
      },
      "writtenOn": "2024-10-16T14:05:41Z",
      "side": 1,
      "message": "That sounds awesome!\n\nCould we do something in the animation callback, such as releasing the icon view host when addWindow fails?\n```java\n// Pre-schedule vsync to run relayoutWindow by frame callback earlier.\nmChoreographer.postFrameCallback(frameTimeNanos -\u003e {\n    if (record \u003d\u003d null) {\n        final SplashScreenView contentView \u003d viewSupplier.get();\n        // release the icon view host\n        if (contentView.getSurfaceHost() !\u003d null) {\n            SplashScreenView.releaseIconHost(contentView.getSurfaceHost());\n        }\n        return;\n    }\n});\n```\n\nOtherwise, when addWindow fails, we may waste a `Choreographer#doFrame`",
      "parentUuid": "d7e5f4c9_00930313",
      "revId": "fed99f1770ca4e08d23fc88dc658d4b4262171b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbf0dcd2_fa04e2db",
        "filename": "libs/WindowManager/Shell/src/com/android/wm/shell/startingsurface/SplashscreenWindowCreator.java",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1320563
      },
      "writtenOn": "2024-10-17T03:08:06Z",
      "side": 1,
      "message": "It is not common that addWindow fails.\nAnd the failure is usually from the return value of addToDisplayAsUser.\nBut in ViewRootImpl#setView, requestLayout was still called before addToDisplayAsUser, so the result is the same that there will still be an empty doFrame even if without this change.",
      "parentUuid": "f7111af8_6026fda9",
      "revId": "fed99f1770ca4e08d23fc88dc658d4b4262171b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3aa269e4_8aaf7fbc",
        "filename": "libs/WindowManager/Shell/src/com/android/wm/shell/startingsurface/SplashscreenWindowCreator.java",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1366584
      },
      "writtenOn": "2024-10-17T03:35:32Z",
      "side": 1,
      "message": "Sounds no difference then? Ideally the doFrame callback should happen immediately after addWindow.\n\naddWindow \u003dfail\u003d\u003e release surface host ... doFrame\u003d\u003e doNothing.\n\naddWindow \u003dfail\u003d\u003e doNothing ... doFrame\u003d\u003e release surface host.\n\nThe duration of \"...\" still depends on the device (frame rate). But this leaves a small possibility of receiving another new splash screen request from the service.",
      "parentUuid": "f7111af8_6026fda9",
      "revId": "fed99f1770ca4e08d23fc88dc658d4b4262171b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93c2bf24_c7fa8490",
        "filename": "libs/WindowManager/Shell/src/com/android/wm/shell/startingsurface/SplashscreenWindowCreator.java",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1945881
      },
      "writtenOn": "2024-10-17T10:03:41Z",
      "side": 1,
      "message": "\u003e It is not common that addWindow fails.\nAnd the failure is usually from the return value of addToDisplayAsUser.\nBut in ViewRootImpl#setView, requestLayout was still called before addToDisplayAsUser, so the result is the same that there will still be an empty doFrame even if without this change.\n\nYes, it is uncommon for addWindow to fail.\n\nI didn\u0027t consider that requestLayout happens before addToDisplayAsUser, so in theory, when addWindow fails, an empty doFrame will be executed (regardless of whether this change is enabled).\n\nThe reason why I wanted to release the icon view in the animation callback before was because we applied for Vsync in advance, and when addWindow fails, a doFrame will be wasted, so I wanted to do something in doFrame, but now it seems that this idea is redundant, because as long as addWindow fails, a doFrame will be wasted. So is there a way to cancel this doFrame when addWindow fails?",
      "parentUuid": "3aa269e4_8aaf7fbc",
      "revId": "fed99f1770ca4e08d23fc88dc658d4b4262171b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f58c022a_4a5f7acc",
        "filename": "libs/WindowManager/Shell/src/com/android/wm/shell/startingsurface/SplashscreenWindowCreator.java",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1945881
      },
      "writtenOn": "2024-10-17T10:09:22Z",
      "side": 1,
      "message": "\u003e Sounds no difference then? Ideally the doFrame callback should happen immediately after addWindow.\n\u003e addWindow \u003dfail\u003d\u003e release surface host ... doFrame\u003d\u003e doNothing.\n\u003e addWindow \u003dfail\u003d\u003e doNothing ... doFrame\u003d\u003e release surface host.\n\u003e The duration of \"...\" still depends on the device (frame rate). But this leaves a small possibility of receiving another new splash screen request from the service.\n\nThere seems to be no difference so far.\n\n```\n  // Pre-schedule vsync to run relayoutWindow by frame callback earlier.\n  mChoreographer.postFrameCallback(frameTimeNanos -\u003e {});\n```\nThe above code is reasonable, we can use it.\n\nDo you have any suggestions for number 2 in the comment?",
      "parentUuid": "93c2bf24_c7fa8490",
      "revId": "fed99f1770ca4e08d23fc88dc658d4b4262171b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}