{
  "comments": [
    {
      "key": {
        "uuid": "96a17f7d_f6e6377a",
        "filename": "core/java/android/net/Uri.java",
        "patchSetId": 1
      },
      "lineNbr": 1134,
      "author": {
        "id": 1000451
      },
      "writtenOn": "2018-10-18T20:08:46Z",
      "side": 1,
      "message": "I assume this means that we\u0027ll skip over %3A rather than treating that as a \":\"?  I assume that\u0027s fine; I\u0027m not very clear about how many layers of decoding need to be applied before various parsing stages can run.",
      "range": {
        "startLine": 1134,
        "startChar": 37,
        "endLine": 1134,
        "endChar": 56
      },
      "revId": "0940695f792ae0da998272f7f46409adb47ac3aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc8542fd_1cba99e7",
        "filename": "core/java/android/net/Uri.java",
        "patchSetId": 1
      },
      "lineNbr": 1134,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2018-10-19T02:26:17Z",
      "side": 1,
      "message": "I believe this is the correct thing to do. For example, if I say https://www.google.com%3A3128, this is not a URL for www.google.com on port 3128, but an address for www.google.com:3128 on the default port 80.",
      "parentUuid": "96a17f7d_f6e6377a",
      "range": {
        "startLine": 1134,
        "startChar": 37,
        "endLine": 1134,
        "endChar": 56
      },
      "revId": "0940695f792ae0da998272f7f46409adb47ac3aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d60250a0_0dfd9b4d",
        "filename": "core/java/android/net/Uri.java",
        "patchSetId": 1
      },
      "lineNbr": 1155,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-10-18T08:38:40Z",
      "side": 1,
      "message": "UTF-16?",
      "revId": "0940695f792ae0da998272f7f46409adb47ac3aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "252e46c2_34a077be",
        "filename": "core/java/android/net/Uri.java",
        "patchSetId": 1
      },
      "lineNbr": 1155,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2018-10-18T16:48:11Z",
      "side": 1,
      "message": "maybe going from front and skipping to first ]: if first char is [ would be easier?\n\nOr just first look for ]: and if that fails look for : ?\n\nOTOH, we already expect the tail after the : to be a parseable Integer so not sure if UTF16 matters (can it even be UTF16?)",
      "parentUuid": "d60250a0_0dfd9b4d",
      "revId": "0940695f792ae0da998272f7f46409adb47ac3aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "742352c8_a0e763e9",
        "filename": "core/java/android/net/Uri.java",
        "patchSetId": 1
      },
      "lineNbr": 1155,
      "author": {
        "id": 1103203
      },
      "writtenOn": "2018-10-18T17:16:54Z",
      "side": 1,
      "message": "Maciej: UTF16 is relevant because chars / surrogate pairs in the Java language are UTF-16.\nI\u0027m guessing you\u0027re mentioning [] because of literal IPv6 addresses but this code here deals with port separators, not IPv6 addresses; it doesn\u0027t know and doesn\u0027t need to know that IPv6 literals also contain \u0027:\u0027s.\n\nThe code in this CL looks fine to me. Personally I don\u0027t care much either way whether this comment says UTF or UTF-16.",
      "parentUuid": "252e46c2_34a077be",
      "revId": "0940695f792ae0da998272f7f46409adb47ac3aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4149b65f_c8dd923a",
        "filename": "core/java/android/net/Uri.java",
        "patchSetId": 1
      },
      "lineNbr": 1155,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2018-10-19T02:26:17Z",
      "side": 1,
      "message": "About the lookup : what Tobias said.\n\nAbout UTF, I believe either is correct : the key property here is that valid coding units can never be part of a multi-coding unit character, and that\u0027s a property shared by all UTF encoding schemes, including UTF-16 (this code would not be correct if the string was encoded in, say, Shift-JIS because \u0027:\u0027 or \u00270\u0027 could be part of a wider character), but as this is a Java string it certainly is UTF-16. I don\u0027t have a strong opinion either, so changed to UTF-16.",
      "parentUuid": "742352c8_a0e763e9",
      "revId": "0940695f792ae0da998272f7f46409adb47ac3aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}