{
  "comments": [
    {
      "key": {
        "uuid": "d5ba53fe_36ca0a20",
        "filename": "tests/net/common/java/android/net/RouteInfoTest.java",
        "patchSetId": 3
      },
      "lineNbr": 285,
      "author": {
        "id": 1288034
      },
      "writtenOn": "2020-03-10T04:00:03Z",
      "side": 1,
      "message": "This should also test parceling of the MTU: can you just add something like:\nassertParcelingIsLossless(new RouteInfo(Prefix(\"::/0\"), Address(\"2001:db8::\"), \"testiface\",\n    RTN_UNICAST, 1450 /* mtu */));\nto this method ?",
      "range": {
        "startLine": 285,
        "startChar": 42,
        "endLine": 285,
        "endChar": 43
      },
      "revId": "b56c9af78381e4a0c3387e3521d71b2c9fb5007e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7138b69b_4cd4fa8f",
        "filename": "tests/net/common/java/android/net/RouteInfoTest.java",
        "patchSetId": 3
      },
      "lineNbr": 291,
      "author": {
        "id": 1288034
      },
      "writtenOn": "2020-03-10T04:00:03Z",
      "side": 1,
      "message": "This is preexisting, but could you also change to the 4-arguments constructor to also test the type ?",
      "range": {
        "startLine": 291,
        "startChar": 12,
        "endLine": 291,
        "endChar": 71
      },
      "revId": "b56c9af78381e4a0c3387e3521d71b2c9fb5007e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d76b91b2_45b636e4",
        "filename": "tests/net/common/java/android/net/RouteInfoTest.java",
        "patchSetId": 3
      },
      "lineNbr": 292,
      "author": {
        "id": 1288034
      },
      "writtenOn": "2020-03-10T04:00:03Z",
      "side": 1,
      "message": "There\u0027s one assert here and one assert in the caller using the return value, that\u0027s rather inelegant/inconsistent.\nHow about having assertParcelSane for both instances of RouteInfo inside this method, and just call assertFieldCountEquals in the test method ?",
      "range": {
        "startLine": 292,
        "startChar": 8,
        "endLine": 292,
        "endChar": 33
      },
      "revId": "b56c9af78381e4a0c3387e3521d71b2c9fb5007e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}