{
  "comments": [
    {
      "key": {
        "uuid": "AAAHMH///40\u003d",
        "filename": "services/java/com/android/server/pm/PackageManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 1065,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2012-07-10T21:15:32Z",
      "side": 1,
      "message": "Shouldn\u0027t scan policy also check ro.build.selinux? What would happen if I had a non-seandroid build and places policy files on that path?",
      "revId": "c7a0157581054b70457736ecb7c2495ccc82814d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHMX///40\u003d",
        "filename": "services/java/com/android/server/pm/PackageManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 1065,
      "author": {
        "id": 1013157
      },
      "writtenOn": "2012-07-10T23:18:35Z",
      "side": 1,
      "message": "The ro.build.selinux change to AOSP was made after this initial scan policy change and thought was never given to this added protection because of that. I like this new addition.",
      "parentUuid": "AAAHMH///40\u003d",
      "revId": "c7a0157581054b70457736ecb7c2495ccc82814d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHMH///44\u003d",
        "filename": "services/java/com/android/server/pm/PackageManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 1345,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2012-07-10T21:15:32Z",
      "side": 1,
      "message": "These functions should live in another class, maybe SELinux class, rather then having the Package Manager know how to scan for the policy files. Also, it pushes all the XML parsing out of this, so future XML changes only require changes in the library and not the PackageManager service.",
      "revId": "c7a0157581054b70457736ecb7c2495ccc82814d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHMX///4c\u003d",
        "filename": "services/java/com/android/server/pm/PackageManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 1345,
      "author": {
        "id": 1013157
      },
      "writtenOn": "2012-07-10T23:18:35Z",
      "side": 1,
      "message": "I would think we need to be careful not to push it too far away from the PMS. We need the code within the system server somewhere. If it\u0027s not attached to the PMS then we need it in another service, either a new one or an existing one. Having these changes within an existing service should create the same set of comments you have just given. But then creating a new service seems like a lot of extra work for this functionality. Although, maybe this could be the start of a device admin service to handle such actions.",
      "parentUuid": "AAAHMH///44\u003d",
      "revId": "c7a0157581054b70457736ecb7c2495ccc82814d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHMH///4U\u003d",
        "filename": "services/java/com/android/server/pm/PackageManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 1345,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2012-07-10T23:35:47Z",
      "side": 1,
      "message": "Why cant it be part of a library for handling SEAndroid tasks? For instance, parsing the mac_permision.xml can be moved elsewhere, or is their some reason that I am missing. I agree that the PMS needs to check in order to do the enforcement. But changes to PMS will be under much more scrutiny than updating a separate library when the XML format changes, and thus updates may be much easier to integrate further down the road.",
      "parentUuid": "AAAHMX///4c\u003d",
      "revId": "c7a0157581054b70457736ecb7c2495ccc82814d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHMH///4M\u003d",
        "filename": "services/java/com/android/server/pm/PackageManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 1345,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2012-07-11T00:34:05Z",
      "side": 1,
      "message": "To clarify further, I mean move the code to a different file, for instance into Android.os.SELinux and have PMS import android.os.selinux. That way a change to the logic doesn\u0027t require us to submit patches to PMS. Then the only patches to PMS would be on major API changes or additional features. Other patches, to update schema, fix bugs, etc can be sent to frameworks base.\n\nI would imagine that changes to a core service should be minimized and anything that could be broken out to a lib should be (IMHO) as core services, are well core and probably undergo a lot of scrutiny.",
      "parentUuid": "AAAHMH///4U\u003d",
      "revId": "c7a0157581054b70457736ecb7c2495ccc82814d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}