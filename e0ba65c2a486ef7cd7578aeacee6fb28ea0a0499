{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2c344219_228399e5",
        "filename": "core/java/android/os/storage/IStorageManager.aidl",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1165283
      },
      "writtenOn": "2023-10-24T17:56:55Z",
      "side": 1,
      "message": "I\u0027m not on the Storage/Encryption teams, so I guess I don\u0027t really have a foot in the game here. But out of curiosity: how does adding \"Storage\" help understanding? This is in StorageManager, so doesn\u0027t that already make it mostly clear that it is a \"Storage\" key (whatever that is).",
      "range": {
        "startLine": 137,
        "startChar": 19,
        "endLine": 137,
        "endChar": 26
      },
      "revId": "e0ba65c2a486ef7cd7578aeacee6fb28ea0a0499",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75557167_100dba77",
        "filename": "core/java/android/os/storage/IStorageManager.aidl",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2023-10-24T18:15:07Z",
      "side": 1,
      "message": "The inclusion of `Storage` is to make this consistent with the other methods like `unlockCeStorage` and `lockCeStorage`.  Would you prefer just `createUserKeys` then?  Or `createUserFbeKeys` maybe?  I had `createUserFbeKeys` originally, but Paul felt that it was slightly inconsistent with the other methods.\n\nNote that in any case it is helpful to add the \"s\", given that this creates two keys, not one.",
      "parentUuid": "2c344219_228399e5",
      "range": {
        "startLine": 137,
        "startChar": 19,
        "endLine": 137,
        "endChar": 26
      },
      "revId": "e0ba65c2a486ef7cd7578aeacee6fb28ea0a0499",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69e575b1_7dd96943",
        "filename": "core/java/android/os/storage/IStorageManager.aidl",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1165283
      },
      "writtenOn": "2023-10-24T18:24:22Z",
      "side": 1,
      "message": "So \"UserStorage\" is meant to indicate \"Ce and De Storage\"?\nAnd then you have to say \"Keys\" because otherwise it\u0027d be \"Storages\", which is weird?\n\nI don\u0027t think that\u0027s obvious, but I don\u0027t necessarily have a better suggestion.\nI have no idea what \"Fbe\" means, so I personally don\u0027t like it ;)\n\nSo, does this actually indicate `createDeAndCeStorages()` / `createDeCeStorages`?",
      "parentUuid": "75557167_100dba77",
      "range": {
        "startLine": 137,
        "startChar": 19,
        "endLine": 137,
        "endChar": 26
      },
      "revId": "e0ba65c2a486ef7cd7578aeacee6fb28ea0a0499",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9544bacd_1e137be5",
        "filename": "core/java/android/os/storage/IStorageManager.aidl",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2023-10-24T18:41:31Z",
      "side": 1,
      "message": "What `createUserStorageKeys` (currently called `createUserKey`) does is create the user\u0027s CE key and DE key, i.e. the keys for the user\u0027s CE storage and DE storage, respectively.  It does **not** create the actual CE and DE storage (directories); that\u0027s done by the existing method `prepareUserStorage`.  So having the `Keys` in there is important, IMO.\n\nLikewise, `destroyUserStorageKeys` (currently called `destroyUserKey`) destroys the CE and DE keys, not the CE and DE storage itself.  The existing method `destroyUserStorage` destroys the CE and DE storage.\n\nI think the only question is what do we call the keys.  It sounds like you\u0027d prefer `CeAndDeKeys` to `StorageKeys` or to `FbeKeys` (note, FBE stands for File Based Encryption) -- is that accurate?  Does the existence of `prepareUserStorage` and `destroyUserStorage`, which just use the word `Storage` to refer to CE and DE storage, change that at all?",
      "parentUuid": "69e575b1_7dd96943",
      "range": {
        "startLine": 137,
        "startChar": 19,
        "endLine": 137,
        "endChar": 26
      },
      "revId": "e0ba65c2a486ef7cd7578aeacee6fb28ea0a0499",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9726909e_2f02abe0",
        "filename": "core/java/android/os/storage/IStorageManager.aidl",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1165283
      },
      "writtenOn": "2023-10-24T18:46:44Z",
      "side": 1,
      "message": "Got it. Okay, `StorageKeys` probably makes sense then.\n\nOut of curiosity, why would you leave `User` in this method, but remove it from the other methods? The fact that it is for Keys (as opposed to actual Storage)? Or the fact that it is both CE and DE? Or because it\u0027s plural (keys), and you don\u0027t want people to think that it erases *all* Storage keys, even for other users? Or some other reason.\n\nI\u0027d recommend putting javadocs on the methods either way, where you can mention that it is both CE and DE. Right now, there is no javadoc on `StorageManager.destroyUserKey()`, etc..",
      "parentUuid": "9544bacd_1e137be5",
      "range": {
        "startLine": 137,
        "startChar": 19,
        "endLine": 137,
        "endChar": 26
      },
      "revId": "e0ba65c2a486ef7cd7578aeacee6fb28ea0a0499",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1fc1e51_0ecd6ec0",
        "filename": "core/java/android/os/storage/IStorageManager.aidl",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2023-10-24T18:58:52Z",
      "side": 1,
      "message": "The methods I removed `User` from all refer to `CeStorage` now.  CE storage is always per-user, so it seems unnecessary to have `UserCeStorage`.\n\nWhen just talking about a user\u0027s `Storage`, though, it\u0027s helpful to explicitly write `User`.\n\nDo you think we should keep `User` even for `CeStorage`, i.e. use `UserCeStorage`, so that everything dealing with the user\u0027s file-based encryption storage or keys has `User`?  One thing to keep in mind is that `StorageManagerInternal` already has `markCeStoragePrepared` and `isCeStoragePrepared`.  So that already has some precedent for simply `CeStorage`.\n\nAnd yes, I\u0027ll add javadoc.",
      "parentUuid": "9726909e_2f02abe0",
      "range": {
        "startLine": 137,
        "startChar": 19,
        "endLine": 137,
        "endChar": 26
      },
      "revId": "e0ba65c2a486ef7cd7578aeacee6fb28ea0a0499",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b8a54b7_ecb8628b",
        "filename": "core/java/android/os/storage/StorageManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1583,
      "author": {
        "id": 1165283
      },
      "writtenOn": "2023-10-24T17:56:55Z",
      "side": 1,
      "message": "What about adding Javadocumentation here explaining what type of keys (CE, DE, both?) are affected.\n\n(same for the next method)",
      "range": {
        "startLine": 1583,
        "startChar": 16,
        "endLine": 1583,
        "endChar": 17
      },
      "revId": "e0ba65c2a486ef7cd7578aeacee6fb28ea0a0499",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}