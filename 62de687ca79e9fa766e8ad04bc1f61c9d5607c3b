{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9433e5c3_4ebe3306",
        "filename": "core/java/android/view/View.java",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 1407716
      },
      "writtenOn": "2024-09-06T15:04:39Z",
      "side": 1,
      "message": "I think it\u0027s actually for most pointer events, right? That should include mice, styluses, etc.\n\nFrom what I remember, \"touch event\" is defined here: https://source.corp.google.com/h/googleplex-android/platform/superproject/main/+/main:frameworks/native/libs/input/Input.cpp;l\u003d946;drc\u003d71c6f73ada569787a7064af4ea2a4c01adb75a85",
      "range": {
        "startLine": 331,
        "startChar": 15,
        "endLine": 331,
        "endChar": 74
      },
      "revId": "62de687ca79e9fa766e8ad04bc1f61c9d5607c3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b0304cb_9e8a4abd",
        "filename": "core/java/android/view/View.java",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 1951823
      },
      "writtenOn": "2024-09-06T16:55:23Z",
      "side": 1,
      "message": "Oh, right. Yeah, I just checked by tracing the call hierarchy of `View#onTouchEvent`, and indeed we decide in `View#dispatchPointerEvent` whether to send a `MotionEvent` to `onTouchEvent` or `onGenericMotionEvent` based on the return value of `isTouchEvent`.\n\nLooking at the source of `MotionEvent::isTouchEvent`, it seems like it\u0027s more complex than splitting it by device — `HOVER_MOVE`s and `SCROLL`s aren\u0027t touch events, even though other mouse events are. That\u0027s a bit odd — anyone know what the rationale is there? I\u0027ve changed the description (here and in the method JavaDoc below) to reflect this, but maybe there\u0027s a more useful way of putting it than just saying \"oh, except hover and scroll\".",
      "parentUuid": "9433e5c3_4ebe3306",
      "range": {
        "startLine": 331,
        "startChar": 15,
        "endLine": 331,
        "endChar": 74
      },
      "revId": "62de687ca79e9fa766e8ad04bc1f61c9d5607c3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43ce7be9_ce55d3a7",
        "filename": "core/java/android/view/View.java",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 1407716
      },
      "writtenOn": "2024-09-06T17:28:17Z",
      "side": 1,
      "message": "I think this is saying \"touch\" from a UI/UX perspective. Touching using a touchscreen is essentially the same as touching with a stylus and clicking (with button held) for mouse and touchpad. Hovering doesn\u0027t have the same UX implications as touch, so it\u0027s dispatched in a separate path.\n\nInstead of adding the exceptions in the docs, maybe we can ask some of the technical writers to improve this to convey more of the philosophy behind the API design?",
      "parentUuid": "6b0304cb_9e8a4abd",
      "range": {
        "startLine": 331,
        "startChar": 15,
        "endLine": 331,
        "endChar": 74
      },
      "revId": "62de687ca79e9fa766e8ad04bc1f61c9d5607c3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}