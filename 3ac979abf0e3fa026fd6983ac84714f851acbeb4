{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "43504fe4_b773eb75",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1902359
      },
      "writtenOn": "2024-02-04T03:00:13Z",
      "side": 1,
      "message": "@pgrafov@google.com hello google team, I had uploaded new change,please help me review, thanks",
      "revId": "3ac979abf0e3fa026fd6983ac84714f851acbeb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f099256a_9dd7602c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1902359
      },
      "writtenOn": "2024-02-08T00:27:28Z",
      "side": 1,
      "message": "Hello Google team, anything update?",
      "revId": "3ac979abf0e3fa026fd6983ac84714f851acbeb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49fd7779_2aa8d173",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1902359
      },
      "writtenOn": "2024-02-20T01:09:10Z",
      "side": 1,
      "message": "@rubinxu@google.com Hello Google team, could you help me review this CL again?",
      "revId": "3ac979abf0e3fa026fd6983ac84714f851acbeb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17389145_a7185e27",
        "filename": "services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java",
        "patchSetId": 5
      },
      "lineNbr": 3397,
      "author": {
        "id": 1059499
      },
      "writtenOn": "2024-02-21T21:39:11Z",
      "side": 1,
      "message": "Please fix this ERROR reported by Common Typos: Common typo found: \"Restictions\" -- should it be \"Restrictions\"?\n\nAnalyzer Description: Linter for catching common typos motivated by go/todo-fail and go/lol-codesearch. Shared with google3 common typos library go/common-typos.\nOwner: ayeaye-team@google.com\n\nCommon typo found: \"Restictions\" -- should it be \"Restrictions\"?\nNote: a line containing \"common_typos_disable\" or \"common_typos_enable\" will turn off or on (respectively) the linter for subsequent lines in the file. Alternatively include the token \"NOTYPO\" within a line to skip typo linting that line or include \u0027No-Typo-Check: \u003creason\u003e\u0027in the commit message.",
      "range": {
        "startLine": 3397,
        "startChar": 41,
        "endLine": 3397,
        "endChar": 52
      },
      "revId": "3ac979abf0e3fa026fd6983ac84714f851acbeb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c06cb3d8_5aaa5035",
        "filename": "services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java",
        "patchSetId": 5
      },
      "lineNbr": 3397,
      "author": {
        "id": 1902359
      },
      "writtenOn": "2024-02-22T09:25:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17389145_a7185e27",
      "range": {
        "startLine": 3397,
        "startChar": 41,
        "endLine": 3397,
        "endChar": 52
      },
      "revId": "3ac979abf0e3fa026fd6983ac84714f851acbeb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc926c72_2e36168c",
        "filename": "services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java",
        "patchSetId": 5
      },
      "lineNbr": 24521,
      "author": {
        "id": 1059499
      },
      "writtenOn": "2024-02-21T21:39:11Z",
      "side": 1,
      "message": "You would also need to look at admin.getParentActiveAdmin().userRestrictions. They will be set by the same enforcingAdmin except the userId part will the profile\u0027s parent user (if it\u0027s a local restriction)",
      "range": {
        "startLine": 24521,
        "startChar": 52,
        "endLine": 24521,
        "endChar": 74
      },
      "revId": "3ac979abf0e3fa026fd6983ac84714f851acbeb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34670c67_19eff051",
        "filename": "services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java",
        "patchSetId": 5
      },
      "lineNbr": 24521,
      "author": {
        "id": 1902359
      },
      "writtenOn": "2024-02-22T09:25:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fc926c72_2e36168c",
      "range": {
        "startLine": 24521,
        "startChar": 52,
        "endLine": 24521,
        "endChar": 74
      },
      "revId": "3ac979abf0e3fa026fd6983ac84714f851acbeb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9dbc7688_858ff75d",
        "filename": "services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java",
        "patchSetId": 5
      },
      "lineNbr": 24529,
      "author": {
        "id": 1059499
      },
      "writtenOn": "2024-02-21T21:39:11Z",
      "side": 1,
      "message": "I don\u0027t think this is correct since DeviceOwner can set local user restictions as well. Better to follow the same logic as setBackwardCompatibleUserRestriction()",
      "range": {
        "startLine": 24525,
        "startChar": 0,
        "endLine": 24529,
        "endChar": 0
      },
      "revId": "3ac979abf0e3fa026fd6983ac84714f851acbeb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed5bc185_ca960933",
        "filename": "services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java",
        "patchSetId": 5
      },
      "lineNbr": 24529,
      "author": {
        "id": 1902359
      },
      "writtenOn": "2024-02-22T09:25:59Z",
      "side": 1,
      "message": "@rubinxu@google.com \nHello Google team, I have incorporated considerations for ParentActiveAdmin and referred to the logic in setBackwardCompatibleUserRestriction() for setting either GlobalPolicy or LocalPolicy. I am uncertain if this modification meets your expectations for this area. Additionally, I\u0027d like to ask if it\u0027s necessary to consider the ProfileOwner scenario here? My understanding of the DPC (Device Policy Controller) module is somewhat limited (as my main area of work lies in package management services, and addressing this issue is part of compliance testing requested by international carriers, and we lack an internal owner for this module), which may have limited the scope of my considerations during the modification.",
      "parentUuid": "9dbc7688_858ff75d",
      "range": {
        "startLine": 24525,
        "startChar": 0,
        "endLine": 24529,
        "endChar": 0
      },
      "revId": "3ac979abf0e3fa026fd6983ac84714f851acbeb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d27f2a3_b7d7e864",
        "filename": "services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java",
        "patchSetId": 5
      },
      "lineNbr": 24529,
      "author": {
        "id": 1059499
      },
      "writtenOn": "2024-02-23T17:32:09Z",
      "side": 1,
      "message": "To avoid duplication of logic, I have to refactor the existing setBackwardCompatibleUserRestriction and end up with this. @kholoudm@google.com do you mind taking a look?\n```\n    private void migrateUserRestrictionsLocked() {\n        Binder.withCleanCallingIdentity(() -\u003e {\n            List\u003cUserInfo\u003e users \u003d mUserManager.getUsers();\n            for (UserInfo userInfo : users) {\n                ActiveAdmin admin \u003d getProfileOwnerOrDeviceOwnerLocked(userInfo.id);\n                if (admin \u003d\u003d null) continue;\n                ComponentName adminComponent \u003d admin.info.getComponent();\n                int userId \u003d userInfo.id;\n                EnforcingAdmin enforcingAdmin \u003d EnforcingAdmin.createEnterpriseEnforcingAdmin(\n                        adminComponent,\n                        userId,\n                        admin);\n                int ownerType;\n                if (isDeviceOwner(admin)) {\n                    ownerType \u003d OWNER_TYPE_DEVICE_OWNER;\n                } else if (isProfileOwnerOfOrganizationOwnedDevice(adminComponent, userId)) {\n                    ownerType \u003d OWNER_TYPE_PROFILE_OWNER_OF_ORGANIZATION_OWNED_DEVICE;\n                } else if (isProfileOwner(adminComponent, userId)) {\n                    ownerType \u003d OWNER_TYPE_PROFILE_OWNER;\n                } else {\n                    throw new IllegalStateException(\"Invalid DO/PO state\");\n                }\n\n                for (final String restriction : admin.ensureUserRestrictions().keySet()) {\n                    setBackwardCompatibleUserRestrictionLocked(ownerType, enforcingAdmin, userId, \n                            restriction, /* enabled */ true, /* parent */ false);\n                }\n                for (final String restriction : admin.getParentActiveAdmin()\n                        .ensureUserRestrictions().keySet()) {\n                    setBackwardCompatibleUserRestrictionLocked(ownerType, enforcingAdmin, userId,\n                            restriction, /* enabled */ true, /* parent */ true);\n                }\n            }\n        });\n    }\n\n    private void setBackwardCompatibleUserRestriction(\n            CallerIdentity caller, EnforcingAdmin admin, String key, boolean enabled,\n            boolean parent) {\n        synchronized (getLockObject()) {\n\n            int ownerType;\n            if (isDeviceOwner(caller)) {\n                ownerType \u003d OWNER_TYPE_DEVICE_OWNER;\n            } else if (isProfileOwnerOfOrganizationOwnedDevice(caller)) {\n                ownerType \u003d OWNER_TYPE_PROFILE_OWNER_OF_ORGANIZATION_OWNED_DEVICE;\n            } else if (isProfileOwner(caller)) {\n                ownerType \u003d OWNER_TYPE_PROFILE_OWNER;\n            } else {\n                throw new IllegalStateException(\"Non-DO/Non-PO cannot set restriction \" + key\n                        + \" while targetSdkVersion is less than UPSIDE_DOWN_CAKE\");\n            }\n            setBackwardCompatibleUserRestrictionLocked(ownerType, admin, caller.getUserId(), key,\n                    enabled, parent);\n        }\n    }\n    private void setBackwardCompatibleUserRestrictionLocked(\n            int ownerType, EnforcingAdmin admin, int userId, String key, boolean enabled,\n            boolean parent) {\n            if (ownerType \u003d\u003d OWNER_TYPE_DEVICE_OWNER) {\n                if (UserRestrictionsUtils.isGlobal(OWNER_TYPE_DEVICE_OWNER, key)) {\n                    setGlobalUserRestrictionInternal(admin, key, enabled);\n                } else {\n                    setLocalUserRestrictionInternal(admin, key, enabled, userId);\n                }\n            } else if (ownerType \u003d\u003d OWNER_TYPE_PROFILE_OWNER\n                || ownerType \u003d\u003d OWNER_TYPE_PROFILE_OWNER_OF_ORGANIZATION_OWNED_DEVICE) {\n                if (UserRestrictionsUtils.isGlobal(OWNER_TYPE_PROFILE_OWNER, key)\n                        || (parent \u0026\u0026 ownerType \u003d\u003d OWNER_TYPE_PROFILE_OWNER_OF_ORGANIZATION_OWNED_DEVICE\n                        \u0026\u0026 UserRestrictionsUtils.isGlobal(\n                        OWNER_TYPE_PROFILE_OWNER_OF_ORGANIZATION_OWNED_DEVICE, key))) {\n                    setGlobalUserRestrictionInternal(admin, key, enabled);\n                } else {\n                    int affectedUserId \u003d parent\n                            ? getProfileParentId(userId) : userId;\n                    setLocalUserRestrictionInternal(admin, key, enabled, affectedUserId);\n                }\n            } else {\n                throw new IllegalStateException(\"Non-DO/Non-PO cannot set restriction \" + key\n                        + \" while targetSdkVersion is less than UPSIDE_DOWN_CAKE\");\n            }\n        }\n    }\n\n```",
      "parentUuid": "ed5bc185_ca960933",
      "range": {
        "startLine": 24525,
        "startChar": 0,
        "endLine": 24529,
        "endChar": 0
      },
      "revId": "3ac979abf0e3fa026fd6983ac84714f851acbeb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1538183_e4704c17",
        "filename": "services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java",
        "patchSetId": 5
      },
      "lineNbr": 24529,
      "author": {
        "id": 1902359
      },
      "writtenOn": "2024-02-24T07:51:25Z",
      "side": 1,
      "message": "@rubinxu@google.com It looks like this can indeed reduce duplicated code. I have already submitted it to our server for functional verification. If there are no issues, I will upload the new code that includes your optimization.",
      "parentUuid": "8d27f2a3_b7d7e864",
      "range": {
        "startLine": 24525,
        "startChar": 0,
        "endLine": 24529,
        "endChar": 0
      },
      "revId": "3ac979abf0e3fa026fd6983ac84714f851acbeb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47a81ef3_f7def701",
        "filename": "services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java",
        "patchSetId": 5
      },
      "lineNbr": 24529,
      "author": {
        "id": 1902359
      },
      "writtenOn": "2024-06-17T03:06:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1538183_e4704c17",
      "range": {
        "startLine": 24525,
        "startChar": 0,
        "endLine": 24529,
        "endChar": 0
      },
      "revId": "3ac979abf0e3fa026fd6983ac84714f851acbeb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65f8b1a5_acad25f9",
        "filename": "services/devicepolicy/java/com/android/server/devicepolicy/OwnersData.java",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1059499
      },
      "writtenOn": "2024-02-21T21:39:11Z",
      "side": 1,
      "message": "nit: TAG_USER_RESTRICTIONS_POLICY_ENGINE_MIGRATION",
      "range": {
        "startLine": 70,
        "startChar": 54,
        "endLine": 70,
        "endChar": 55
      },
      "revId": "3ac979abf0e3fa026fd6983ac84714f851acbeb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5630ee1f_a2b4ffa4",
        "filename": "services/devicepolicy/java/com/android/server/devicepolicy/OwnersData.java",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1902359
      },
      "writtenOn": "2024-02-22T09:25:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65f8b1a5_acad25f9",
      "range": {
        "startLine": 70,
        "startChar": 54,
        "endLine": 70,
        "endChar": 55
      },
      "revId": "3ac979abf0e3fa026fd6983ac84714f851acbeb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e541723a_316ff6a9",
        "filename": "services/devicepolicy/java/com/android/server/devicepolicy/OwnersData.java",
        "patchSetId": 5
      },
      "lineNbr": 92,
      "author": {
        "id": 1059499
      },
      "writtenOn": "2024-02-21T21:39:11Z",
      "side": 1,
      "message": "Please fix this ERROR reported by Common Typos: Common typo found: \"RESTICTIONS\" -- should it be \"RESTRICTIONS\"?\n\nAnalyzer Description: Linter for catching common typos motivated by go/todo-fail and go/lol-codesearch. Shared with google3 common typos library go/common-typos.\nOwner: ayeaye-team@google.com\n\nCommon typo found: \"RESTICTIONS\" -- should it be \"RESTRICTIONS\"?\nNote: a line containing \"common_typos_disable\" or \"common_typos_enable\" will turn off or on (respectively) the linter for subsequent lines in the file. Alternatively include the token \"NOTYPO\" within a line to skip typo linting that line or include \u0027No-Typo-Check: \u003creason\u003e\u0027in the commit message.",
      "range": {
        "startLine": 92,
        "startChar": 42,
        "endLine": 92,
        "endChar": 53
      },
      "revId": "3ac979abf0e3fa026fd6983ac84714f851acbeb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f51cb1cc_99ee8518",
        "filename": "services/devicepolicy/java/com/android/server/devicepolicy/OwnersData.java",
        "patchSetId": 5
      },
      "lineNbr": 92,
      "author": {
        "id": 1902359
      },
      "writtenOn": "2024-02-22T09:25:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e541723a_316ff6a9",
      "range": {
        "startLine": 92,
        "startChar": 42,
        "endLine": 92,
        "endChar": 53
      },
      "revId": "3ac979abf0e3fa026fd6983ac84714f851acbeb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}