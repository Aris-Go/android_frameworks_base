{
  "comments": [
    {
      "key": {
        "uuid": "c86c6f4a_4683743e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1004277
      },
      "writtenOn": "2013-12-13T23:29:13Z",
      "side": 1,
      "message": "typo: extraneous",
      "range": {
        "startLine": 23,
        "startChar": 46,
        "endLine": 23,
        "endChar": 55
      },
      "revId": "e91f2bfa43afa2ab669e01b879a27d2add3c59f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28ab4b9f_3e1a89c6",
        "filename": "services/jni/com_android_server_AlarmManagerService.cpp",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1004277
      },
      "writtenOn": "2013-12-13T23:36:38Z",
      "side": 1,
      "message": "I don\u0027t know how Android alarm handlers are invoked vs. when waitForAlarm() is called.  If it is possible that alarm handler threads are waiting to be scheduled, and have not taken the userspace wakelocks grabbed by the handlers, by the time waitForAlarm() is called again, then this code probably needs to take a timed wakelock to prevent suspend until the handler threads have a decent chance to run.",
      "range": {
        "startLine": 129,
        "startChar": 22,
        "endLine": 129,
        "endChar": 34
      },
      "revId": "e91f2bfa43afa2ab669e01b879a27d2add3c59f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08d1273f_b5ab60a3",
        "filename": "services/jni/com_android_server_AlarmManagerService.cpp",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1000322
      },
      "writtenOn": "2013-12-14T00:23:26Z",
      "side": 1,
      "message": "The Alarm Manager Service in userspace is sitting blocked on this poll().  [aside: i missed the poll() vs epoll() issue; see todd\u0027s comment below].  Once this [e]poll unblocks and returns to the Alarm Manager, it does *not* acquire its own wakelock until it has checked its bookkeeping about deliverable alarms and decided that the device needs to stay awake because some alarms need to be delivered to apps with a guarantee that the device will remain awake for the duration of the apps\u0027 handling thereof.  Even if this was a wakeup alarm, if the Alarm Manager concludes that no such guaranteed-awake delivery needs to be made, *even if some other delivery routes are invoked*, the Alarm Manager will never wind up acquiring its own wakelock for the duration of its internal processing.\n\nTodd\u0027s comment below suggests that there\u0027s an epoll() mechanism that could be brought to bear here that would implicitly keep things awake for the duration of the alarm handling loop\u0027s operation to run to completion and return to awaiting the next alarm.  That sounds like a *very* good idea to me.",
      "parentUuid": "28ab4b9f_3e1a89c6",
      "range": {
        "startLine": 129,
        "startChar": 22,
        "endLine": 129,
        "endChar": 34
      },
      "revId": "e91f2bfa43afa2ab669e01b879a27d2add3c59f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28ab4b9f_e1124021",
        "filename": "services/jni/com_android_server_AlarmManagerService.cpp",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1004277
      },
      "writtenOn": "2013-12-14T00:31:51Z",
      "side": 1,
      "message": "Just to clarify: if the Alarm Manager Service decides to fire an alarm, will the wakelock for that alarm definitely be held by the time waitForAlarm() is re-entered?  If grabbing the wakelock may occur asynchronously with re-entering waitForAlarm(), a timed wakelock should be held prior to returning from waitForAlarm().",
      "parentUuid": "08d1273f_b5ab60a3",
      "range": {
        "startLine": 129,
        "startChar": 22,
        "endLine": 129,
        "endChar": 34
      },
      "revId": "e91f2bfa43afa2ab669e01b879a27d2add3c59f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28ab4b9f_7e8ff1d1",
        "filename": "services/jni/com_android_server_AlarmManagerService.cpp",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1004277
      },
      "writtenOn": "2013-12-13T23:29:13Z",
      "side": 1,
      "message": "epoll_wait on fds with event EPOLLWAKEUP specified in the epoll_ctl will take a wakelock during the time between epoll_wait calls.  See system/core/healthd/healthd.cpp for an example.",
      "range": {
        "startLine": 137,
        "startChar": 14,
        "endLine": 137,
        "endChar": 18
      },
      "revId": "e91f2bfa43afa2ab669e01b879a27d2add3c59f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}