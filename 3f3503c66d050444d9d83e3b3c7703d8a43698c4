{
  "comments": [
    {
      "key": {
        "uuid": "fcd45123_3d289aee",
        "filename": "services/core/java/com/android/server/connectivity/Tethering.java",
        "patchSetId": 9
      },
      "lineNbr": 1661,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2018-12-12T05:44:37Z",
      "side": 1,
      "message": "I am not a huge fan of this on two accounts :\n\n- Reacting to systemReady() means the system is not really ready. This is not an issue that you are introducing, but keeping the code running on systemReady() as small as possible is generally preferable.\n- This does not guarantee the issue goes away, it just makes it very unlikely.\n\n\nUnfortunately I don\u0027t have any brilliant idea to solve this issue. Ideally there would be a simple and clean way to start UNM just in time, and wait for it to be ready, but I don\u0027t see one right now.",
      "range": {
        "startLine": 1661,
        "startChar": 16,
        "endLine": 1661,
        "endChar": 27
      },
      "revId": "3f3503c66d050444d9d83e3b3c7703d8a43698c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76d871bb_31de0a3e",
        "filename": "services/core/java/com/android/server/connectivity/tethering/UpstreamNetworkMonitor.java",
        "patchSetId": 9
      },
      "lineNbr": 58,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2018-12-12T05:44:37Z",
      "side": 1,
      "message": "These are not callbacks right ? They are just methods to control the lifecycle of NetworkMonitor.",
      "range": {
        "startLine": 58,
        "startChar": 19,
        "endLine": 58,
        "endChar": 28
      },
      "revId": "3f3503c66d050444d9d83e3b3c7703d8a43698c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a7dc5d8_61538b04",
        "filename": "services/core/java/com/android/server/connectivity/tethering/UpstreamNetworkMonitor.java",
        "patchSetId": 9
      },
      "lineNbr": 59,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2018-12-12T05:44:37Z",
      "side": 1,
      "message": "I am concerned that this requires the owner of UNM to manage the internal lifecycle details. Before this change, all the owner has to know is that UNM has to be started and stopped, which is not too much to ask of the caller. But with this, the caller has to know about all the internal details of UNM because it needs to tell it at the right time what to start monitor.\n\nI would much prefer if UNM offered more meaningful controls. For example, registerMobileNetworkRequest() exists because when the configuration requires it, Tethering needs to bring up a DUN network ; I think this would be expressed in a more meaningful way by having a method like \"setRequiresDun(boolean)\", and have UNM decide from that setting whether it\u0027s appropriate to file the request.\n\nLikewise, UNM needs to track the default network or all networks depending on whether the configuration says to latch to the default network or to use the priority list. The settings should probably reflect that.\n\nDo you think that\u0027s possible ?",
      "range": {
        "startLine": 59,
        "startChar": 42,
        "endLine": 59,
        "endChar": 47
      },
      "revId": "3f3503c66d050444d9d83e3b3c7703d8a43698c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}