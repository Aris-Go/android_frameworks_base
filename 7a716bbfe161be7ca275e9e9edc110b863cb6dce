{
  "comments": [
    {
      "key": {
        "uuid": "06174de1_c45eb576",
        "filename": "core/java/android/se/omapi/SEService.java",
        "patchSetId": 4
      },
      "lineNbr": 203,
      "author": {
        "id": 1060151
      },
      "writtenOn": "2020-01-08T06:02:57Z",
      "side": 1,
      "message": "Not necessarily something that must change, but generally catching all exceptions is a red flag in production code. I see it in a few places. Suggest to audit each one and see if there\u0027s an alternative.",
      "range": {
        "startLine": 203,
        "startChar": 17,
        "endLine": 203,
        "endChar": 28
      },
      "revId": "7a716bbfe161be7ca275e9e9edc110b863cb6dce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3fe769a_d16a0fa2",
        "filename": "core/java/android/se/omapi/SEService.java",
        "patchSetId": 4
      },
      "lineNbr": 217,
      "author": {
        "id": 1060151
      },
      "writtenOn": "2020-01-08T06:02:57Z",
      "side": 1,
      "message": "This should probably throw IllegalArgumentException()",
      "range": {
        "startLine": 215,
        "startChar": 9,
        "endLine": 217,
        "endChar": 10
      },
      "revId": "7a716bbfe161be7ca275e9e9edc110b863cb6dce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73c863e3_ab132da6",
        "filename": "core/java/android/se/omapi/SEService.java",
        "patchSetId": 4
      },
      "lineNbr": 220,
      "author": {
        "id": 1060151
      },
      "writtenOn": "2020-01-08T06:02:57Z",
      "side": 1,
      "message": "Is it possible to have a valid reader if the thing above fails? Probably just return null here?",
      "range": {
        "startLine": 220,
        "startChar": 30,
        "endLine": 220,
        "endChar": 34
      },
      "revId": "7a716bbfe161be7ca275e9e9edc110b863cb6dce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f056f495_19f78b52",
        "filename": "core/java/android/se/omapi/SEService.java",
        "patchSetId": 4
      },
      "lineNbr": 222,
      "author": {
        "id": 1060151
      },
      "writtenOn": "2020-01-08T06:02:57Z",
      "side": 1,
      "message": "nit constant plz.",
      "range": {
        "startLine": 222,
        "startChar": 30,
        "endLine": 222,
        "endChar": 33
      },
      "revId": "7a716bbfe161be7ca275e9e9edc110b863cb6dce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9121e052_eaa59a09",
        "filename": "core/java/android/se/omapi/SEService.java",
        "patchSetId": 4
      },
      "lineNbr": 303,
      "author": {
        "id": 1060151
      },
      "writtenOn": "2020-01-08T06:02:57Z",
      "side": 1,
      "message": "This is using the ISE for \"normal\" control flow since the outer caller just catches this. Suggest to log an error and return... though the outer method might need changes that cause this to change as well.",
      "range": {
        "startLine": 303,
        "startChar": 12,
        "endLine": 303,
        "endChar": 79
      },
      "revId": "7a716bbfe161be7ca275e9e9edc110b863cb6dce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "310f6df8_c1991af8",
        "filename": "core/java/android/se/omapi/SEService.java",
        "patchSetId": 4
      },
      "lineNbr": 309,
      "author": {
        "id": 1060151
      },
      "writtenOn": "2020-01-08T06:02:57Z",
      "side": 1,
      "message": "Normally, I\u0027d suggest to use throw e.rethrowAsRuntimeException();\nhttps://source.corp.google.com/android/frameworks/base/core/java/android/os/RemoteException.java;cl\u003dmaster;l\u003d51?q\u003dRemoteException.java\u0026sq\u003dpackage:android\n\nHowever, this is another thing that AFAICT is just using the exception for control flow (and on the other side it\u0027s caught and discarded)... so how about logging the exception and an error and then just \"return\".",
      "range": {
        "startLine": 309,
        "startChar": 22,
        "endLine": 309,
        "endChar": 38
      },
      "revId": "7a716bbfe161be7ca275e9e9edc110b863cb6dce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f158913_77f82761",
        "filename": "core/java/android/se/omapi/SEService.java",
        "patchSetId": 4
      },
      "lineNbr": 312,
      "author": {
        "id": 1060151
      },
      "writtenOn": "2020-01-08T06:02:57Z",
      "side": 1,
      "message": "is this guaranteed to be non-null?",
      "range": {
        "startLine": 312,
        "startChar": 33,
        "endLine": 312,
        "endChar": 44
      },
      "revId": "7a716bbfe161be7ca275e9e9edc110b863cb6dce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}