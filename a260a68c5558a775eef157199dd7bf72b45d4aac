{
  "comments": [
    {
      "key": {
        "uuid": "c2528380_82dd1a4b",
        "filename": "packages/NetworkStack/src/android/net/dhcp/DhcpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 223,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-03-25T09:48:49Z",
      "side": 1,
      "message": "Assigned",
      "range": {
        "startLine": 223,
        "startChar": 30,
        "endLine": 223,
        "endChar": 38
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82763631_ce2e0b02",
        "filename": "packages/NetworkStack/src/android/net/dhcp/DhcpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 223,
      "author": {
        "id": 1406251
      },
      "writtenOn": "2019-04-09T03:08:38Z",
      "side": 1,
      "message": "Updated.",
      "parentUuid": "c2528380_82dd1a4b",
      "range": {
        "startLine": 223,
        "startChar": 30,
        "endLine": 223,
        "endChar": 38
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4227043a_66f344c7",
        "filename": "packages/NetworkStack/src/android/net/dhcp/DhcpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 300,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-03-26T12:17:20Z",
      "side": 1,
      "message": "Will fit on one line (also, here too \"assigned\")",
      "range": {
        "startLine": 300,
        "startChar": 36,
        "endLine": 300,
        "endChar": 44
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3a8a00e_f6d75c5c",
        "filename": "packages/NetworkStack/src/android/net/dhcp/DhcpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 300,
      "author": {
        "id": 1406251
      },
      "writtenOn": "2019-04-09T03:08:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4227043a_66f344c7",
      "range": {
        "startLine": 300,
        "startChar": 36,
        "endLine": 300,
        "endChar": 44
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90d679de_19e1e3c8",
        "filename": "packages/NetworkStack/src/android/net/dhcp/DhcpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 626,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-03-26T12:17:20Z",
      "side": 1,
      "message": "Maybe if (DBG)",
      "range": {
        "startLine": 626,
        "startChar": 24,
        "endLine": 626,
        "endChar": 27
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d34b64c7_816b5d97",
        "filename": "packages/NetworkStack/src/android/net/dhcp/DhcpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 626,
      "author": {
        "id": 1406251
      },
      "writtenOn": "2019-04-09T03:08:38Z",
      "side": 1,
      "message": "Yes, updated.",
      "parentUuid": "90d679de_19e1e3c8",
      "range": {
        "startLine": 626,
        "startChar": 24,
        "endLine": 626,
        "endChar": 27
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3654579_e775eb3c",
        "filename": "packages/NetworkStack/src/android/net/dhcp/DhcpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1067,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-03-25T09:48:49Z",
      "side": 1,
      "message": "Can/should this extend DhcpRequestingState?\n\nAlternatively, can DhcpInitRebootState and DhcpRequestingState both inherit from another base class, such as WaitingForAckState? That way you don\u0027t have to duplicate the receivePacket method.",
      "range": {
        "startLine": 1067,
        "startChar": 30,
        "endLine": 1067,
        "endChar": 63
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f23fac02_e4424bbf",
        "filename": "packages/NetworkStack/src/android/net/dhcp/DhcpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1067,
      "author": {
        "id": 1406251
      },
      "writtenOn": "2019-04-09T03:08:38Z",
      "side": 1,
      "message": "Yes, updated. Actually we can reuse the same \"receivePacket()\" function with DhcpRequestingState, both of these two state process the same incoming ACK/NAK packets. Just override the enter() and sendPacket(), to avoid the duplicated code.",
      "parentUuid": "a3654579_e775eb3c",
      "range": {
        "startLine": 1067,
        "startChar": 30,
        "endLine": 1067,
        "endChar": 63
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c863914f_cf39248d",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 624,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-03-26T12:17:20Z",
      "side": 1,
      "message": "Please don\u0027t log this in AOSP, even temporarily :)",
      "range": {
        "startLine": 624,
        "startChar": 51,
        "endLine": 624,
        "endChar": 62
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2af1f191_67795140",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 624,
      "author": {
        "id": 1406251
      },
      "writtenOn": "2019-03-26T14:20:42Z",
      "side": 1,
      "message": "Just for testing, remove this in the next patch. And all logs are used for testing as well. To track if the code runs normally and enters the correct the state or not. Will clean up all these stuff.",
      "parentUuid": "c863914f_cf39248d",
      "range": {
        "startLine": 624,
        "startChar": 51,
        "endLine": 624,
        "endChar": 62
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8ded28a_14f854f8",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 624,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-03-26T21:02:23Z",
      "side": 1,
      "message": "Just to make sure we share a common understanding : in the next patchset, sure, but not in a subsequent patch â€“ we don\u0027t want this checked in in AOSP at any point.",
      "parentUuid": "2af1f191_67795140",
      "range": {
        "startLine": 624,
        "startChar": 51,
        "endLine": 624,
        "endChar": 62
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1e8d60a_e053f8a2",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 624,
      "author": {
        "id": 1406251
      },
      "writtenOn": "2019-04-09T03:08:38Z",
      "side": 1,
      "message": "Yes, this indeed makes sense. :)",
      "parentUuid": "d8ded28a_14f854f8",
      "range": {
        "startLine": 624,
        "startChar": 51,
        "endLine": 624,
        "endChar": 62
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aaa13b82_aed27f40",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1181,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-03-26T12:17:20Z",
      "side": 1,
      "message": "Won\u0027t this fit on one line ?",
      "range": {
        "startLine": 1181,
        "startChar": 13,
        "endLine": 1181,
        "endChar": 41
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62b76916_d776d39c",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1181,
      "author": {
        "id": 1406251
      },
      "writtenOn": "2019-04-09T03:08:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aaa13b82_aed27f40",
      "range": {
        "startLine": 1181,
        "startChar": 13,
        "endLine": 1181,
        "endChar": 41
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74acbd7e_2549b116",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1189,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-03-26T12:17:20Z",
      "side": 1,
      "message": "Ouch : cast has higher precedence than division, so what you wrote is the same as :\n\n  ((int) SystemClock.elapsedRealTime()) / 1000;",
      "range": {
        "startLine": 1189,
        "startChar": 32,
        "endLine": 1189,
        "endChar": 67
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a73ed8f_d0d11c06",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1189,
      "author": {
        "id": 1406251
      },
      "writtenOn": "2019-04-09T03:08:38Z",
      "side": 1,
      "message": "Oh, yes, since now we just store the expiry in milliseconds, so here we don\u0027t need the cast neither.",
      "parentUuid": "74acbd7e_2549b116",
      "range": {
        "startLine": 1189,
        "startChar": 32,
        "endLine": 1189,
        "endChar": 67
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ebe12b71_f7427309",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1213,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-03-25T09:48:49Z",
      "side": 1,
      "message": "It seems strange to have IpClient decide whether to start in INIT state or INIT-REBOOT state. That seems like it belongs in DhcpClient, not here.\n\nIt seems easiest to implement this by adding a new state (\"ObtainingConfigurationState\"?) to DhcpClient, and update all code that currently transitions to mDhcpInitState so that it goes into mObtainingConfigurationState instead of going into mDhcpInitState.\n\nObtainingConfigurationState would call deferMessage() for all messages except a EVENT_CONFIGURATION_OBTAINED which would pass in the previously assigned IPv4 address (or null if the memory store did not have any previously assigned IPv4 address). In ObtainingConfigurationState#enter you could set a timer to send yourself a EVENT_CONFIGURATION_OBTAINED with null as a timeout.\n\nPer in-person discussion looks like the simplest way to do this is to construct the callback inside the state machine state, so something like:\n\n\n    private AtomicInteger mSequenceNumber \u003d new AtomicInteger(0);\n\n    public void enter() {\n        super.enter();\n\n        mLastAssignedIpv4Address \u003d null;\n\n        int sequenceNumber \u003d mSequenceNumber.getAndIncrement();\n\n        // Set a timeout.\n        sendMessageDelayed(\n                obtainMessage(EVENT_CONFIGURATION_OBTAINED, sequenceNumber, 0, null),\n                IPMEMORYSTORE_TIMEOUT_MS);\n\n        mGetLastIpAddressCallback \u003d new IOnNetworkAttributesRetrieved() {\n            @Override\n            public void onNetworkAttributesRetrieved(StatusParcelable status,\n                    String l2Key, NetworkAttributesParcelable attributes) throws RemoteException {\n                ...\n                ...\n                sendMessage(obtainMessage(EVENT_CONFIGURATION_OBTAINED, sequenceNumber, 0,\n                        attributes.assignedV4Address));\n            }\n        };\n\n        mIpMemoryStore.retrieveNetworkAttributes(..., mGetLastIpAddressCallback);\n    }\n\n    public void processMessage(Message msg) {\n        if (msg.what !\u003d EVENT_CONFIGURATION_OBTAINED) {\n            deferMessage(msg);\n            return;\n        }\n\n        // Set last IPv4 address parameters.\n        if (msg.arg1 !\u003d mSequenceNumber.get()) return;  // Stale message.\n\n        // Ensure no future messages (e.g., the timeout we set above) are processed.\n        mSequenceNumber.getAndIncrement();  \n\n        mLastAssignedIpv4Address \u003d ...;\n    }",
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c009e1c_fb4b1f46",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1213,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-03-25T09:48:49Z",
      "side": 1,
      "message": "Presumably this should be the L2 key that\u0027s passed into IpClient?",
      "range": {
        "startLine": 1213,
        "startChar": 84,
        "endLine": 1213,
        "endChar": 95
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24bd6d10_41e1a776",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1213,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-03-26T12:17:20Z",
      "side": 1,
      "message": "Has to",
      "parentUuid": "9c009e1c_fb4b1f46",
      "range": {
        "startLine": 1213,
        "startChar": 84,
        "endLine": 1213,
        "endChar": 95
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5945f742_b94e19ad",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1213,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-03-26T12:17:20Z",
      "side": 1,
      "message": "+1. I also want to point out that it\u0027s almost certainly not fine to block the thread running IpClient.",
      "parentUuid": "ebe12b71_f7427309",
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6090c911_05d26e70",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1213,
      "author": {
        "id": 1406251
      },
      "writtenOn": "2019-04-09T03:08:38Z",
      "side": 1,
      "message": "Updated.Please take a review for the new patch. Thanks!",
      "parentUuid": "5945f742_b94e19ad",
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aaf8058d_5904356a",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1213,
      "author": {
        "id": 1406251
      },
      "writtenOn": "2019-04-09T03:08:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24bd6d10_41e1a776",
      "range": {
        "startLine": 1213,
        "startChar": 84,
        "endLine": 1213,
        "endChar": 95
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00da816c_a0110fae",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1587,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-03-26T12:17:20Z",
      "side": 1,
      "message": "We should probably rebase on top of aosp/906908 to avoid this lot of boilerplate.",
      "range": {
        "startLine": 1575,
        "startChar": 7,
        "endLine": 1587,
        "endChar": 9
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3795d72a_59880b1b",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1587,
      "author": {
        "id": 1406251
      },
      "writtenOn": "2019-04-09T03:08:38Z",
      "side": 1,
      "message": "yes, updated this interface.",
      "parentUuid": "00da816c_a0110fae",
      "range": {
        "startLine": 1575,
        "startChar": 7,
        "endLine": 1587,
        "endChar": 9
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "044151a2_e828fb9d",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1595,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-03-25T09:48:49Z",
      "side": 1,
      "message": "What should this be?",
      "range": {
        "startLine": 1595,
        "startChar": 29,
        "endLine": 1595,
        "endChar": 34
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b955c23_bac16a78",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1595,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-03-26T12:17:20Z",
      "side": 1,
      "message": "This should simply not be specified, at least if the function is called storeDhcpLeaseInfo because the group hint has nothing to do with DHCP.\n\nIf we want to repurpose this function to a more general storing of the network, then rebase on top of aosp/930218 and use mGroupHint.",
      "parentUuid": "044151a2_e828fb9d",
      "range": {
        "startLine": 1595,
        "startChar": 29,
        "endLine": 1595,
        "endChar": 34
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28cadbdd_0adc429b",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1595,
      "author": {
        "id": 1406251
      },
      "writtenOn": "2019-04-09T03:08:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b955c23_bac16a78",
      "range": {
        "startLine": 1595,
        "startChar": 29,
        "endLine": 1595,
        "endChar": 34
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34432352_ee0f9425",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1604,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-03-25T09:48:49Z",
      "side": 1,
      "message": "Is there a reason to make this operation synchronous under latch? We don\u0027t really care if the store succeeds or fails, right?",
      "range": {
        "startLine": 1603,
        "startChar": 0,
        "endLine": 1604,
        "endChar": 70
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "912193a3_5062c677",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1604,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-03-26T12:17:20Z",
      "side": 1,
      "message": "+1, just fire and forget. The memory store will even let you pass null for the listener specifically to support this use case (as opposed to readers where listeners are non-null)",
      "parentUuid": "34432352_ee0f9425",
      "range": {
        "startLine": 1603,
        "startChar": 0,
        "endLine": 1604,
        "endChar": 70
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ceac5ecd_90cdd7c3",
        "filename": "packages/NetworkStack/src/android/net/ip/IpClient.java",
        "patchSetId": 1
      },
      "lineNbr": 1604,
      "author": {
        "id": 1406251
      },
      "writtenOn": "2019-04-09T03:08:38Z",
      "side": 1,
      "message": "Yes, we can pass in \"null\" directly. But from the perspective of easier debugging, maybe we can add \"if (DBG)\" here to enable debug log for callback.",
      "parentUuid": "912193a3_5062c677",
      "range": {
        "startLine": 1603,
        "startChar": 0,
        "endLine": 1604,
        "endChar": 70
      },
      "revId": "a260a68c5558a775eef157199dd7bf72b45d4aac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}