{
  "comments": [
    {
      "key": {
        "uuid": "1902a2d5_843a172f",
        "filename": "packages/CaptivePortalLogin/src/com/android/captiveportallogin/CaptivePortalLoginActivity.java",
        "patchSetId": 5
      },
      "lineNbr": 409,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-06-19T15:34:03Z",
      "side": 1,
      "message": "My initial thought was to ignore SSL errors only if the URL is not the top-level URL of the page (i.e., if the URL matches the latest URL received in onPageStarted).\n\nI still think that\u0027s correct, but it\u0027s probably identical to what you have here. It seems unlikely/impossible that some URLs on mHostname will have errors, but some will not - because certs are per-hostname, the URLs on mHostname will either all be valid, or all be invalid.\n\nSo in practice, the two will be mostly identical - onPageStarted can either save the URL, or it can save the hostname.\n\nThoughts?",
      "range": {
        "startLine": 408,
        "startChar": 0,
        "endLine": 409,
        "endChar": 49
      },
      "revId": "0711f229b0971d4c9f1029385d4bc8d6449a1704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f86d2d56_73c349de",
        "filename": "packages/CaptivePortalLogin/src/com/android/captiveportallogin/CaptivePortalLoginActivity.java",
        "patchSetId": 5
      },
      "lineNbr": 409,
      "author": {
        "id": 1107893
      },
      "writtenOn": "2017-06-20T00:57:15Z",
      "side": 1,
      "message": "I wonder if there are *other* circumstances for which we could get a ssl error from the java code.\n\nMore importantly I also wonder if there are some conditions for which error.getUrl() would return something else than the top-level url we tried to fetch when that causes an ssl error, for instance because of url normalization or something like this.\n\nIf this is the case, since we pass to the activity the url to load as a raw string directly read from the response header, it could be easy to exploit by sending back a url that\u0027s going to be normalized in such or such way and that would bypass a raw string equality check in this handler.",
      "parentUuid": "1902a2d5_843a172f",
      "range": {
        "startLine": 408,
        "startChar": 0,
        "endLine": 409,
        "endChar": 49
      },
      "revId": "0711f229b0971d4c9f1029385d4bc8d6449a1704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68b84660_b812b120",
        "filename": "packages/CaptivePortalLogin/src/com/android/captiveportallogin/CaptivePortalLoginActivity.java",
        "patchSetId": 5
      },
      "lineNbr": 410,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-06-19T15:35:31Z",
      "side": 1,
      "message": "Can you add an explicit:\n\n    handler.cancel();\n\ncall here?",
      "range": {
        "startLine": 410,
        "startChar": 16,
        "endLine": 410,
        "endChar": 22
      },
      "revId": "0711f229b0971d4c9f1029385d4bc8d6449a1704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46a567a7_f11b3cbb",
        "filename": "packages/CaptivePortalLogin/src/com/android/captiveportallogin/CaptivePortalLoginActivity.java",
        "patchSetId": 5
      },
      "lineNbr": 410,
      "author": {
        "id": 1107893
      },
      "writtenOn": "2017-06-20T00:57:15Z",
      "side": 1,
      "message": "Good catch. I forgot the error cleanup.",
      "parentUuid": "68b84660_b812b120",
      "range": {
        "startLine": 410,
        "startChar": 16,
        "endLine": 410,
        "endChar": 22
      },
      "revId": "0711f229b0971d4c9f1029385d4bc8d6449a1704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}