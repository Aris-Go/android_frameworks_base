{
  "comments": [
    {
      "key": {
        "uuid": "362852bc_b2cc4fac",
        "filename": "core/java/android/net/InetAddresses.java",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-11-08T15:13:38Z",
      "side": 1,
      "message": "Suggest using the example ranges - \"192.0.2.1\" or \"2001:db8::1:2\".",
      "range": {
        "startLine": 33,
        "startChar": 17,
        "endLine": 33,
        "endChar": 62
      },
      "revId": "6b313cfd31eb03e91ccbfa5505061f94d5d6a6cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27fd925f_75681f8c",
        "filename": "core/java/android/net/InetAddresses.java",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1039338
      },
      "writtenOn": "2018-11-14T15:08:03Z",
      "side": 1,
      "message": "Any particular reason why they\u0027re better?",
      "parentUuid": "362852bc_b2cc4fac",
      "range": {
        "startLine": 33,
        "startChar": 17,
        "endLine": 33,
        "endChar": 62
      },
      "revId": "6b313cfd31eb03e91ccbfa5505061f94d5d6a6cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "184782a8_1b1a5382",
        "filename": "core/java/android/net/InetAddresses.java",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-11-08T15:13:38Z",
      "side": 1,
      "message": "This particular behaviour doesn\u0027t seem very useful. Is it because that is what our current implementation already does?",
      "range": {
        "startLine": 35,
        "startChar": 50,
        "endLine": 36,
        "endChar": 65
      },
      "revId": "6b313cfd31eb03e91ccbfa5505061f94d5d6a6cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abc28052_a0a0b712",
        "filename": "core/java/android/net/InetAddresses.java",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1039338
      },
      "writtenOn": "2018-11-14T15:08:03Z",
      "side": 1,
      "message": "It\u0027s what our current code already does. If the API behavior is different to the internal method then it will make it more difficult for developers to switch. However, if this API is intended to exist long term then that cost may be worth it.\n\nOne possible approach is to change this method to address the issues you have raised and then create a support library which contains additional logic to replicate the behavior of the internal API.",
      "parentUuid": "184782a8_1b1a5382",
      "range": {
        "startLine": 35,
        "startChar": 50,
        "endLine": 36,
        "endChar": 65
      },
      "revId": "6b313cfd31eb03e91ccbfa5505061f94d5d6a6cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca8b014f_0f8d42a1",
        "filename": "core/java/android/net/InetAddresses.java",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1103203
      },
      "writtenOn": "2018-11-14T15:19:12Z",
      "side": 1,
      "message": "I don\u0027t think \"we had some internal method with this exact (bad) behavior that apps were using even though they were not supposed to\" is a strong argument for exposing a public API that does exactly the same thing as opposed to a different but better one. Apps have to change their code anyway; they can do everything they did through the old API through the new API, it just works a little bit differently. \n\nSo, I think our public API should not allow null, and should probably also not allow \"\" but I don\u0027t feel as strongly about the latter. If I correctly read between the lines on Lorenzo\u0027s comment then I suspect that he agrees.\n\n\u003e create a support library which contains additional logic to replicate the\n\u003e behavior of the internal API.\n\nI strongly disagree with this part. If we create a support library API then it should be one that makes the public API\u0027s behavior available on old platforms, not one that makes the old (internal) API\u0027s behavior available on new platforms. We could however include sample code for how to get the old API\u0027s behavior on top of the new one in a deprecation comment (@deprecated) on the old API.",
      "parentUuid": "abc28052_a0a0b712",
      "range": {
        "startLine": 35,
        "startChar": 50,
        "endLine": 36,
        "endChar": 65
      },
      "revId": "6b313cfd31eb03e91ccbfa5505061f94d5d6a6cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84d18584_ac656c4d",
        "filename": "core/java/android/net/InetAddresses.java",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-11-08T15:13:38Z",
      "side": 1,
      "message": "The implementation will actually accept IPv6 addresses in square brackets (e.g., [2001:db8::1]\") as a valid numeric IP address.\n\nThis isn\u0027t great behaviour for a public API since that format is special for URLs. Is this something we can change before we make this method public? Or do we really need to maintain compatibility with the current behaviour of the hidden function?",
      "range": {
        "startLine": 39,
        "startChar": 51,
        "endLine": 39,
        "endChar": 66
      },
      "revId": "6b313cfd31eb03e91ccbfa5505061f94d5d6a6cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fd5ddd4_af54f106",
        "filename": "core/java/android/net/InetAddresses.java",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1039338
      },
      "writtenOn": "2018-11-14T15:08:03Z",
      "side": 1,
      "message": "See above. We can change it, the only issue is whether it will increase the cost for developers to switch over.",
      "parentUuid": "84d18584_ac656c4d",
      "range": {
        "startLine": 39,
        "startChar": 51,
        "endLine": 39,
        "endChar": 66
      },
      "revId": "6b313cfd31eb03e91ccbfa5505061f94d5d6a6cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "751277fa_75575c2c",
        "filename": "core/java/android/net/InetAddresses.java",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1103203
      },
      "writtenOn": "2018-11-14T15:41:32Z",
      "side": 1,
      "message": "Chances are that if any apps rely on the internal method\u0027s behavior then they only do so accidentally. It\u0027s not clear at all that apps would prefer us to keep the old (broken, IMO) behavior rather than have the new method exhibit different (better, IMO) behavior.\n\nThat the old method accepts square brackets and null, and to a lesser extent that it accepts \"\",  all seem like poor behavior that we probably shouldn\u0027t elevate to the status of an officially sanctioned public API.",
      "parentUuid": "5fd5ddd4_af54f106",
      "range": {
        "startLine": 39,
        "startChar": 51,
        "endLine": 39,
        "endChar": 66
      },
      "revId": "6b313cfd31eb03e91ccbfa5505061f94d5d6a6cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5115c01e_590c941e",
        "filename": "core/java/android/net/InetAddresses.java",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-11-19T04:41:18Z",
      "side": 1,
      "message": "+1. I was forgetting that to use this new method, apps need to change their code anyway. Given that, it seems better to make the new method behave like we want it to behave, rather than carrying forward strange behaviours of the existing method that apps might not even be depending on.\n\nI\u0027d prefer just to say that null and \"\" are invalid IP addresses (which they undoubtedly are) and remove support for square brackets. We can communicate this to application developers in the same place as we document what new method to switch to.",
      "parentUuid": "751277fa_75575c2c",
      "range": {
        "startLine": 39,
        "startChar": 51,
        "endLine": 39,
        "endChar": 66
      },
      "revId": "6b313cfd31eb03e91ccbfa5505061f94d5d6a6cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}