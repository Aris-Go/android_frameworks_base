{
  "comments": [
    {
      "key": {
        "uuid": "fd72c913_d26b5c13",
        "filename": "services/core/java/com/android/server/connectivity/Tethering.java",
        "patchSetId": 2
      },
      "lineNbr": 241,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-01-24T09:00:31Z",
      "side": 1,
      "message": "I understand this is no worse than what we are doing for CARRIER_CONFIG_CHANGED, but what about we start fixing this while we are at it. The problem with this scheme is the race conditions, and we can work at removing them one at a time.\n\nHere is what I suggest :\n\n(Intent subChangedIntent) -\u003e {\n    log(...);\n    updateConfiguration(subChangedEvent.getInt(SubscriptionManager.EXTRA_SUBSCRIPTION_INDEX));\n    reevaluateSimCardProvisioning(...)\n  }\n\nprivate void updateConfiguration() {\n  updateConfiguration(mDeps.getDefaultDataSubscriptionId());\n}\n\nprivate void updateConfiguration(int subId) {\n  ... new TetheringConfiguration(mContext, mLog, subId);\n  ...\n}",
      "range": {
        "startLine": 241,
        "startChar": 24,
        "endLine": 241,
        "endChar": 31
      },
      "revId": "23150a145b6c73f3b998e152b786a9c65091c970",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5ed6aad_965eb7ae",
        "filename": "services/core/java/com/android/server/connectivity/Tethering.java",
        "patchSetId": 2
      },
      "lineNbr": 241,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-01-24T12:22:14Z",
      "side": 1,
      "message": "I don\u0027t think we should get subId from subChangedIntent\u0027s extra.\n1. obtain subId by different way (mDeps.getDefaultDataSubscriptionId() and get from subChangedIntent directly) in different place may increase timing issue risk. Although it is fine in current design, but we should avoid it.\n2. Intent may be delay. Its better to just treat intent broadcast as the trigger point, then query the newest value when we receive the intent.",
      "parentUuid": "fd72c913_d26b5c13",
      "range": {
        "startLine": 241,
        "startChar": 24,
        "endLine": 241,
        "endChar": 31
      },
      "revId": "23150a145b6c73f3b998e152b786a9c65091c970",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0860bfc7_8937b752",
        "filename": "services/core/java/com/android/server/connectivity/Tethering.java",
        "patchSetId": 2
      },
      "lineNbr": 241,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-01-25T01:35:24Z",
      "side": 1,
      "message": "I see. I\u0027ll defer to your judgement on this, but let me just put out there that this is a typical anti-pattern. You can\u0027t prove there is no race condition where you\u0027re getting an old value out of the synchronous call.\n\nThe reason for this is that it is typically impossible for the sender of the intent to make sure you\u0027ll get an up-to-date value. Under this scheme, it\u0027s guaranteed impossible that you won\u0027t get a future value from the synchronous method (which is sometimes wasteful but fine for your uses), but it\u0027s typically also very difficult for the sender to guarantee you will never get an *old* value (because it requires correct locking, which is a notoriously hard problem). I don\u0027t know if telephony has this right in this case, but even if it does it\u0027s at least risky for the future. By contrast, reading values from the intents (or callbacks) is guaranteed to be ordered no matter how late, which at least lets you write correct implementations.\n\nBut with that said, I\u0027ll leave the decision up to you.",
      "parentUuid": "c5ed6aad_965eb7ae",
      "range": {
        "startLine": 241,
        "startChar": 24,
        "endLine": 241,
        "endChar": 31
      },
      "revId": "23150a145b6c73f3b998e152b786a9c65091c970",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd951f31_017efb59",
        "filename": "services/core/java/com/android/server/connectivity/Tethering.java",
        "patchSetId": 2
      },
      "lineNbr": 241,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-01-25T04:11:30Z",
      "side": 1,
      "message": "Thank you raise up the potential problem here. I prefer to keep my original design according to below reasons.\n1. I want to keep consistent way that get subId via mDeps.getDefaultDataSubscriptionId()\n2. In telephony part, they also just threat subChangeIntent as trigger point which don\u0027t get subId via intent\u0027s extra. PhoeSwitcher.java is a example.\nThey receive intent in here first.\nhttps://cs.corp.google.com/android/frameworks/opt/telephony/src/java/com/android/internal/telephony/PhoneSwitcher.java?q\u003dphoneswitcher.java\u0026dr\u0026l\u003d262\nThen, query subId instead of using extra value directly.\nhttps://cs.corp.google.com/android/frameworks/opt/telephony/src/java/com/android/internal/telephony/PhoneSwitcher.java?q\u003dphoneswitcher.java\u0026dr\u0026l\u003d394\n\nThe timing gap between b and c is what I want to avoid:\na, someone trigger updateConfiguration e.g. ACTION_CARRIER_CONFIG_CHANGED. mDeps.getDefaultDataSubscriptionId() return subId2\nb, tethering receive subId change intent with old value(sbuId1) due to intent delay\nc, tethering receive subId change intent again with subId2",
      "parentUuid": "0860bfc7_8937b752",
      "range": {
        "startLine": 241,
        "startChar": 24,
        "endLine": 241,
        "endChar": 31
      },
      "revId": "23150a145b6c73f3b998e152b786a9c65091c970",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1425b795_a660be3a",
        "filename": "services/core/java/com/android/server/connectivity/Tethering.java",
        "patchSetId": 2
      },
      "lineNbr": 241,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-01-25T05:42:13Z",
      "side": 1,
      "message": "Fair enough. Thanks.",
      "parentUuid": "dd951f31_017efb59",
      "range": {
        "startLine": 241,
        "startChar": 24,
        "endLine": 241,
        "endChar": 31
      },
      "revId": "23150a145b6c73f3b998e152b786a9c65091c970",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95f4afd1_dc3bb3e1",
        "filename": "tests/net/java/com/android/server/connectivity/tethering/TetheringConfigurationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 257,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-01-24T09:00:31Z",
      "side": 1,
      "message": "Is there anything wrong with doing this in setUp and have these settings apply to all tests ?",
      "range": {
        "startLine": 257,
        "startChar": 8,
        "endLine": 257,
        "endChar": 29
      },
      "revId": "23150a145b6c73f3b998e152b786a9c65091c970",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d14e579a_6ba4fac0",
        "filename": "tests/net/java/com/android/server/connectivity/tethering/TetheringConfigurationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 257,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-01-24T12:22:14Z",
      "side": 1,
      "message": "By default, it would build non-entitlement needed resource in setup. setUpResourceForSubId() would build entitlement needed resource. I don\u0027t want apply entitlement needed resource as default resource.",
      "parentUuid": "95f4afd1_dc3bb3e1",
      "range": {
        "startLine": 257,
        "startChar": 8,
        "endLine": 257,
        "endChar": 29
      },
      "revId": "23150a145b6c73f3b998e152b786a9c65091c970",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bfd2e2e_a755b91f",
        "filename": "tests/net/java/com/android/server/connectivity/tethering/TetheringConfigurationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 257,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-01-25T01:35:24Z",
      "side": 1,
      "message": "Point taken. Thanks.",
      "parentUuid": "d14e579a_6ba4fac0",
      "range": {
        "startLine": 257,
        "startChar": 8,
        "endLine": 257,
        "endChar": 29
      },
      "revId": "23150a145b6c73f3b998e152b786a9c65091c970",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}