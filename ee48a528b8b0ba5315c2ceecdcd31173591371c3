{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "505b0c76_eaf1d0e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1003801
      },
      "writtenOn": "2022-12-01T23:50:30Z",
      "side": 1,
      "message": "Okay, I believe you\u0027re trying to have a system service in a mainline module, right?\n\nBut this CL really doesn\u0027t look like that. e.g. `RemoteProvisioningService` should be inside an apex, and it should be extending `com.android.server.SystemService`, and it should be using `SystemService.publishBinderService()` to push a binder object, _not_ with `Service.addService()`.\n\n- If your architecture is unique and supposed to be different from other mainline modules, then I need to see the design doc to understand the design. Currently, even if it\u0027s not a mainline module, it\u0027s not doing it right -- e.g. again, your \"service\" should be extending `com.android.server.SystemService`.\n\n\n\n- If it\u0027s supposed to be similar to other mainline modules, then it\u0027s really not the right way, I suggest looking into how other mainline modules do it. Wifi is probably a good module to model after. See how they use startServiceFromJar() in SystemServer.",
      "revId": "ee48a528b8b0ba5315c2ceecdcd31173591371c3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ee5a2dc_ebf0a338",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1833664
      },
      "writtenOn": "2022-12-01T23:54:35Z",
      "side": 1,
      "message": "Right, this is kind of unique. See go/rkpd-design for details.\n\ntl;dr is...\n1. A system service (it\u0027s not actually a framework component, but a binder that keystore and some other system components need to call). This is in system server because it seemed like the best place to host a service with access to ServiceManager.\n1. A bound service exposed by our mainline module. This is where the core logic lives. It cannot be in system server because its primary job is hitting the network.\n1. A mainline module system server classpath fragment that wraps up the AIDL to call our bound service. We need this because we cannot export stable AIDL from a mainline module.",
      "parentUuid": "505b0c76_eaf1d0e2",
      "revId": "ee48a528b8b0ba5315c2ceecdcd31173591371c3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "619081fd_5520416f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1833664
      },
      "writtenOn": "2022-12-01T23:59:47Z",
      "side": 1,
      "message": "Also: we only want to expose a service binder to things like keystore2, credstore, and more in the future (e.g. widevine may use it).\n\nThat\u0027s why we\u0027re doing the addBinder. My understanding is that `publishBinderService` would also publish a framework service to java apps. But we don\u0027t really want that (I could be mistaken on this point, though).",
      "parentUuid": "9ee5a2dc_ebf0a338",
      "revId": "ee48a528b8b0ba5315c2ceecdcd31173591371c3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}