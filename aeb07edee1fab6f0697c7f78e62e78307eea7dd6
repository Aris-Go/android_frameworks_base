{
  "comments": [
    {
      "key": {
        "uuid": "f2353d50_5d99c5ae",
        "filename": "packages/CaptivePortalLogin/src/com/android/captiveportallogin/CaptivePortalLoginActivity.java",
        "patchSetId": 7
      },
      "lineNbr": 484,
      "author": {
        "id": 1021004
      },
      "writtenOn": "2019-03-07T16:45:01Z",
      "side": 1,
      "message": "You should put view.getUrl() into a temporary instead of calling it twice here - it\u0027s possible for it to change while this function is executing which could make the logging very confusing.",
      "revId": "aeb07edee1fab6f0697c7f78e62e78307eea7dd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bed815d_dd56b59d",
        "filename": "packages/CaptivePortalLogin/src/com/android/captiveportallogin/CaptivePortalLoginActivity.java",
        "patchSetId": 7
      },
      "lineNbr": 484,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-03-12T08:47:18Z",
      "side": 1,
      "message": "+1. Something like:\n\n    String viewURL \u003d view.getUrl();\n    String errorURL \u003d error.getUrl();\n    Log.d(TAG, ...);\n    if (TextUtils.isEmpty(errorURL)) {\n        ...",
      "parentUuid": "f2353d50_5d99c5ae",
      "revId": "aeb07edee1fab6f0697c7f78e62e78307eea7dd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07fe3630_c9b68e42",
        "filename": "packages/CaptivePortalLogin/src/com/android/captiveportallogin/CaptivePortalLoginActivity.java",
        "patchSetId": 7
      },
      "lineNbr": 489,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-03-12T08:47:18Z",
      "side": 1,
      "message": "This is a change in behaviour. The previous code suppressed the SSL error if the hostname matched. The new code suppresses the SSL error if the URL matches. Is there a reason to change the behaviour? Do we know what will happen if we change the behaviour?",
      "revId": "aeb07edee1fab6f0697c7f78e62e78307eea7dd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efe2927e_74dd6381",
        "filename": "packages/CaptivePortalLogin/src/com/android/captiveportallogin/CaptivePortalLoginActivity.java",
        "patchSetId": 7
      },
      "lineNbr": 489,
      "author": {
        "id": 1308163
      },
      "writtenOn": "2019-03-12T09:18:47Z",
      "side": 1,
      "message": "The problem is there is no guarantee that onPageStated() will be called before onReceivedSslError(), so mHostname will not be set if onReceivedSslError() is called before onPageStated().\nIt will make CaptivePortalLogin app cannot show SSL error page to user normally, but just show the blank page to user.\n\nRichard suggested that we could add one more overloading method - shouldOverrideUrlLoading() to get the URL which will be loaded in the current webview.\nAnd we could compare the error.getUrl() with the url which is coming from shouldOverrideUrlLoading() to check if the SSL error is coming from login page or resources.\nSomething like:\nString mLoadingUrl;\n@Override\npublic boolean shouldOverrideUrlLoading(WebView webView, String newUrl) {\n    mLoadingUrl \u003d newUrl;\n    return false;\n}\n\n@Override\npublic void onReceivedSslError(WebView view, SslErrorHandler handler, SslError error) {\n    if (TextUtils.isEmpty(error.getUrl())\n            || !TextUtils.equals(error.getUrl(), mLoadingUrl)) {\n        handler.cancel();\n        return;\n    }\n    ...\n}\n\nRichard, if I\u0027m wrong please correct me directly.",
      "parentUuid": "07fe3630_c9b68e42",
      "revId": "aeb07edee1fab6f0697c7f78e62e78307eea7dd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e52e16e6_658ca43c",
        "filename": "packages/CaptivePortalLogin/src/com/android/captiveportallogin/CaptivePortalLoginActivity.java",
        "patchSetId": 7
      },
      "lineNbr": 489,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-03-12T09:57:20Z",
      "side": 1,
      "message": "Actually, all I was saying is: currently the code checks if the error URL is the same as view URL. But the previous code only checked if the *host* of the two URLs was the same.\n\nFWIW it looks like we already override shouldOverrideUrlLoading. So if Richard thinks that\u0027s a better way to do this, then we can set mHostname in shouldOverrideUrlLoading instead of in on PageStarted. One thing that worries me about that is that the documentation says \"Note: This method may be called for subframes [...]\". Is that what we want?\n\nRichard, is it safe to write to an instance member variable in shouldOverrideUrlLoading()? Is it guaranteed that that function will only ever be called on the same thread?",
      "parentUuid": "efe2927e_74dd6381",
      "revId": "aeb07edee1fab6f0697c7f78e62e78307eea7dd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d86a3bb7_65d1415c",
        "filename": "packages/CaptivePortalLogin/src/com/android/captiveportallogin/CaptivePortalLoginActivity.java",
        "patchSetId": 7
      },
      "lineNbr": 489,
      "author": {
        "id": 1021004
      },
      "writtenOn": "2019-03-12T17:55:01Z",
      "side": 1,
      "message": "All WebView callbacks are invoked on the UI thread unless otherwise documented.\n\nChecking if the URL is the same should be fine; checking the host isn\u0027t really gaining anything as I mentioned in my earlier comment (the same SSL connection is typically reused anyway and if it\u0027s accepted/rejected by your callback it will apply the same answer to all requests)\n\nYou can check WebResourceRequest.isForMainFrame() to see if it\u0027s a main frame navigation or not.",
      "parentUuid": "e52e16e6_658ca43c",
      "revId": "aeb07edee1fab6f0697c7f78e62e78307eea7dd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}