{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f50afcb1_c95bea23",
        "filename": "telecomm/java/android/telecom/Phone.java",
        "patchSetId": 2
      },
      "lineNbr": 118,
      "author": {
        "id": 1138358
      },
      "writtenOn": "2021-07-19T17:07:14Z",
      "side": 1,
      "message": "Annotate this with `@GuardedBy(\"mLock\")` ? That also allows Lint to find out where mCallByTelecomCallId is accessed w/o mLock held.",
      "range": {
        "startLine": 118,
        "startChar": 4,
        "endLine": 118,
        "endChar": 5
      },
      "revId": "a5e7d3cdf9bbc597a3cde4f029701a4532367ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "089905ff_0063661a",
        "filename": "telecomm/java/android/telecom/Phone.java",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 1138358
      },
      "writtenOn": "2021-07-19T17:07:14Z",
      "side": 1,
      "message": "I think all `get` needs to grab mLock. Otherwise, one thread w/o mLock can do get while another thread w/ mLock is doing add/remove, and hence still cause ConcurrentModificationException.",
      "range": {
        "startLine": 194,
        "startChar": 24,
        "endLine": 194,
        "endChar": 48
      },
      "revId": "a5e7d3cdf9bbc597a3cde4f029701a4532367ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}