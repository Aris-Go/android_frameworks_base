{
  "comments": [
    {
      "key": {
        "uuid": "e4eb7671_7b6d40f5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2020-03-10T06:40:49Z",
      "side": 1,
      "message": "about\n\n(but it does not matter)",
      "range": {
        "startLine": 7,
        "startChar": 47,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "408efc26e6e87c8cd9197439aeb28fb4fa37306e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5bb29b3_1f9abf9b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1306837
      },
      "writtenOn": "2020-03-11T09:59:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e4eb7671_7b6d40f5",
      "range": {
        "startLine": 7,
        "startChar": 47,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "408efc26e6e87c8cd9197439aeb28fb4fa37306e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1cd3c4e_90335b3c",
        "filename": "core/java/android/net/netstats/provider/INetworkStatsProviderCallback.aidl",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2020-03-10T06:40:49Z",
      "side": 1,
      "message": "Optional : you may want to align this on the public API names.",
      "range": {
        "startLine": 27,
        "startChar": 9,
        "endLine": 27,
        "endChar": 21
      },
      "revId": "408efc26e6e87c8cd9197439aeb28fb4fa37306e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2845b4b_bb86b6d0",
        "filename": "core/java/android/net/netstats/provider/INetworkStatsProviderCallback.aidl",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1306837
      },
      "writtenOn": "2020-03-11T09:59:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1cd3c4e_90335b3c",
      "range": {
        "startLine": 27,
        "startChar": 9,
        "endLine": 27,
        "endChar": 21
      },
      "revId": "408efc26e6e87c8cd9197439aeb28fb4fa37306e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24d30c9a_05182ce8",
        "filename": "core/java/android/net/netstats/provider/NetworkStatsProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2020-03-10T06:40:49Z",
      "side": 1,
      "message": "You may return null here, because it may have been unregistered between these two lines.",
      "range": {
        "startLine": 89,
        "startChar": 15,
        "endLine": 89,
        "endChar": 32
      },
      "revId": "408efc26e6e87c8cd9197439aeb28fb4fa37306e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f71c2685_df42cef6",
        "filename": "core/java/android/net/netstats/provider/NetworkStatsProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1306837
      },
      "writtenOn": "2020-03-11T09:59:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24d30c9a_05182ce8",
      "range": {
        "startLine": 89,
        "startChar": 15,
        "endLine": 89,
        "endChar": 32
      },
      "revId": "408efc26e6e87c8cd9197439aeb28fb4fa37306e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bb00bbf_771e48d5",
        "filename": "core/java/android/net/netstats/provider/NetworkStatsProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2020-03-10T06:40:49Z",
      "side": 1,
      "message": "This is a bit dangerous as a design. Consider :\n\nThread 1 :\nregister(myProvider);\n...\nunregister(myProvider);\n...\nregister(myProvider);\n\nThread 2 :\nif (isRegistered()) {\n  /* here */\n}\n\nNot only you might crash because the provider might have been unregistered, it\u0027s also very possible you\u0027re going to send data to the old value of the binder and the call is ignored.\n\nA common pattern to avoid this is to make the object one-shot, as in : you make it illegal to re-register a provider that has been unregistered. The simplest way to do this is probably to say that mProviderCbBinder can only be null before it\u0027s registered and only goes null â†’ non-null, which saves you a lot of multithreading headaches. And then in register(), if it\u0027s already non-null you throw. This is similar to a lateinit var in Kotlin, which can only be null before it\u0027s been initialized once.\n\n(unfortunately that will require you change the tests)",
      "range": {
        "startLine": 95,
        "startChar": 19,
        "endLine": 95,
        "endChar": 31
      },
      "revId": "408efc26e6e87c8cd9197439aeb28fb4fa37306e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "097fc994_5bceb9f3",
        "filename": "core/java/android/net/netstats/provider/NetworkStatsProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1306837
      },
      "writtenOn": "2020-03-10T09:59:28Z",
      "side": 1,
      "message": "Hmm, not very sure, we can prevent re-registering.\nHowever this is only used to determine status in client side. \n(See OffloadController of this patch)\nSo we\u0027ll still calls into new binder if that happens, right?\n\nBesides, If it cannot go back to null then it is hard to judge after unregistering.\nThus we have to add a boolean mIsRegistered to determine this.\nAny alternative way instead of adding boolean?",
      "parentUuid": "3bb00bbf_771e48d5",
      "range": {
        "startLine": 95,
        "startChar": 19,
        "endLine": 95,
        "endChar": 31
      },
      "revId": "408efc26e6e87c8cd9197439aeb28fb4fa37306e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "786dcdf8_5bd34d95",
        "filename": "core/java/android/net/netstats/provider/NetworkStatsProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2020-03-10T23:05:48Z",
      "side": 1,
      "message": "Here is what I suggest :\n\n  NetworkStatsProvider.java :\n  // Only null before registering, never null once non-null\n  @Nullable\n  private INetworkStatsProviderCallback mProviderCbBinder;\n\n  @hide public getProviderCallbackBinder() {\n    return mProviderCbBinder;\n  }\n  // Remove isRegistered() method\n\n\n  NetworkStatsProvider.java :\n  public void registerNetworkStatsProvider(tag, provider) {\n    if (provider.getProviderCallbackBinder() !\u003d null) {\n      throw \"Already registered\";\n    }\n    final INetworkStatsProviderCallback cbBinder \u003d\n     mService.registerNetworkStatsProvider(tag, provider.getProviderBinder());\n    provider.setProviderCallbackBinder(cbBinder);\n  }\n\n  public void unregisterNetworkStatsProvider(provider) {\n    provider.getProviderCallbackBinder().unregister();\n  }\n\nAfter unregister, getProviderCallbackBinder() continues to return the old object, and that\u0027s fine\n\nOptionally, you may have\n  @hide public setProviderCallbackBinder(newBinder) {\n    if (null \u003d\u003d newBinder) throw \"Can\u0027t set to a null value\";\n    if (null !\u003d mProviderCbBinder) throw \"Already set\";\n    mProviderCbBinder \u003d newBinder;\n  }",
      "parentUuid": "097fc994_5bceb9f3",
      "range": {
        "startLine": 95,
        "startChar": 19,
        "endLine": 95,
        "endChar": 31
      },
      "revId": "408efc26e6e87c8cd9197439aeb28fb4fa37306e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0abac6ef_982021fe",
        "filename": "core/java/android/net/netstats/provider/NetworkStatsProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1306837
      },
      "writtenOn": "2020-03-11T01:23:28Z",
      "side": 1,
      "message": "Thanks for writing up.\nYes I understand the idea.\nBut what confused me is the isRegistered part.\nWithout that we don\u0027t have a method for client side to know what is the status.\nUnless every client or NetworkStatsProvider remember this with an additional mIsRegistered boolen, right?",
      "parentUuid": "786dcdf8_5bd34d95",
      "range": {
        "startLine": 95,
        "startChar": 19,
        "endLine": 95,
        "endChar": 31
      },
      "revId": "408efc26e6e87c8cd9197439aeb28fb4fa37306e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "318b8796_9259ac13",
        "filename": "core/java/android/net/netstats/provider/NetworkStatsProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1306837
      },
      "writtenOn": "2020-03-11T09:59:13Z",
      "side": 1,
      "message": "Done\nI\u0027d like to keep getProviderCallbackBinderOrThrow() method since it is useful since we don\u0027t need to do null check everywhere.\nSee if this works for you.\n\nAlso in OffloadController I added some protection to prevent crash if not registered.\nSince it is in mainline module we may want that to stay stable in user rom\nif anything wrong, does it make sense?",
      "parentUuid": "0abac6ef_982021fe",
      "range": {
        "startLine": 95,
        "startChar": 19,
        "endLine": 95,
        "endChar": 31
      },
      "revId": "408efc26e6e87c8cd9197439aeb28fb4fa37306e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35030b5a_12c52137",
        "filename": "core/java/android/net/netstats/provider/NetworkStatsProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2020-03-10T06:40:49Z",
      "side": 1,
      "message": "Let\u0027s use the names suggested by michaelwr@",
      "range": {
        "startLine": 117,
        "startChar": 16,
        "endLine": 117,
        "endChar": 28
      },
      "revId": "408efc26e6e87c8cd9197439aeb28fb4fa37306e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f1a203c_9b9cadac",
        "filename": "core/java/android/net/netstats/provider/NetworkStatsProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1306837
      },
      "writtenOn": "2020-03-11T09:59:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35030b5a_12c52137",
      "range": {
        "startLine": 117,
        "startChar": 16,
        "endLine": 117,
        "endChar": 28
      },
      "revId": "408efc26e6e87c8cd9197439aeb28fb4fa37306e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}