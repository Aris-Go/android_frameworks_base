{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "987e7201_35c93bd3",
        "filename": "core/java/android/app/AppOpsManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1331,
      "author": {
        "id": 1572720
      },
      "writtenOn": "2022-03-17T18:31:35Z",
      "side": 1,
      "message": "Why is this an app op? Shouldn\u0027t a request without transport be assigned to one of the other transport methods?",
      "range": {
        "startLine": 1331,
        "startChar": 71,
        "endLine": 1331,
        "endChar": 80
      },
      "revId": "02568c62a643082f39788f41c4db28b942565cec",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89e371fa_547627d1",
        "filename": "core/java/android/app/AppOpsManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1331,
      "author": {
        "id": 1351609
      },
      "writtenOn": "2022-03-17T22:06:31Z",
      "side": 1,
      "message": "+1 - app ops are also used for tracking so it seems to me we should track the access in the correct category. Or, why do we need to track this for different transport, does that mean we\u0027ll need to have a larger number of similar app ops in the future?",
      "parentUuid": "987e7201_35c93bd3",
      "range": {
        "startLine": 1331,
        "startChar": 71,
        "endLine": 1331,
        "endChar": 80
      },
      "revId": "02568c62a643082f39788f41c4db28b942565cec",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7dd3d30_0eb17e50",
        "filename": "core/java/android/app/AppOpsManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1331,
      "author": {
        "id": 1237921
      },
      "writtenOn": "2022-03-18T05:54:59Z",
      "side": 1,
      "message": "The purpose is tracking application behavior. CTA new requirement requires tracking application which uses Cellular, Wi-Fi and Bluetooth. In the future, CTA may require other transports but now only 3 transport now. For requests without transport, the tracker will ultimately decide from the default network.",
      "parentUuid": "89e371fa_547627d1",
      "range": {
        "startLine": 1331,
        "startChar": 71,
        "endLine": 1331,
        "endChar": 80
      },
      "revId": "02568c62a643082f39788f41c4db28b942565cec",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef14d0f8_e298e62f",
        "filename": "core/java/android/app/AppOpsManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1331,
      "author": {
        "id": 1351609
      },
      "writtenOn": "2022-03-18T07:36:56Z",
      "side": 1,
      "message": "Got it, thanks for the info. Could you further clarify:\n\n1. Are these app op used only for tracking, so that their mode doesn\u0027t matter?\n2. How are you using the app ops for tracking? e.g. are you using only the last access time, or info logged into `HistoricalRegistry`, or the `DiscreteRegistry`?\n3. How often are these app ops noted? e.g. are they logged once per process lifetime the first time they use a type of network, or upon on every network request, or only when they explicitly ask for a certain network type? I\u0027m asking because I\u0027d like to make sure it\u0027s not being logged too frequently so that there won\u0027t be system health concern in this design.\n4. Why does this need to be a system API in AOSP? If you only need to to be readable by the platform and platform apps, it\u0027s perfectly fine for them to be hidden. If it\u0027s only for testing, you may also make it @TestApi. Generally we only make things (system) API when they have to be.\n5. What\u0027s the benefits of having this in AOSP and as AOSP APIs, if it\u0027s only used for verification on non-release builds and only in China? If we do want them, will/can they be disabled by default in AOSP?",
      "parentUuid": "f7dd3d30_0eb17e50",
      "range": {
        "startLine": 1331,
        "startChar": 71,
        "endLine": 1331,
        "endChar": 80
      },
      "revId": "02568c62a643082f39788f41c4db28b942565cec",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72822075_4bc086b9",
        "filename": "core/java/android/app/AppOpsManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1331,
      "author": {
        "id": 1237921
      },
      "writtenOn": "2022-03-18T10:30:40Z",
      "side": 1,
      "message": "Thank you for your questions.\n\n1. Not only tracking but also record what type of network is used.\n2. The following information is required to record application\u0027s behavior.\n- Timing of API call\n- Name of caller application\n- API call permission\n3. Recorded every time an app calls #requestNetwork.\n4. We may not be able to place the app to record the behavior in system_ext in the future. So, system api is better.\n5. OEMs can use this API to support the new CTA requirements. In CTA test, we have to use release builds.",
      "parentUuid": "ef14d0f8_e298e62f",
      "range": {
        "startLine": 1331,
        "startChar": 71,
        "endLine": 1331,
        "endChar": 80
      },
      "revId": "02568c62a643082f39788f41c4db28b942565cec",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b67bdc7e_8a9f391c",
        "filename": "core/java/android/app/AppOpsManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1331,
      "author": {
        "id": 1237921
      },
      "writtenOn": "2022-03-18T11:08:38Z",
      "side": 1,
      "message": "For 1, I misunderstood your question. I will correct the answer as below.\n1. Yes, it is used only for tracking and their mode doesn\u0027t matter.",
      "parentUuid": "72822075_4bc086b9",
      "range": {
        "startLine": 1331,
        "startChar": 71,
        "endLine": 1331,
        "endChar": 80
      },
      "revId": "02568c62a643082f39788f41c4db28b942565cec",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba2ea2a5_27630e4b",
        "filename": "core/java/android/app/AppOpsManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1331,
      "author": {
        "id": 1351609
      },
      "writtenOn": "2022-03-18T20:22:42Z",
      "side": 1,
      "message": "1. Thanks for the clarification. I see that this is used only for tracking now.\n2. Do you need to record every one of them? (If so, seems you are implying you want DiscreteRegistry, which by default is only enabled for Camera and Mic and Location) And how long does the record needs to be retained? What about simply recording the access outside app ops in a dedicated place?\n3. How often does that happen in reality? i.e. will we be overwhelming app ops infrastructure?\n4. If you can\u0027t place the app in system_ext (or on a system partition), how does making this a system API help the app use it? It seems to me you will need public API in that case.\n5. The policy on b/194855500 said `The Test Mode is only used for helping CTA test, and this mode should be removed in official release`. So it seems to me there won\u0027t be any user of this on an official release build, so that there shouldn\u0027t be an API about this on an official release build either. Could you further explain why this needs to be an official (system) API?",
      "parentUuid": "b67bdc7e_8a9f391c",
      "range": {
        "startLine": 1331,
        "startChar": 71,
        "endLine": 1331,
        "endChar": 80
      },
      "revId": "02568c62a643082f39788f41c4db28b942565cec",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ef9b984_c12a03d4",
        "filename": "core/java/android/app/AppOpsManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1331,
      "author": {
        "id": 1237921
      },
      "writtenOn": "2022-03-23T08:13:12Z",
      "side": 1,
      "message": "2. No, we are going to record while a system app gets the callback from AppOps via AppOpsManager#OnOpNotedCallback. So, we don\u0027t have any plan to use DiscreteRegistry.\n\n3. No, I don\u0027t think so. This happens only when app calls ConnectivityManager#requestNetwork.\n\n4. App which records this behavior may not be placed in the system_ext in the future. If so, the app will not be able to access hidden API. So, we need this API to be public or system API.\n\n5. The app which records this behavior will not be in official release build but we still need this API because ConnectivityService uses this API and we can\u0027t remove this implementation from official build. Please see the following CL.\n\nhttps://android-review.googlesource.com/c/platform/packages/modules/Connectivity/+/2028343",
      "parentUuid": "ba2ea2a5_27630e4b",
      "range": {
        "startLine": 1331,
        "startChar": 71,
        "endLine": 1331,
        "endChar": 80
      },
      "revId": "02568c62a643082f39788f41c4db28b942565cec",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b16c9a66_ee6924f1",
        "filename": "core/java/android/app/AppOpsManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1331,
      "author": {
        "id": 1351609
      },
      "writtenOn": "2022-03-23T22:03:52Z",
      "side": 1,
      "message": "2. I see. Could you show me the code that records the access when `a system app gets the callback from AppOps via AppOpsManager#OnOpNotedCallback`? I didn\u0027t find it in the topic of this CL.\nSince the `OnOpNotedCallback` callback is back delivered to the calling process, it seems to me that code has to be in the process of those system apps as well, which sounds like letting them report their own access and that doesn\u0027t sound reliable. It seems to me a solution on the system server side would be more robust.\n3. I see, thanks for the info.\n4. If the app won\u0027t be a system app, I don\u0027t think expose this as system API will work in that situation - it has to be a public API in that case, however we need to be even more careful with public APIs since they can\u0027t be removed (at most marked as removed).\n5. Can `ConnectivityService` just collect the access right when they are currently calling `noteOpNoThrow`, in their own in-memory data structure? It seems to me this way we don\u0027t have to jump through the hoops of app ops at all, and we can simplify the design a lot while also saving new APIs for it.",
      "parentUuid": "1ef9b984_c12a03d4",
      "range": {
        "startLine": 1331,
        "startChar": 71,
        "endLine": 1331,
        "endChar": 80
      },
      "revId": "02568c62a643082f39788f41c4db28b942565cec",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27c985aa_9b4cbe76",
        "filename": "core/java/android/app/AppOpsManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1331,
      "author": {
        "id": 1237921
      },
      "writtenOn": "2022-03-24T06:21:33Z",
      "side": 1,
      "message": "2. I\u0027m sorry but I can\u0027t provide the implementation because it is our proprietary code. \"system server side would be more robust\" means we should use HistoricalRegistry or DiscreteRegistry? Could you tell me how we can use it and how we can access to the data we want?\n\n4. Our application is system app and we will move the app to product partition. In my understanding, an app in product partition can access System API. Please correct me if I am wrong.\n\n5. Do you mean that ConnectivityService should collect this behavior in their own in-memory and provide them to other app which need it instead of adding new API?",
      "parentUuid": "b16c9a66_ee6924f1",
      "range": {
        "startLine": 1331,
        "startChar": 71,
        "endLine": 1331,
        "endChar": 80
      },
      "revId": "02568c62a643082f39788f41c4db28b942565cec",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}