{
  "comments": [
    {
      "key": {
        "uuid": "2823668f_c5bb5a9d",
        "filename": "core/java/android/app/SharedPreferencesImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 1013508
      },
      "writtenOn": "2015-02-23T21:30:36Z",
      "side": 1,
      "message": "To avoid the extra allocations of creating a copy, consider wrapping using Collections.unmodifiableSet() instead.",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 232,
        "endChar": 66
      },
      "revId": "366a3e487acc01f4a2f5a5596893e9b007968d7d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5ece17a_a1db9e73",
        "filename": "core/java/android/app/SharedPreferencesImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-23T21:32:49Z",
      "side": 1,
      "message": "i think that\u0027s a larger behavioural change. some operations on the return value will now throw an unsupportedoperationexception when they wouldn\u0027t earlier.",
      "parentUuid": "2823668f_c5bb5a9d",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 232,
        "endChar": 66
      },
      "revId": "366a3e487acc01f4a2f5a5596893e9b007968d7d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08206281_c4035e88",
        "filename": "core/java/android/app/SharedPreferencesImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 1013508
      },
      "writtenOn": "2015-02-23T21:37:11Z",
      "side": 1,
      "message": "Forcing a copy is a penalty to the vast majority of developers using this API correctly.\n\nMaybe copy whatever unmodifiableSet() is doing internally, but silently drop mutations instead of throwing?  (Or if you\u0027re feeling super ambitious, piping in targetApi of the app through the ctor, and throw for newer apps.)",
      "parentUuid": "a5ece17a_a1db9e73",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 232,
        "endChar": 66
      },
      "revId": "366a3e487acc01f4a2f5a5596893e9b007968d7d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5ece17a_61ed9613",
        "filename": "core/java/android/app/SharedPreferencesImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-23T21:39:20Z",
      "side": 1,
      "message": "I think a targetSdkVersion based check is probably the right way forward.\n\nLuckily, the constructors for this class aren\u0027t public so that should be relatively bullet proof :)",
      "parentUuid": "08206281_c4035e88",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 232,
        "endChar": 66
      },
      "revId": "366a3e487acc01f4a2f5a5596893e9b007968d7d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e71593_8213fa89",
        "filename": "core/java/android/app/SharedPreferencesImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-23T21:40:16Z",
      "side": 1,
      "message": "(no strong opinions though, i\u0027ll leave it up to you, hackbod et al.)",
      "parentUuid": "a5ece17a_61ed9613",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 232,
        "endChar": 66
      },
      "revId": "366a3e487acc01f4a2f5a5596893e9b007968d7d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e71593_a224bed1",
        "filename": "core/java/android/app/SharedPreferencesImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 1012083
      },
      "writtenOn": "2015-02-23T22:20:37Z",
      "side": 1,
      "message": "\"to the vast majority of developers using this API correctly\" means that one still have to create a new set allocation to update the property. If it\u0027s properly documented in the API, extra allocations will be saved if the property isn\u0027t updated. Anyway, I\u0027ll wait your decision.",
      "parentUuid": "c5e71593_8213fa89",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 232,
        "endChar": 66
      },
      "revId": "366a3e487acc01f4a2f5a5596893e9b007968d7d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}