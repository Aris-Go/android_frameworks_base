{
  "comments": [
    {
      "key": {
        "uuid": "b80d74c3_77c08c87",
        "filename": "packages/DynamicSystemInstallationService/src/com/android/dynsystem/DynamicSystemInstallationService.java",
        "patchSetId": 17
      },
      "lineNbr": 162,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-01-23T02:28:40Z",
      "side": 1,
      "message": "Just use comma\n\nor + e.getMessage()",
      "range": {
        "startLine": 162,
        "startChar": 61,
        "endLine": 162,
        "endChar": 64
      },
      "revId": "05818403bd348e4f83d3331764798fea8986f941",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10831b53_7280d35c",
        "filename": "packages/DynamicSystemInstallationService/src/com/android/dynsystem/DynamicSystemInstallationService.java",
        "patchSetId": 17
      },
      "lineNbr": 162,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2020-01-23T12:56:35Z",
      "side": 1,
      "message": "Why prefer getMessage() over toString()? I though it\u0027s important to log the exception type?\ncomma will print the whole stack trace which may be too verbose, I\u0027d like to use toString() so that both the exception type and message is logged.",
      "parentUuid": "b80d74c3_77c08c87",
      "range": {
        "startLine": 162,
        "startChar": 61,
        "endLine": 162,
        "endChar": 64
      },
      "revId": "05818403bd348e4f83d3331764798fea8986f941",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "712fad6a_218cdc4c",
        "filename": "packages/DynamicSystemInstallationService/src/com/android/dynsystem/DynamicSystemInstallationService.java",
        "patchSetId": 17
      },
      "lineNbr": 162,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-01-24T02:51:41Z",
      "side": 1,
      "message": "If this intentional, sgtm",
      "parentUuid": "10831b53_7280d35c",
      "range": {
        "startLine": 162,
        "startChar": 61,
        "endLine": 162,
        "endChar": 64
      },
      "revId": "05818403bd348e4f83d3331764798fea8986f941",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22edf8b5_4da25cc4",
        "filename": "packages/DynamicSystemInstallationService/src/com/android/dynsystem/InstallationAsyncTask.java",
        "patchSetId": 17
      },
      "lineNbr": 64,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-01-23T02:28:40Z",
      "side": 1,
      "message": "Is this used anywhere?",
      "range": {
        "startLine": 64,
        "startChar": 18,
        "endLine": 64,
        "endChar": 37
      },
      "revId": "05818403bd348e4f83d3331764798fea8986f941",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52827400_8bdc184d",
        "filename": "packages/DynamicSystemInstallationService/src/com/android/dynsystem/InstallationAsyncTask.java",
        "patchSetId": 17
      },
      "lineNbr": 64,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2020-01-23T07:45:09Z",
      "side": 1,
      "message": "Sorry I missed this.\nThis is thrown when a key is revoked. The key checking code is however in a follow-up change, I should move this to the follow-up change, too.",
      "parentUuid": "22edf8b5_4da25cc4",
      "range": {
        "startLine": 64,
        "startChar": 18,
        "endLine": 64,
        "endChar": 37
      },
      "revId": "05818403bd348e4f83d3331764798fea8986f941",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cfac7d9_7550a8c5",
        "filename": "packages/DynamicSystemInstallationService/src/com/android/dynsystem/InstallationAsyncTask.java",
        "patchSetId": 17
      },
      "lineNbr": 168,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-01-23T02:28:40Z",
      "side": 1,
      "message": "This is effectively logging it twice...",
      "range": {
        "startLine": 168,
        "startChar": 23,
        "endLine": 168,
        "endChar": 38
      },
      "revId": "05818403bd348e4f83d3331764798fea8986f941",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03f78db0_26841329",
        "filename": "packages/DynamicSystemInstallationService/src/com/android/dynsystem/InstallationAsyncTask.java",
        "patchSetId": 17
      },
      "lineNbr": 168,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2020-01-23T07:45:09Z",
      "side": 1,
      "message": "This is because Log.e(TAG, message, e) doesn\u0027t log \"e\" if \"e\" is of type \"UnknownHostException\". Use this so that at least the exception type is logged when e is UnknownHostException.\nOur rationale here: https://android-review.googlesource.com/c/platform/frameworks/base/+/1183407/14/packages/DynamicSystemInstallationService/src/com/android/dynsystem/InstallationAsyncTask.java#161",
      "parentUuid": "1cfac7d9_7550a8c5",
      "range": {
        "startLine": 168,
        "startChar": 23,
        "endLine": 168,
        "endChar": 38
      },
      "revId": "05818403bd348e4f83d3331764798fea8986f941",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f449e50_b52a4ff9",
        "filename": "packages/DynamicSystemInstallationService/src/com/android/dynsystem/InstallationAsyncTask.java",
        "patchSetId": 17
      },
      "lineNbr": 168,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-01-24T02:50:36Z",
      "side": 1,
      "message": "Ah I see; UnknownHostException is special.\n\nFrom Log.java:\n\n            // This is to reduce the amount of log spew that apps do in the non-error\n            // condition of the network being unavailable.",
      "parentUuid": "03f78db0_26841329",
      "range": {
        "startLine": 168,
        "startChar": 23,
        "endLine": 168,
        "endChar": 38
      },
      "revId": "05818403bd348e4f83d3331764798fea8986f941",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34e0009e_3a213391",
        "filename": "packages/DynamicSystemInstallationService/src/com/android/dynsystem/InstallationAsyncTask.java",
        "patchSetId": 17
      },
      "lineNbr": 253,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-01-23T02:28:40Z",
      "side": 1,
      "message": "I prefer specific exceptions (I don\u0027t know what the general recommendation is though), because fromUrl throws specific exceptions.\n\nMaybe IOException | JSONException?",
      "revId": "05818403bd348e4f83d3331764798fea8986f941",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "072d8031_f261504e",
        "filename": "packages/DynamicSystemInstallationService/src/com/android/dynsystem/InstallationAsyncTask.java",
        "patchSetId": 17
      },
      "lineNbr": 264,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-01-23T02:28:40Z",
      "side": 1,
      "message": "Can you explain why permissive for local files?",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 264,
        "endChar": 82
      },
      "revId": "05818403bd348e4f83d3331764798fea8986f941",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3a98858_ab9ee8a1",
        "filename": "packages/DynamicSystemInstallationService/src/com/android/dynsystem/KeyRevocationList.java",
        "patchSetId": 17
      },
      "lineNbr": 128,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-01-23T02:28:40Z",
      "side": 1,
      "message": "Use try with resources to avoid the ugly \"finally\" at the end",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 128,
        "endChar": 13
      },
      "revId": "05818403bd348e4f83d3331764798fea8986f941",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06b2c6f7_8b693093",
        "filename": "packages/DynamicSystemInstallationService/src/com/android/dynsystem/KeyRevocationList.java",
        "patchSetId": 17
      },
      "lineNbr": 128,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-01-23T02:32:56Z",
      "side": 1,
      "message": "e.g. have a new function:\n\nInputStream openUrl() throws IOException {\n            URLConnection connection \u003d url.openConnection();\n            connection.setUseCaches(true);\n            connection.addRequestProperty(\"Cache-Control\", \"max-age\u003d0\");\n            return connection.getInputStream();\n}\n\nthen\n\n\ntry(InputStream stream \u003d openUrl()) {\n    ...\n}",
      "parentUuid": "e3a98858_ab9ee8a1",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 128,
        "endChar": 13
      },
      "revId": "05818403bd348e4f83d3331764798fea8986f941",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a392cafa_7d4200c2",
        "filename": "packages/DynamicSystemInstallationService/src/com/android/dynsystem/KeyRevocationList.java",
        "patchSetId": 17
      },
      "lineNbr": 137,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-01-23T02:15:53Z",
      "side": 1,
      "message": "You may use:\n\n   new JSONObject(new BufferedReader(new InputStreamReader(connection.getInputStream()));\n\nThis saves you the buffer to store the whole file.\n\nNot sure if you should or should not add a BufferedReader in between.",
      "range": {
        "startLine": 137,
        "startChar": 0,
        "endLine": 137,
        "endChar": 53
      },
      "revId": "05818403bd348e4f83d3331764798fea8986f941",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de055492_3ecd5fae",
        "filename": "packages/DynamicSystemInstallationService/src/com/android/dynsystem/KeyRevocationList.java",
        "patchSetId": 17
      },
      "lineNbr": 137,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2020-01-23T07:45:09Z",
      "side": 1,
      "message": "JSONObject\u0027s constructor accepts a String object but not InputStream or Reader. That\u0027s why I need the readFully() because I want to convert InputStream to String.",
      "parentUuid": "a392cafa_7d4200c2",
      "range": {
        "startLine": 137,
        "startChar": 0,
        "endLine": 137,
        "endChar": 53
      },
      "revId": "05818403bd348e4f83d3331764798fea8986f941",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}