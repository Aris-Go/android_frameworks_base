{
  "comments": [
    {
      "key": {
        "uuid": "b24839a5_21d287f7",
        "filename": "services/usb/java/com/android/server/usb/UsbDeviceManager.java",
        "patchSetId": 2
      },
      "lineNbr": 1921,
      "author": {
        "id": 1042384
      },
      "writtenOn": "2019-08-01T17:18:39Z",
      "side": 1,
      "message": "This is a asynchronous call. You have to wait for the callback to return (or timeout) before calling in 1935.\n\nThe functions are set to NONE at the hal implementation level before setting new one. (For reference, Return\u003cvoid\u003e UsbGadget::setCurrentUsbFunctions @ https://android.googlesource.com/device/google/wahoo/+/master/usb/UsbGadget.cpp)\n\nDo you have a similar HAL implementation ?",
      "range": {
        "startLine": 1921,
        "startChar": 33,
        "endLine": 1921,
        "endChar": 55
      },
      "revId": "a0f5c4c4f60b63a16febc22bb2b8fcade3a8645a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b999f1f_5bdacd6b",
        "filename": "services/usb/java/com/android/server/usb/UsbDeviceManager.java",
        "patchSetId": 2
      },
      "lineNbr": 1921,
      "author": {
        "id": 1410110
      },
      "writtenOn": "2019-08-01T17:49:54Z",
      "side": 1,
      "message": "Yes. This HAL implementation was used as template.\nI saw patches for your HAL with sleeps about 5000-100000us,\nbut with my patch there is no need in sleeps at all.\n\nThe behavior was tested this way:\nvery fast switching between the data transfer modes and it works\nright as expected.\nIn case of sleeps and fast switching behavior is unexpected when\nthe time between switching is less then sleep time.",
      "parentUuid": "b24839a5_21d287f7",
      "range": {
        "startLine": 1921,
        "startChar": 33,
        "endLine": 1921,
        "endChar": 55
      },
      "revId": "a0f5c4c4f60b63a16febc22bb2b8fcade3a8645a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4c6ebda_c620527b",
        "filename": "services/usb/java/com/android/server/usb/UsbDeviceManager.java",
        "patchSetId": 2
      },
      "lineNbr": 1921,
      "author": {
        "id": 1042384
      },
      "writtenOn": "2019-08-01T18:22:21Z",
      "side": 1,
      "message": "\u003e\u003e I saw patches for your HAL with sleeps about 5000-100000us,\n\u003e\u003e but with my patch there is no need in sleeps at all.\nThe delay is for port partner\u0027s dwc controller to recognize that pull up was removed.\nsetCurrentUsbFunctions goes through HIDL binder IPC and this would probably introduce a delay and maybe that\u0027s why you no-longer see the issue.\n\nGiven that setCurrentUsbFunctions is asynchronous, adbd might still be started or stopped before the gadget is teared down.\n\nadbd writes into the functionfs ep0 and hal monitors for the ep1/ep2 to show up before pulling up the gadget by writing into the UDC configfs node. Given this, what exact race do you see at the hal implementation level ?",
      "parentUuid": "4b999f1f_5bdacd6b",
      "range": {
        "startLine": 1921,
        "startChar": 33,
        "endLine": 1921,
        "endChar": 55
      },
      "revId": "a0f5c4c4f60b63a16febc22bb2b8fcade3a8645a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1f81460_a2ddcc3d",
        "filename": "services/usb/java/com/android/server/usb/UsbDeviceManager.java",
        "patchSetId": 2
      },
      "lineNbr": 1921,
      "author": {
        "id": 1410110
      },
      "writtenOn": "2019-08-06T09:53:55Z",
      "side": 1,
      "message": "Thank you for attention to asynchronous function setCurrentUsbFunctions, I resolved this\nby new patch set.\n\nAbout adbd problem: as I mentioned before, when the switching between data transfer modes is\nhappening, ep1 and ep2 are removed from /dev/ffs*/adb/ for a little time interval. But these endpoints are in the EndpointList variable in Usb Gadget HAL. So for orderly work we need to\nmake variables \"fresh\" like in the case of property:sys.usb.configfs\u003d1.\nFor example, in UsbDeviceManager when property:sys.usb.configfs\u003d1 there is firstly setting all\nto \"none\" and then applying new configuration.",
      "parentUuid": "e4c6ebda_c620527b",
      "range": {
        "startLine": 1921,
        "startChar": 33,
        "endLine": 1921,
        "endChar": 55
      },
      "revId": "a0f5c4c4f60b63a16febc22bb2b8fcade3a8645a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7dfa3079_ebd465ba",
        "filename": "services/usb/java/com/android/server/usb/UsbDeviceManager.java",
        "patchSetId": 2
      },
      "lineNbr": 1921,
      "author": {
        "id": 1042384
      },
      "writtenOn": "2019-08-07T21:45:25Z",
      "side": 1,
      "message": "mEndpointList is static list that maintains the list of endpoints for a specific ffs function. In this instance adb. usb hal uses this list to see if the userspace gadget functions(or ffs functions) have written their descriptors before pulling up the gadget. So the endpoints are never meant to be removed from the list.\n\n  bool descriptorWritten \u003d true;\n  for (int i \u003d 0; i \u003c static_cast\u003cint\u003e(usbGadget-\u003emEndpointList.size()); i++) {\n    if (access(usbGadget-\u003emEndpointList.at(i).c_str(), R_OK)) {\n      descriptorWritten \u003d false;\n      break;\n    }\n  }\n\nnot sure how much of your implementation is same as https://android.googlesource.com/device/google/wahoo/+/master/usb/UsbGadget.cpp. If its the same, Can you share the logs and the code file ?",
      "parentUuid": "b1f81460_a2ddcc3d",
      "range": {
        "startLine": 1921,
        "startChar": 33,
        "endLine": 1921,
        "endChar": 55
      },
      "revId": "a0f5c4c4f60b63a16febc22bb2b8fcade3a8645a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}