{
  "comments": [
    {
      "key": {
        "uuid": "18c0229d_d4a0cce1",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1288034
      },
      "writtenOn": "2020-03-31T07:35:15Z",
      "side": 0,
      "message": "In general I think this test could be more useful by testing that security exceptions are thrown when the caller does not have the required permissions. Right now it only tests code paths that are pretty plain.\nAlso maybe testing it together with TetheringManager would be more useful ?",
      "revId": "77481306a7ddbf217ffc61930bb190a27eb68760",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f699c6a_7a3d4ed6",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2020-03-31T13:45:47Z",
      "side": 0,
      "message": "Yes, this test could also extend to be integration test. The purpose in this CL is to crease the code coverage. Will have follow up CL use it in integration test to test with TetheringManager. I already have idea how to test it :)",
      "parentUuid": "18c0229d_d4a0cce1",
      "revId": "77481306a7ddbf217ffc61930bb190a27eb68760",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad373d13_08cede87",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1288034
      },
      "writtenOn": "2020-04-01T10:36:00Z",
      "side": 0,
      "message": "In general I\u0027d prefer to avoid writing tests if the primary objective is to increase code coverage: because it makes the test green in the dashboard, we\u0027ll have less motivation to change the test to make it more useful in the future.\nI\u0027d prefer to delay this CL before we have the more useful tests then, so we can don\u0027t lose track of the need for the more important ones.",
      "parentUuid": "2f699c6a_7a3d4ed6",
      "revId": "77481306a7ddbf217ffc61930bb190a27eb68760",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "650f866a_d862422d",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2020-04-06T04:04:52Z",
      "side": 0,
      "message": "No, the code coverage I mean is not for dashboard. I want to have unitests cover all of tethering class files. This CL aim for TetheringService class. Before this CL, TetheringService do not have unitest. I think we need simply unit test for TetheringService even the code path is pretty plain. In TetheringServiceTest(unit test of this CL), we focus on TetheringService so the tethering object is mock. Will also test for TetheringManager \u003c-\u003e TetheirngService interaction. In this test, \"Tethering\" would be \"new\" and override the TetheringDependencies. Then we can test client(TetheringManager) and server(Tethering service) interaction. I plan to use this to test some APIs which is hard to test by CTS. BTW, the test about caller does not have the required permissions can be tested by CTS.",
      "parentUuid": "ad373d13_08cede87",
      "revId": "77481306a7ddbf217ffc61930bb190a27eb68760",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}