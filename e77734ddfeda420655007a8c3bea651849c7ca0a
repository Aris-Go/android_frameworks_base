{
  "comments": [
    {
      "key": {
        "uuid": "3209d7f9_fb882193",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/MockTetheringService.java",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1288034
      },
      "writtenOn": "2020-03-31T07:31:33Z",
      "side": 1,
      "message": "Statics are ugly ðŸ˜Š\nCould you instead have a default constructor that does:\nmTethering \u003d mock(Tethering.class);\n\nand return that in makeTethering ? Then you could override onBind to return:\n@Override\npublic IBinder onBind() {\n    return new MockTetheringConnector(super.onBind());\n}\n\npublic class MockTetheringConnector extends Binder {\n    MockTetheringConnector(IBinder base) {...}\n\n    public ITetheringConnector getTetheringConnector() {\n        return ITetheringConnector.Stub.asInterface(mBase);\n    }\n\n    public MockTetheringService getService() {\n        return MockTetheringService.this;\n    }\n}\n\nThat would follow the pattern in: https://developer.android.com/reference/android/support/test/rule/ServiceTestRule\n\n(with LocalBinder being the MockTetheringConnector)",
      "range": {
        "startLine": 21,
        "startChar": 4,
        "endLine": 24,
        "endChar": 0
      },
      "revId": "e77734ddfeda420655007a8c3bea651849c7ca0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc42c377_59ce4daa",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/MockTetheringService.java",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2020-03-31T13:45:47Z",
      "side": 1,
      "message": "Done, thanks suggestion.",
      "parentUuid": "3209d7f9_fb882193",
      "range": {
        "startLine": 21,
        "startChar": 4,
        "endLine": 24,
        "endChar": 0
      },
      "revId": "e77734ddfeda420655007a8c3bea651849c7ca0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25639134_7038071e",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1288034
      },
      "writtenOn": "2020-03-31T07:31:33Z",
      "side": 1,
      "message": "You should have a try at Kotlin for tests ðŸ˜Š\nToo late for this change though",
      "revId": "e77734ddfeda420655007a8c3bea651849c7ca0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7580bfc0_610886e8",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2020-03-31T13:45:47Z",
      "side": 1,
      "message": "Haha, yes. Thanks remind.",
      "parentUuid": "25639134_7038071e",
      "revId": "e77734ddfeda420655007a8c3bea651849c7ca0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28307265_d55d3897",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1288034
      },
      "writtenOn": "2020-03-31T07:31:33Z",
      "side": 1,
      "message": "Because this is in-process, I think you\u0027ll be able to cast this to whatever type you return in onBind() in the mock service",
      "range": {
        "startLine": 82,
        "startChar": 25,
        "endLine": 82,
        "endChar": 74
      },
      "revId": "e77734ddfeda420655007a8c3bea651849c7ca0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ddb0f56_869a43ee",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2020-03-31T13:45:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "28307265_d55d3897",
      "range": {
        "startLine": 82,
        "startChar": 25,
        "endLine": 82,
        "endChar": 74
      },
      "revId": "e77734ddfeda420655007a8c3bea651849c7ca0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9267bd7d_60433ef0",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1288034
      },
      "writtenOn": "2020-03-31T07:31:33Z",
      "side": 1,
      "message": "If this is really necessary, can you add a comment why ?",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 84,
        "endChar": 26
      },
      "revId": "e77734ddfeda420655007a8c3bea651849c7ca0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da45733f_1de02857",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2020-03-31T13:45:47Z",
      "side": 1,
      "message": "Removed",
      "parentUuid": "9267bd7d_60433ef0",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 84,
        "endChar": 26
      },
      "revId": "e77734ddfeda420655007a8c3bea651849c7ca0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ba00761_354c3b4f",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1288034
      },
      "writtenOn": "2020-03-31T07:31:33Z",
      "side": 1,
      "message": "tearDown",
      "range": {
        "startLine": 89,
        "startChar": 16,
        "endLine": 89,
        "endChar": 24
      },
      "revId": "e77734ddfeda420655007a8c3bea651849c7ca0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf18b570_3815eca0",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2020-03-31T13:45:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ba00761_354c3b4f",
      "range": {
        "startLine": 89,
        "startChar": 16,
        "endLine": 89,
        "endChar": 24
      },
      "revId": "e77734ddfeda420655007a8c3bea651849c7ca0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bc23bd9_e4afbecc",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1288034
      },
      "writtenOn": "2020-03-31T07:31:33Z",
      "side": 1,
      "message": "Not necessary since it\u0027s recreated in setUp / initMocks ?",
      "range": {
        "startLine": 91,
        "startChar": 8,
        "endLine": 91,
        "endChar": 26
      },
      "revId": "e77734ddfeda420655007a8c3bea651849c7ca0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3959e17_cfeb433d",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2020-03-31T13:45:47Z",
      "side": 1,
      "message": "Removed",
      "parentUuid": "2bc23bd9_e4afbecc",
      "range": {
        "startLine": 91,
        "startChar": 8,
        "endLine": 91,
        "endChar": 26
      },
      "revId": "e77734ddfeda420655007a8c3bea651849c7ca0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "669025fe_87bb3c7f",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1288034
      },
      "writtenOn": "2020-03-31T07:31:33Z",
      "side": 1,
      "message": "Nit: times(1) is the default and can be omitted (https://javadoc.io/static/org.mockito/mockito-core/3.3.3/org/mockito/Mockito.html#exact_verification)",
      "range": {
        "startLine": 100,
        "startChar": 25,
        "endLine": 100,
        "endChar": 35
      },
      "revId": "e77734ddfeda420655007a8c3bea651849c7ca0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30e93b0f_e3b55209",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2020-03-31T13:45:47Z",
      "side": 1,
      "message": "Ohh, thanks for sharing.",
      "parentUuid": "669025fe_87bb3c7f",
      "range": {
        "startLine": 100,
        "startChar": 25,
        "endLine": 100,
        "endChar": 35
      },
      "revId": "e77734ddfeda420655007a8c3bea651849c7ca0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26b5d592_5ac41330",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1288034
      },
      "writtenOn": "2020-03-31T07:31:33Z",
      "side": 1,
      "message": "Why not check what the result was ?",
      "range": {
        "startLine": 102,
        "startChar": 15,
        "endLine": 102,
        "endChar": 30
      },
      "revId": "e77734ddfeda420655007a8c3bea651849c7ca0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71ef4be9_63228485",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2020-03-31T13:45:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26b5d592_5ac41330",
      "range": {
        "startLine": 102,
        "startChar": 15,
        "endLine": 102,
        "endChar": 30
      },
      "revId": "e77734ddfeda420655007a8c3bea651849c7ca0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "456e1f89_910bde5b",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringTest.java",
        "patchSetId": 1
      },
      "lineNbr": 452,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2020-03-31T03:57:41Z",
      "side": 1,
      "message": "Review note: when I add MockTetheringService and define it in AndroidManifest. Some TetheringTest tests which use FakeSettingsProivder is broken as below, follow the suggestion fix from b/38433611 and ag/2304289\n\n\n\n[134/161] com.android.server.connectivity.tethering.TetheringTest#testDataSaverChanged: FAILED (268ms)\n\nSTACKTRACE:\njava.lang.IllegalStateException: Failed to lookup info for package null\n\tat android.os.Parcel.createException(Parcel.java:2084)\n\tat android.os.Parcel.readException(Parcel.java:2044)\n\tat android.database.DatabaseUtils.readExceptionFromParcel(DatabaseUtils.java:188)\n\tat android.database.DatabaseUtils.readExceptionFromParcel(DatabaseUtils.java:140)\n\tat android.content.ContentProviderProxy.call(ContentProviderNative.java:658)\n\tat android.provider.Settings$NameValueCache.getStringForUser(Settings.java:2405)\n\tat android.provider.Settings$Global.getStringForUser(Settings.java:14033)\n\tat android.provider.Settings$Global.getString(Settings.java:14021)\n\tat android.provider.Settings$Global.getInt(Settings.java:14203)\n\tat com.android.server.connectivity.tethering.OffloadController.isOffloadDisabled(OffloadController.java:487)\n\tat com.android.server.connectivity.tethering.OffloadController.start(OffloadController.java:144)\n\tat com.android.server.connectivity.tethering.Tethering$TetherMasterSM$OffloadWrapper.start(Tethering.java:1860)\n\tat com.android.server.connectivity.tethering.Tethering$TetherMasterSM$TetherModeAliveState.enter(Tethering.java:1653)\n\tat com.android.networkstack.tethering.util.StateMachine$SmHandler.invokeEnterMethods(StateMachine.java:1037)\n\tat com.android.networkstack.tethering.util.StateMachine$SmHandler.performTransitions(StateMachine.java:879)\n\tat com.android.networkstack.tethering.util.StateMachine$SmHandler.handleMessage(StateMachine.java:819)\n\tat android.os.Handler.dispatchMessage(Handler.java:106)\n\tat android.os.test.TestLooper.dispatchNext(TestLooper.java:184)\n\tat android.os.test.TestLooper.dispatchAll(TestLooper.java:195)\n\tat com.android.server.connectivity.tethering.TetheringTest.runUsbTethering(TetheringTest.java:746)\n\tat com.android.server.connectivity.tethering.TetheringTest.testDataSaverChanged(TetheringTest.java:1563)",
      "range": {
        "startLine": 444,
        "startChar": 0,
        "endLine": 452,
        "endChar": 5
      },
      "revId": "e77734ddfeda420655007a8c3bea651849c7ca0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7dc37543_36673ef0",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringTest.java",
        "patchSetId": 1
      },
      "lineNbr": 452,
      "author": {
        "id": 1288034
      },
      "writtenOn": "2020-03-31T07:31:33Z",
      "side": 1,
      "message": "Can you add a comment in the code referring to the FakeSettingsProvider.clearSettingsProvider() method that says that it needs to be called before and after use ?",
      "parentUuid": "456e1f89_910bde5b",
      "range": {
        "startLine": 444,
        "startChar": 0,
        "endLine": 452,
        "endChar": 5
      },
      "revId": "e77734ddfeda420655007a8c3bea651849c7ca0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5493fe84_2cf90afd",
        "filename": "packages/Tethering/tests/unit/src/com/android/server/connectivity/tethering/TetheringTest.java",
        "patchSetId": 1
      },
      "lineNbr": 452,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2020-04-01T08:08:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7dc37543_36673ef0",
      "range": {
        "startLine": 444,
        "startChar": 0,
        "endLine": 452,
        "endChar": 5
      },
      "revId": "e77734ddfeda420655007a8c3bea651849c7ca0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}