{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "531642a2_401c256c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1368080
      },
      "writtenOn": "2021-05-11T04:29:23Z",
      "side": 1,
      "message": "Patch#19\nRebase becauseAPI: buildCarrierTemplate change which add metered check support.\n",
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51848039_85a0fa6e",
        "filename": "services/core/java/com/android/server/net/NetworkPolicyManagerService.java",
        "patchSetId": 19
      },
      "lineNbr": 2437,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2021-05-11T06:59:50Z",
      "side": 1,
      "message": "If templateType is MATCH_CARRIER, then this template will have METERED_ALL. But no other carrier templates have METERED_ALL: they can only have METERED_NO and METERED_YES.\n\nThe rest of this CL replaces:\n    buildTemplateMobileAll(subscriberId)\n\nwith:\n    buildTemplateCarrier(subscriberId, true /* metered */)\n\n. So it sounds like there is an assumption that carrier templates will always be metered. Should this be METERED_YES, then?",
      "range": {
        "startLine": 2437,
        "startChar": 56,
        "endLine": 2437,
        "endChar": 67
      },
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f1b21e1_17cf6b86",
        "filename": "services/core/java/com/android/server/net/NetworkPolicyManagerService.java",
        "patchSetId": 19
      },
      "lineNbr": 2437,
      "author": {
        "id": 1368080
      },
      "writtenOn": "2021-05-11T12:07:35Z",
      "side": 1,
      "message": "Added meteredness of the template save. See others thread.",
      "parentUuid": "51848039_85a0fa6e",
      "range": {
        "startLine": 2437,
        "startChar": 56,
        "endLine": 2437,
        "endChar": 67
      },
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82e1a7f3_2dbc5783",
        "filename": "services/core/java/com/android/server/net/NetworkPolicyManagerService.java",
        "patchSetId": 19
      },
      "lineNbr": 2639,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2021-05-11T06:59:50Z",
      "side": 1,
      "message": "After aosp/1699687, MATCH_CARRIER templates can have METERED_NO and METERED_YES. But there is no way to save this information in the XML file, because there is no XML attribute for metered.\n\nNot sure what to do about this. It looks like the options would be:\n\n1. Add an XML attribute for the meteredness of the template, and write that attribute here (at least for MATCH_CARRIER policies).\n2. Only save templates that match metered networks and make isPersistable() return false for policies with METERED_NO.\n3. Somehow rely on the metered attribute in the *policy* (not on the template), which already exists?\n\n#2 seems simple but it could be surprising if someone later tries to save such a policy and the code does not save it. I don\u0027t know how we would do #3 or if it even makes sense. The metered boolean in the policy was deprecated by ag/2542217, which moved NetworkPolicy towards subscription plans, so maybe it doesn\u0027t make sense any more...?\n\nJunyu, any thoughts? Do you know if the metered bit in the policy is persisted to disk these days?",
      "range": {
        "startLine": 2639,
        "startChar": 16,
        "endLine": 2639,
        "endChar": 56
      },
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a20b217_3c391445",
        "filename": "services/core/java/com/android/server/net/NetworkPolicyManagerService.java",
        "patchSetId": 19
      },
      "lineNbr": 2639,
      "author": {
        "id": 1368080
      },
      "writtenOn": "2021-05-11T12:07:35Z",
      "side": 1,
      "message": "Thanks for catching this.\n\nI suggest to take option#1. Option#2 and #3 seems more risk in the future.\nReason:\nThe different meteredness of the NetworkTemplate will cause different NetworkPolicy . I think option#2 and option#3 may more risky. As we know, the checking metered logic was implemented in matches function (for instance, matchesMobile). That is why NetworkPolicyService doesn\u0027t need to save it.\nBut I think NetworkTemplate was planned to use matchesMetered to replace doing metered check in matchesRule function. It seems to me it is necessary to store metered, otherwise it may cause confusion in the future.",
      "parentUuid": "82e1a7f3_2dbc5783",
      "range": {
        "startLine": 2639,
        "startChar": 16,
        "endLine": 2639,
        "endChar": 56
      },
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d586595_aac54f0e",
        "filename": "services/core/java/com/android/server/net/NetworkPolicyManagerService.java",
        "patchSetId": 19
      },
      "lineNbr": 2639,
      "author": {
        "id": 1306837
      },
      "writtenOn": "2021-05-12T08:44:24Z",
      "side": 1,
      "message": "I knew the meteredness is stored inside the policy instead of template.\nBut didn\u0027t know it is deprecated.\n\nIf so, it seems to me we can still use the bit in policy until it is fully deprecated, since it has convert function between subscriptionPlan.\n\nIIUC currently we have the logic inside matchesMobile to force all mobile template to match metered network. Which I think is a pretty bad design that block us from providing the functionality of query non-metered data usage (b/183776809) and we would like to address it soon.\n\nSo personally I\u0027ll vote for #3 if it is feasible.",
      "parentUuid": "0a20b217_3c391445",
      "range": {
        "startLine": 2639,
        "startChar": 16,
        "endLine": 2639,
        "endChar": 56
      },
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "592c4a65_3f8df6e9",
        "filename": "services/core/java/com/android/server/net/NetworkPolicyManagerService.java",
        "patchSetId": 19
      },
      "lineNbr": 2639,
      "author": {
        "id": 1368080
      },
      "writtenOn": "2021-05-12T09:12:07Z",
      "side": 1,
      "message": "IIUC, taking #3 means that we need to add a mapping between policy meteredness and template meteredness. But previous the template is using METERED_ALL for all of the template, it means that we need to map\nRead from old policy: (before S)\nfalse -\u003e METERED_ALL\ntrue -\u003e METERED_YES\n\nBut Is it a problem to save a new policy when caller add policy with METERED_ALL v.s  METERED_NO? It seems to me it will get confusion in the future.",
      "parentUuid": "5d586595_aac54f0e",
      "range": {
        "startLine": 2639,
        "startChar": 16,
        "endLine": 2639,
        "endChar": 56
      },
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12871d3d_3a0803bf",
        "filename": "services/core/java/com/android/server/net/NetworkPolicyManagerService.java",
        "patchSetId": 19
      },
      "lineNbr": 2639,
      "author": {
        "id": 1368080
      },
      "writtenOn": "2021-05-14T09:48:47Z",
      "side": 1,
      "message": "Update the conclusion after discussing with Junyu.\n\nWe agree to take option#1 which means thatNetworkPolicyManagementService need to store meteredness of NetworkTemplate when storing NetworkPolicy to disk.\n\nReason:\n1. If we plan to take option#3, it needs to design a mapping when metered in NetworkPolicy \u003d false.\ni.e (metered false in Networkpolicy to map METERED_ALL or METERED_NO in NetworkTemplate).\nWe discussed we can assume the previous possible policies should be METERED_ALL because the METERED_NO never store back to disk. But it means that we need to get a strange mapping,i.e. metered false in Networkpolicy to map METERED_ALL in NetworkTemplate.\n\nBut if we plan to get map as \"metered false in Networkpolicy to map METERED_NO in NetworkTemplate.\", it will break the old policy user. (It is not aosp scenario but it may happen)\n\nTo make sure backward compatible for all policies, it is more safer to store correct value in NetworkTemplate than using a strange mapping for metered in NetworkPolicy since the meteredness doesn\u0027t get the exactly mapping between NetworkPolicy and NetworkTemplate now.\n\ni.e Take option#3 is no risk for this change and it doesn\u0027t break anything in this CL#.\n\n2. Even if we consider to get correct mapping for meteredness between NetworkPolicy and NetworkTemplate. It seems that we should take meteredness to store in NetworkTemplate because it used in both function. (data usage and network policy)\n\nPS:The meteredness of NetworkTemplate was added in 2018 and it used for usage and policy function. But metered in NetworkPolicy was add in 2011 and now it was claimed @Deprecate. It seems that the right way should take the new design and drop the old design now.\n\nSee the last patch which is implementing with option#3.",
      "parentUuid": "592c4a65_3f8df6e9",
      "range": {
        "startLine": 2639,
        "startChar": 16,
        "endLine": 2639,
        "endChar": 56
      },
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7bee529_f6ec1814",
        "filename": "services/core/java/com/android/server/net/NetworkPolicyManagerService.java",
        "patchSetId": 19
      },
      "lineNbr": 2639,
      "author": {
        "id": 1306837
      },
      "writtenOn": "2021-05-18T12:20:58Z",
      "side": 1,
      "message": "IIUC the latest patch is option#1?",
      "parentUuid": "12871d3d_3a0803bf",
      "range": {
        "startLine": 2639,
        "startChar": 16,
        "endLine": 2639,
        "endChar": 56
      },
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70178ed5_b07fa77d",
        "filename": "services/core/java/com/android/server/net/NetworkPolicyManagerService.java",
        "patchSetId": 19
      },
      "lineNbr": 2639,
      "author": {
        "id": 1368080
      },
      "writtenOn": "2021-05-20T08:58:17Z",
      "side": 1,
      "message": "Yes, sorry for the typo, the last patch is option#1",
      "parentUuid": "d7bee529_f6ec1814",
      "range": {
        "startLine": 2639,
        "startChar": 16,
        "endLine": 2639,
        "endChar": 56
      },
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5f8480a_432a262d",
        "filename": "services/core/java/com/android/server/net/NetworkPolicyManagerService.java",
        "patchSetId": 19
      },
      "lineNbr": 5567,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2021-05-11T06:59:50Z",
      "side": 1,
      "message": "Can this happen? When policies are read from disk, MATCH_MOBILE is converted to MATCH_CARRIER. So perhaps it can\u0027t happen? If it can\u0027t happen, then remove it?",
      "range": {
        "startLine": 5567,
        "startChar": 59,
        "endLine": 5567,
        "endChar": 97
      },
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "029852c0_25d468bf",
        "filename": "services/core/java/com/android/server/net/NetworkPolicyManagerService.java",
        "patchSetId": 19
      },
      "lineNbr": 5567,
      "author": {
        "id": 1368080
      },
      "writtenOn": "2021-05-11T12:07:35Z",
      "side": 1,
      "message": "But it still allows to add mobile policy from API.\nIdeally the factory reset should make sure the policy off.\nBut I am ok to remove if we don\u0027t take care this scenario.",
      "parentUuid": "b5f8480a_432a262d",
      "range": {
        "startLine": 5567,
        "startChar": 59,
        "endLine": 5567,
        "endChar": 97
      },
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed5730d1_9ac1084d",
        "filename": "services/tests/servicestests/src/com/android/server/net/NetworkPolicyManagerServiceTest.java",
        "patchSetId": 19
      },
      "lineNbr": 232,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2021-05-11T06:59:50Z",
      "side": 1,
      "message": "Why the word \"Wildcard\" here? There is no longer a buildTemplateCarrierWildcard. Should this just be \"sTemplateCarrier?",
      "range": {
        "startLine": 232,
        "startChar": 51,
        "endLine": 232,
        "endChar": 59
      },
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7744f8b0_de0591b6",
        "filename": "services/tests/servicestests/src/com/android/server/net/NetworkPolicyManagerServiceTest.java",
        "patchSetId": 19
      },
      "lineNbr": 232,
      "author": {
        "id": 1368080
      },
      "writtenOn": "2021-05-11T12:07:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed5730d1_9ac1084d",
      "range": {
        "startLine": 232,
        "startChar": 51,
        "endLine": 232,
        "endChar": 59
      },
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c72e33e_b512776b",
        "filename": "services/tests/servicestests/src/com/android/server/net/NetworkPolicyManagerServiceTest.java",
        "patchSetId": 19
      },
      "lineNbr": 1978,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2021-05-11T06:59:50Z",
      "side": 1,
      "message": "This name is confusing because it suggests that the policy has carrier usage, but that the carrier usage is unsupported. I think this is a pretty normal policy though - it\u0027s just a standard policy with MATCH_MOBILE. Maybe call this \"network-policy-mobile.xml\" or something?",
      "range": {
        "startLine": 1978,
        "startChar": 34,
        "endLine": 1978,
        "endChar": 66
      },
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c8a5d1d_c37698a7",
        "filename": "services/tests/servicestests/src/com/android/server/net/NetworkPolicyManagerServiceTest.java",
        "patchSetId": 19
      },
      "lineNbr": 1978,
      "author": {
        "id": 1368080
      },
      "writtenOn": "2021-05-11T12:07:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c72e33e_b512776b",
      "range": {
        "startLine": 1978,
        "startChar": 34,
        "endLine": 1978,
        "endChar": 66
      },
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b30f2a6_e280956e",
        "filename": "services/tests/servicestests/src/com/android/server/net/NetworkPolicyManagerServiceTest.java",
        "patchSetId": 19
      },
      "lineNbr": 1987,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2021-05-11T06:59:50Z",
      "side": 1,
      "message": "Can you also assert that this template has MATCH_CARRIER, even though the XML file specifies networkTemplate\u003d\"1\" which is MATCH_MOBILE?",
      "range": {
        "startLine": 1987,
        "startChar": 4,
        "endLine": 1987,
        "endChar": 5
      },
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d63a2c7_826be6d9",
        "filename": "services/tests/servicestests/src/com/android/server/net/NetworkPolicyManagerServiceTest.java",
        "patchSetId": 19
      },
      "lineNbr": 1987,
      "author": {
        "id": 1368080
      },
      "writtenOn": "2021-05-11T12:07:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b30f2a6_e280956e",
      "range": {
        "startLine": 1987,
        "startChar": 4,
        "endLine": 1987,
        "endChar": 5
      },
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7559d96e_f0c68c14",
        "filename": "services/tests/servicestests/src/com/android/server/net/NetworkPolicyManagerServiceTest.java",
        "patchSetId": 19
      },
      "lineNbr": 1999,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2021-05-11T06:59:50Z",
      "side": 1,
      "message": "Maybe also assert that the policy\u0027s match rule is MATCH_WIFI?",
      "range": {
        "startLine": 1999,
        "startChar": 4,
        "endLine": 1999,
        "endChar": 5
      },
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7632a35_56ceca76",
        "filename": "services/tests/servicestests/src/com/android/server/net/NetworkPolicyManagerServiceTest.java",
        "patchSetId": 19
      },
      "lineNbr": 1999,
      "author": {
        "id": 1368080
      },
      "writtenOn": "2021-05-11T12:07:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7559d96e_f0c68c14",
      "range": {
        "startLine": 1999,
        "startChar": 4,
        "endLine": 1999,
        "endChar": 5
      },
      "revId": "fd35cd9da19eab798d896900faba4069d4724058",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}