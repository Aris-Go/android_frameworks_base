{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a9af2f19_96cd7926",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1133744
      },
      "writtenOn": "2021-11-12T12:01:47Z",
      "side": 1,
      "message": "Nit (useful for future reference): Maybe mention that this is specially important for serializable since in case of null it uses the class loader from the call stack (somehow, right?), as opposed to the BCP in the parcelable case. And that\u0027s important because it creates differences in output depending on which process is performing the deserialization.",
      "range": {
        "startLine": 14,
        "startChar": 34,
        "endLine": 15,
        "endChar": 13
      },
      "revId": "00875573db7c2aa99b4c923f48bf097ff57f18c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "175e31d6_56ab65be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1871820
      },
      "writtenOn": "2021-11-16T20:54:17Z",
      "side": 1,
      "message": "Friendly ping.",
      "revId": "00875573db7c2aa99b4c923f48bf097ff57f18c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e6fa604_7d148d44",
        "filename": "core/api/current.txt",
        "patchSetId": 1
      },
      "lineNbr": 31485,
      "author": {
        "id": 1013508
      },
      "writtenOn": "2021-11-17T16:28:02Z",
      "side": 1,
      "message": "Hmm, while I appreciate the desire to try requiring a ClassLoader for this case, there\u0027s still quite a few cases where writeValue()/readValue() end up offering to work with Parcelable values that have an implicit ClassLoader.  ðŸ˜ž\n\nAs an example, writeList()/readList() end up offering to send Serializable instances without requiring a ClassLoader be defined.",
      "range": {
        "startLine": 31485,
        "startChar": 0,
        "endLine": 31485,
        "endChar": 121
      },
      "revId": "00875573db7c2aa99b4c923f48bf097ff57f18c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cc25cfd_b68a673b",
        "filename": "core/api/current.txt",
        "patchSetId": 1
      },
      "lineNbr": 31485,
      "author": {
        "id": 1871820
      },
      "writtenOn": "2021-11-17T16:48:59Z",
      "side": 1,
      "message": "Hey Jeff, readValue ends up calling readSerializableInternal(loader, clazz) which does support Nullable loader, we are trying to make the public API to require the loader; this API is not chained with other readXXX APIs.\n\nI have to do this one differently, as the default classLoader for readSerializable is different that readParcelable containers. If I change that classLoader in readSerializableInternal, it would break some existing use cases such as https://source.corp.google.com/android/packages/apps/Car/libs/car-telephony-common/src/com/android/car/telephony/common/I18nPhoneNumberWrapper.java;l\u003d118\n\nHere I am hoping we can have this new API (redacting the old one with no params), and requiring the desired classLoader from the caller.",
      "parentUuid": "5e6fa604_7d148d44",
      "range": {
        "startLine": 31485,
        "startChar": 0,
        "endLine": 31485,
        "endChar": 121
      },
      "revId": "00875573db7c2aa99b4c923f48bf097ff57f18c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdd90d3b_90e78a08",
        "filename": "core/api/current.txt",
        "patchSetId": 1
      },
      "lineNbr": 31485,
      "author": {
        "id": 1013508
      },
      "writtenOn": "2021-11-18T15:44:54Z",
      "side": 1,
      "message": "My point here is that the other APIs like readMap(), readList(), etc are technically still \"allowing\" Serializable values that rely on the default ClassLoader; it feels quite inconsistent to have the explicit-ClassLoader-for-Serializable-values only partially enforced across the Parcel API surface.\n\nThus my recommendation is either to have it required for all places that Serializable can be read, or to not have it required.",
      "parentUuid": "3cc25cfd_b68a673b",
      "range": {
        "startLine": 31485,
        "startChar": 0,
        "endLine": 31485,
        "endChar": 121
      },
      "revId": "00875573db7c2aa99b4c923f48bf097ff57f18c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}