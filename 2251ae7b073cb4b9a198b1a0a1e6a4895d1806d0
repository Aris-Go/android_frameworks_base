{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "da8d179f_114c31fd",
        "filename": "keystore/java/android/security/Authorization.java",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1858130
      },
      "writtenOn": "2024-01-12T19:08:05Z",
      "side": 1,
      "message": "Is there a way to flag guard this change as well? If someone else for some reason starts calling that API they would be getting the new logic as well. Also, if we abandoned the flag 5 years from now w/o launching, someone else might not realize this code change was part of that flag-guarded change.",
      "revId": "2251ae7b073cb4b9a198b1a0a1e6a4895d1806d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1357e35c_7ecf92af",
        "filename": "keystore/java/android/security/Authorization.java",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-01-12T20:53:02Z",
      "side": 1,
      "message": "It\u0027s unnecessary, but I\u0027ll add a flag check on the Keystore side too, i.e. make Keystore force `weakUnlockEnabled` to false if the flag is disabled.",
      "parentUuid": "da8d179f_114c31fd",
      "revId": "2251ae7b073cb4b9a198b1a0a1e6a4895d1806d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "951ef374_92073850",
        "filename": "services/core/java/com/android/server/trust/TrustManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 902,
      "author": {
        "id": 1858130
      },
      "writtenOn": "2024-01-12T19:08:05Z",
      "side": 1,
      "message": "A little unclear on the naming here. Maybe call it something longer? Does it mean authorizingUserId? i.e. the user authorizing the keystore unlock?",
      "range": {
        "startLine": 902,
        "startChar": 16,
        "endLine": 902,
        "endChar": 26
      },
      "revId": "2251ae7b073cb4b9a198b1a0a1e6a4895d1806d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb9e9c4f_0f72ef2b",
        "filename": "services/core/java/com/android/server/trust/TrustManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 902,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-01-12T20:53:02Z",
      "side": 1,
      "message": "I rearranged things so that the comment explaining the reason for using the profile\u0027s parent is now above the declaration of `authUserId`.  So that should make it clearer.  As for the name, this is just a local variable with a scope of ~5 lines, and it\u0027s necessary to read the comment to really understand what it is anyway, so a short name seems appropriate.",
      "parentUuid": "951ef374_92073850",
      "range": {
        "startLine": 902,
        "startChar": 16,
        "endLine": 902,
        "endChar": 26
      },
      "revId": "2251ae7b073cb4b9a198b1a0a1e6a4895d1806d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a78af0b9_8a1f624c",
        "filename": "services/core/java/com/android/server/trust/TrustManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 903,
      "author": {
        "id": 1858130
      },
      "writtenOn": "2024-01-12T19:08:05Z",
      "side": 1,
      "message": "I recommend not interleaving the flag check this way. It\u0027s more clear and less errorprone (and thus safer if we need to roll back flags in a CP) to guard the entire logic change by the flag. Then, when you are de-flagging, you are able to completely delete the old code path along with the if(flag) check.\n\nif(flag) {\n  new code\n} else {\n  old code with ideally invalid value passed for 3rd argument to Authorization (but I guess it has to be false in this case b/c it\u0027s a boolean)\n}",
      "revId": "2251ae7b073cb4b9a198b1a0a1e6a4895d1806d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f2c3ad4_bee6adfc",
        "filename": "services/core/java/com/android/server/trust/TrustManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 903,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-01-12T20:53:02Z",
      "side": 1,
      "message": "I\u0027ve consolidated this into one flag check as suggested.\n\nNote, the end state will still be the same after removing the flag.",
      "parentUuid": "a78af0b9_8a1f624c",
      "revId": "2251ae7b073cb4b9a198b1a0a1e6a4895d1806d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad489feb_4f58b311",
        "filename": "services/core/java/com/android/server/trust/TrustManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 1463,
      "author": {
        "id": 1858130
      },
      "writtenOn": "2024-01-12T19:08:05Z",
      "side": 1,
      "message": "may improve readability to match the authUserId (or renamed) variable name here so folks can tell this is not the calling user ID in some cases w/o having to look back through the call stack.",
      "range": {
        "startLine": 1463,
        "startChar": 50,
        "endLine": 1463,
        "endChar": 56
      },
      "revId": "2251ae7b073cb4b9a198b1a0a1e6a4895d1806d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd1a1c7a_741ec9f2",
        "filename": "services/core/java/com/android/server/trust/TrustManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 1463,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-01-12T20:53:02Z",
      "side": 1,
      "message": "In this method there is only one user ID, so I think the shorter variable name is clear enough.  Note that `getBiometricSids()` uses `userId` as well.  I also tweaked the method comment to clarify that it\u0027s checking for the user\u0027s own biometrics and trust agents.",
      "parentUuid": "ad489feb_4f58b311",
      "range": {
        "startLine": 1463,
        "startChar": 50,
        "endLine": 1463,
        "endChar": 56
      },
      "revId": "2251ae7b073cb4b9a198b1a0a1e6a4895d1806d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f54f3fc_b3891d57",
        "filename": "services/core/java/com/android/server/trust/TrustManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 1485,
      "author": {
        "id": 1858130
      },
      "writtenOn": "2024-01-12T19:08:05Z",
      "side": 1,
      "message": "The 3 logs added in this method feel more like debug logs to me.",
      "range": {
        "startLine": 1485,
        "startChar": 28,
        "endLine": 1485,
        "endChar": 30
      },
      "revId": "2251ae7b073cb4b9a198b1a0a1e6a4895d1806d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1c6607f_e48e51b1",
        "filename": "services/core/java/com/android/server/trust/TrustManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 1485,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-01-12T20:53:02Z",
      "side": 1,
      "message": "The protection of the UnlockedDeviceRequired keys at device lock time is an important security-related event, and Keystore has always logged two INFO messages when it happens.  This new message is in line with that, and it\u0027s only logged when the keys are being left unprotected which we\u0027d like to consider as an exceptional case, and it explains why it happened which isn\u0027t included in the Keystore log.  So I think these messages should be left in.",
      "parentUuid": "6f54f3fc_b3891d57",
      "range": {
        "startLine": 1485,
        "startChar": 28,
        "endLine": 1485,
        "endChar": 30
      },
      "revId": "2251ae7b073cb4b9a198b1a0a1e6a4895d1806d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75767bb1_247b9d62",
        "filename": "services/core/java/com/android/server/trust/TrustManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 1493,
      "author": {
        "id": 1858130
      },
      "writtenOn": "2024-01-12T19:08:05Z",
      "side": 1,
      "message": "this logic (and the fingerprint version) looks better placed inside DPM. Could we refactor to add a method in DPM that returns if the feature is disabled?\n\nHonestly, the whole API regarding how these features are disabled is pretty hard to use so maybe this is a bigger project. Do you see any quick wins?",
      "range": {
        "startLine": 1491,
        "startChar": 12,
        "endLine": 1493,
        "endChar": 93
      },
      "revId": "2251ae7b073cb4b9a198b1a0a1e6a4895d1806d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d53ca617_0106a966",
        "filename": "services/core/java/com/android/server/trust/TrustManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 1493,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-01-12T20:53:02Z",
      "side": 1,
      "message": "The `KEYGUARD_DISABLE_*` bitmask is the public API.  For now I think we should stick with retrieving the bitmask, like what users of the public API have to do, rather than adding a helper function to `DevicePolicyManager` that tests a single bit (or would it be a set of bits?).  Using the public API also saves a function call, since we retrieve both the fingerprint and face bits in a single call.",
      "parentUuid": "75767bb1_247b9d62",
      "range": {
        "startLine": 1491,
        "startChar": 12,
        "endLine": 1493,
        "endChar": 93
      },
      "revId": "2251ae7b073cb4b9a198b1a0a1e6a4895d1806d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4dc6a46_771aeb6e",
        "filename": "services/core/java/com/android/server/trust/TrustManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 1505,
      "author": {
        "id": 1858130
      },
      "writtenOn": "2024-01-12T19:08:05Z",
      "side": 1,
      "message": "Also trusted?",
      "range": {
        "startLine": 1505,
        "startChar": 46,
        "endLine": 1505,
        "endChar": 66
      },
      "revId": "2251ae7b073cb4b9a198b1a0a1e6a4895d1806d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30c30bc6_43fbf684",
        "filename": "services/core/java/com/android/server/trust/TrustManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 1505,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-01-12T20:53:02Z",
      "side": 1,
      "message": "TRUSTED implies the device is already unlocked; see the javadoc for it.  Also refer to the discussion with jacobhobbie@ at http://go/fix-unlocked-device-required-keys?disco\u003dAAAA4HeaMVs where we discussed this same thing and established that just checking TRUSTABLE is what\u0027s needed.  (Except for automotive, where trust agents can always actively unlock.)",
      "parentUuid": "c4dc6a46_771aeb6e",
      "range": {
        "startLine": 1505,
        "startChar": 46,
        "endLine": 1505,
        "endChar": 66
      },
      "revId": "2251ae7b073cb4b9a198b1a0a1e6a4895d1806d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3edce8f_3db80a9c",
        "filename": "services/core/java/com/android/server/trust/TrustManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 1505,
      "author": {
        "id": 1858130
      },
      "writtenOn": "2024-01-13T00:47:10Z",
      "side": 1,
      "message": "Ok I think the logic is correct because this method is only called when the branch checking if we are locking or unlocking shows the device is currently becoming locked...\n\nWe should document this limitation on the correctness in the method comment.",
      "parentUuid": "30c30bc6_43fbf684",
      "range": {
        "startLine": 1505,
        "startChar": 46,
        "endLine": 1505,
        "endChar": 66
      },
      "revId": "2251ae7b073cb4b9a198b1a0a1e6a4895d1806d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}