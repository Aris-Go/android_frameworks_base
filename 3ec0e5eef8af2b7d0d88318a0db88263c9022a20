{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f7dc03df_aaa10c0b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2022-09-30T17:52:58Z",
      "side": 1,
      "message": "This looks much better! Most of my comments are about the wording of comments, just a couple are about the data structure.",
      "revId": "3ec0e5eef8af2b7d0d88318a0db88263c9022a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8641db73_f96bd33c",
        "filename": "media/aidl/android/media/audio/common/AudioHalAttributesGroup.aidl",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2022-09-30T17:52:58Z",
      "side": 1,
      "message": "I would put the CAP condition first. Something like this:\n\nStreamType may only be set to AudioStreamType.INVALID when using the Configurable Audio Policy (CAP) engine. Such a group is used when the volume group and attributes are not associated to any AudioStreamType.",
      "range": {
        "startLine": 31,
        "startChar": 37,
        "endLine": 32,
        "endChar": 69
      },
      "revId": "3ec0e5eef8af2b7d0d88318a0db88263c9022a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74d73969_bf1516c8",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapCriterion.aidl",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2022-09-30T17:52:58Z",
      "side": 1,
      "message": "Please define a constant in the interface for this.",
      "range": {
        "startLine": 35,
        "startChar": 6,
        "endLine": 35,
        "endChar": 25
      },
      "revId": "3ec0e5eef8af2b7d0d88318a0db88263c9022a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28313071_717a877b",
        "filename": "media/aidl/android/media/audio/common/AudioHalEngineConfig.aidl",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2022-09-30T17:52:58Z",
      "side": 1,
      "message": "I would say simply:\n\nClients normally use the default audio policy engine. The client will use the Configurable Policy Engine only when this field has a non-null value. The choice of the engine is only done once, it happens during the client initialization.\n\nNo need to talk about specific implementations.",
      "range": {
        "startLine": 52,
        "startChar": 34,
        "endLine": 55,
        "endChar": 21
      },
      "revId": "3ec0e5eef8af2b7d0d88318a0db88263c9022a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9b74a0d_6128b5b3",
        "filename": "media/aidl/android/media/audio/common/AudioHalProductStrategy.aidl",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2022-09-30T17:52:58Z",
      "side": 1,
      "message": "Please make an interface constant for this.",
      "range": {
        "startLine": 33,
        "startChar": 36,
        "endLine": 33,
        "endChar": 40
      },
      "revId": "3ec0e5eef8af2b7d0d88318a0db88263c9022a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f144aee_bf74b856",
        "filename": "media/aidl/android/media/audio/common/AudioHalVolumeCurve.aidl",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2022-09-30T17:52:58Z",
      "side": 1,
      "message": "Thanks for creating an enum! Now I\u0027m looking into it an wondering whether we should just use constants from AudioDeviceType instead?\n\nOUT_HEADSET\nOUT_SPEAKER\nOUT_SPEAKER_EARPIECE\nOUT_DEVICE (\"device\" is any external output)\nOUT_HEARING_AID\n\nWe can either use them directly, or defined the category enums via AudioDeviceTypes, e.g.:\n\nHEADSET \u003d AudioDeviceType.OUT_HEADSET...\n\nThis is to reduce the number of similar definitions.",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 35,
        "endChar": 59
      },
      "revId": "3ec0e5eef8af2b7d0d88318a0db88263c9022a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e408a65a_250a1a0d",
        "filename": "media/aidl/android/media/audio/common/AudioProductStrategyType.aidl",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2022-09-30T17:52:58Z",
      "side": 1,
      "message": "Why we say \"framework strategies\" while the type is called \"ProductStrategy\"?\n\nAlso, is there any connection of the product strategy with audio attributes or stream types?",
      "range": {
        "startLine": 20,
        "startChar": 15,
        "endLine": 20,
        "endChar": 36
      },
      "revId": "3ec0e5eef8af2b7d0d88318a0db88263c9022a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25b86cee_738671ee",
        "filename": "media/aidl/android/media/audio/common/AudioProductStrategyType.aidl",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2022-09-30T17:52:58Z",
      "side": 1,
      "message": "SYS_RESERVED_NONE\n\nAnd the usual blurb I put for such values is:\n\nValue reserved for system use only. HALs must never return this value to\nthe system or accept it from the system.",
      "range": {
        "startLine": 30,
        "startChar": 4,
        "endLine": 30,
        "endChar": 8
      },
      "revId": "3ec0e5eef8af2b7d0d88318a0db88263c9022a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}