{
  "comments": [
    {
      "key": {
        "uuid": "27096bf4_5434d45b",
        "filename": "startop/tools/view_compiler/README.md",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-09-17T21:30:14Z",
      "side": 1,
      "message": "nit: Usually you want to have headers with #, ##, ### etc",
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "413e9668_f4f2da14",
        "filename": "startop/tools/view_compiler/README.md",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2018-09-17T22:23:59Z",
      "side": 1,
      "message": "I added a title at least. I think too many more sections would be overkill at this point.",
      "parentUuid": "27096bf4_5434d45b",
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f241cf17_857112d3",
        "filename": "startop/tools/view_compiler/README.md",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2018-09-17T21:41:22Z",
      "side": 1,
      "message": "Should this be \"Then to\"",
      "range": {
        "startLine": 12,
        "startChar": 13,
        "endLine": 12,
        "endChar": 16
      },
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3faa3301_ffd102ab",
        "filename": "startop/tools/view_compiler/README.md",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2018-09-17T22:23:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f241cf17_857112d3",
      "range": {
        "startLine": 12,
        "startChar": 13,
        "endLine": 12,
        "endChar": 16
      },
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec700e2f_1bd194e6",
        "filename": "startop/tools/view_compiler/README.md",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1086749
      },
      "writtenOn": "2018-09-17T21:41:22Z",
      "side": 1,
      "message": "It should also be noted that this only works for apps that do no use / include custom layout inflator or factory.",
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48d208e4_1e86035a",
        "filename": "startop/tools/view_compiler/README.md",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2018-09-17T22:23:59Z",
      "side": 1,
      "message": "I added a not about custom layout inflaters.\n\nIt actually does work somewhat for factories, since it generates code to get the factories from the default inflater and gives them first dibs to create a class.",
      "parentUuid": "ec700e2f_1bd194e6",
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3bca37a_db807167",
        "filename": "startop/tools/view_compiler/java_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1339996
      },
      "writtenOn": "2018-09-17T23:13:08Z",
      "side": 1,
      "message": "Consider using raw multi-line string syntax with R\"(...)\" \nSee: https://en.cppreference.com/w/cpp/language/string_literal\nAlso for example: https://cs.corp.google.com/android/frameworks/base/tools/aapt2/link/XmlReferenceLinker_test.cpp?type\u003dcs\u0026q\u003d%22TEST_F(XmlReferenceLinkerTest,+LinkBasicAttributes)+%7B%22\u0026sq\u003dpackage:Android\u0026g\u003d0\u0026l\u003d82",
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0181126_cb5e9348",
        "filename": "startop/tools/view_compiler/java_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2018-09-17T23:56:43Z",
      "side": 1,
      "message": "Thanks for the suggestion!\n\nI think for now I\u0027d like to keep things as they are, because with raw strings everything would be completely left aligned, and I think the indentation like we have here is nicer.\n\nI wasn\u0027t really aware of raw strings in C++, so I expect I\u0027ll use them more as this tool grows.",
      "parentUuid": "d3bca37a_db807167",
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52084bea_ebccd169",
        "filename": "startop/tools/view_compiler/java_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-09-17T21:30:14Z",
      "side": 1,
      "message": "nit: Why is this on a separate line? The rest of the code is formatted the way the output would be formatted.",
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13644006_f50687fe",
        "filename": "startop/tools/view_compiler/java_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2018-09-17T22:23:59Z",
      "side": 1,
      "message": "Clang-format weirdness. It should be a little better now.",
      "parentUuid": "52084bea_ebccd169",
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "231edb68_50740067",
        "filename": "startop/tools/view_compiler/java_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1339996
      },
      "writtenOn": "2018-09-17T23:13:08Z",
      "side": 1,
      "message": "Should we be using different class names for each layout?",
      "range": {
        "startLine": 32,
        "startChar": 30,
        "endLine": 32,
        "endChar": 42
      },
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e14fe7af_fdc29c43",
        "filename": "startop/tools/view_compiler/java_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2018-09-17T23:56:43Z",
      "side": 1,
      "message": "Yes, or different methods. If it\u0027s okay, I\u0027d like to save this for a later CL and consider supporting multiple compiled views a feature still to be added.",
      "parentUuid": "231edb68_50740067",
      "range": {
        "startLine": 32,
        "startChar": 30,
        "endLine": 32,
        "endChar": 42
      },
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "677c5342_b360bc1f",
        "filename": "startop/tools/view_compiler/java_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1339996
      },
      "writtenOn": "2018-09-17T23:13:08Z",
      "side": 1,
      "message": "You can use android::base::StringPrintf to format the string for this line.\n\nStringPrintf(\"XmlResourceParser xml \u003d res.getLayout(%s.R.layout.%s);\", package_, layout_name_);\n\nHere and other places would make this much more readable.",
      "range": {
        "startLine": 52,
        "startChar": 15,
        "endLine": 54,
        "endChar": 16
      },
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d12132bc_a60f847a",
        "filename": "startop/tools/view_compiler/java_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2018-09-17T23:56:43Z",
      "side": 1,
      "message": "Good idea, I think this is much more readable.",
      "parentUuid": "677c5342_b360bc1f",
      "range": {
        "startLine": 52,
        "startChar": 15,
        "endLine": 54,
        "endChar": 16
      },
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3322e83c_eb9ceb0d",
        "filename": "startop/tools/view_compiler/java_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1339996
      },
      "writtenOn": "2018-09-17T23:13:08Z",
      "side": 1,
      "message": "Would this be better named view_var? It is difficult to know what this variable is for with this name.",
      "range": {
        "startLine": 70,
        "startChar": 15,
        "endLine": 70,
        "endChar": 18
      },
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e534afaa_e5cba2e0",
        "filename": "startop/tools/view_compiler/java_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2018-09-17T23:56:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3322e83c_eb9ceb0d",
      "range": {
        "startLine": 70,
        "startChar": 15,
        "endLine": 70,
        "endChar": 18
      },
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec93c873_2e1dfdd9",
        "filename": "startop/tools/view_compiler/java_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1339996
      },
      "writtenOn": "2018-09-17T23:13:08Z",
      "side": 1,
      "message": "Why not \"layout\"? And this can be declared closer to where it is first used in line 86.",
      "range": {
        "startLine": 71,
        "startChar": 33,
        "endLine": 71,
        "endChar": 34
      },
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c798924d_230d36d0",
        "filename": "startop/tools/view_compiler/java_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2018-09-17T23:56:43Z",
      "side": 1,
      "message": "I like layout. I also renamed the variable to layout_var. Personally, I like having these variables all defined in one place, so I\u0027d rather keep the definition here.",
      "parentUuid": "ec93c873_2e1dfdd9",
      "range": {
        "startLine": 71,
        "startChar": 33,
        "endLine": 71,
        "endChar": 34
      },
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57e2caef_095bb632",
        "filename": "startop/tools/view_compiler/java_builder.h",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1339996
      },
      "writtenOn": "2018-09-17T23:13:08Z",
      "side": 1,
      "message": "nit: ViewJavaBuilder or something similar would be clearer",
      "range": {
        "startLine": 27,
        "startChar": 6,
        "endLine": 27,
        "endChar": 17
      },
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30787d69_4a0e5b66",
        "filename": "startop/tools/view_compiler/java_builder.h",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2018-09-17T23:56:43Z",
      "side": 1,
      "message": "How about JavaViewBuilder?",
      "parentUuid": "57e2caef_095bb632",
      "range": {
        "startLine": 27,
        "startChar": 6,
        "endLine": 27,
        "endChar": 17
      },
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51e737cf_3a3c7ef3",
        "filename": "startop/tools/view_compiler/java_builder.h",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1047255
      },
      "writtenOn": "2018-09-21T21:10:18Z",
      "side": 1,
      "message": "Would JavaViewBuilder fall afoul of the Java vs Java Language rule?  We don\u0027t want to get the cats involved.  ManagedViewBuilder?  JavaLangViewBuilder?",
      "parentUuid": "30787d69_4a0e5b66",
      "range": {
        "startLine": 27,
        "startChar": 6,
        "endLine": 27,
        "endChar": 17
      },
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5485319a_ac20d045",
        "filename": "startop/tools/view_compiler/java_builder.h",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-09-17T21:30:14Z",
      "side": 1,
      "message": "nit: Should this naming be consistent with L33/L35?",
      "range": {
        "startLine": 38,
        "startChar": 7,
        "endLine": 38,
        "endChar": 16
      },
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f5c7bf2_e964677d",
        "filename": "startop/tools/view_compiler/java_builder.h",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2018-09-17T22:23:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5485319a_ac20d045",
      "range": {
        "startLine": 38,
        "startChar": 7,
        "endLine": 38,
        "endChar": 16
      },
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dfc1c52_a6ccc42c",
        "filename": "startop/tools/view_compiler/main.cc",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1339996
      },
      "writtenOn": "2018-09-17T23:13:08Z",
      "side": 1,
      "message": "You could pass the parser to the Builder and have it iterate through the hierarchy in some Generate or Build method. It wouldn\u0027t be much of a builder anymore though...",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 89,
        "endChar": 71
      },
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "067df8e4_43b196fe",
        "filename": "startop/tools/view_compiler/main.cc",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2018-09-17T23:56:43Z",
      "side": 1,
      "message": "Yeah, I\u0027m planning on refactoring this as development continues. Here\u0027s my rough plan for the factoring:\n\n* this loop moves into libviewcompiler and takes the parser as a parameter\n* the JavaViewBuilder gets split into two parts: one part works in terms of high level operations like \"create a variable\" or \"call a constructor\", the second part does the low level source code formatting.\n* the parsing loop will call the high level operations\n* eventually there will be an interface-compatible replacement for the low level code formatter that directly generates compiled code\n\nAt that point, main.cc should basically be a call into the library, and then the library can be used as is in tests and also hopefully on device.\n\nI\u0027d rather go ahead and land this version and follow up with the refactorings and new functionality though.",
      "parentUuid": "0dfc1c52_a6ccc42c",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 89,
        "endChar": 71
      },
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "640d3892_8c95fb50",
        "filename": "startop/tools/view_compiler/util.cc",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1339996
      },
      "writtenOn": "2018-09-17T23:13:08Z",
      "side": 1,
      "message": "You could use aapt::util::Split(filename, aapt::file::sDirSep)[0].",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 66
      },
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30e3e192_c92b20a4",
        "filename": "startop/tools/view_compiler/util.cc",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2018-09-17T23:56:43Z",
      "side": 1,
      "message": "Ah, great!\n\nHow about I do this in a follow up CL?",
      "parentUuid": "640d3892_8c95fb50",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 66
      },
      "revId": "76b0cb86d5eae584efc6c3c10609ca5be501d39b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}