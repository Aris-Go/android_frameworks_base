{
  "comments": [
    {
      "key": {
        "uuid": "bfa4dc18_e9845cc9",
        "filename": "services/core/java/com/android/server/policy/PhoneWindowManager.java",
        "patchSetId": 7
      },
      "lineNbr": 1681,
      "author": {
        "id": 1421169
      },
      "writtenOn": "2019-06-25T06:10:11Z",
      "side": 1,
      "message": "Also just noticed that when there are other camera apps installed, even if Camera2 is selected as default handler for STILL_IMAGE_CAMERA, the content resolver fails to resolve STILL_IMAGE_CAMERA_SECURE since no choice has been made - and it cannot display a dialog asking the user since it\u0027s still on KeyGuard :-/\nGonna need to find a fix for that.",
      "revId": "1d8041a41a458271b0a904ac997880390f56bbda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "505a40ff_42b2210b",
        "filename": "services/core/java/com/android/server/policy/PhoneWindowManager.java",
        "patchSetId": 7
      },
      "lineNbr": 6422,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2019-06-12T23:37:08Z",
      "side": 1,
      "message": "If a button is long-pressed, then multiple ACTION_DOWN events are sent, with increasing repeatCount. Would this result in multiple messages being sent?\n\nAlso, why is the camera launched on long press (instead of on regular press)?",
      "range": {
        "startLine": 6422,
        "startChar": 20,
        "endLine": 6422,
        "endChar": 24
      },
      "revId": "1d8041a41a458271b0a904ac997880390f56bbda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84987a58_e7034eef",
        "filename": "services/core/java/com/android/server/policy/PhoneWindowManager.java",
        "patchSetId": 7
      },
      "lineNbr": 6422,
      "author": {
        "id": 1421169
      },
      "writtenOn": "2019-06-13T12:19:04Z",
      "side": 1,
      "message": "Pushed a new revision that saves the state \"mCameraLongPressMsgSent\" so that the MSG is only sent once per key down. Looks a bit ugly, and the back button behaviour doesn\u0027t care about multiple messages being sent as well, as they\u0027re cleared at the end of the timeout anyway.\nYour call.\n\nWe\u0027ve chosen long press mainly because it matches the behaviour that OEMs have chosen for their proprietary solution.\nOnce you launch on regular press or even on FOCUS (for two-stage shutters), you might have lots of accidental triggers.",
      "parentUuid": "505a40ff_42b2210b",
      "range": {
        "startLine": 6422,
        "startChar": 20,
        "endLine": 6422,
        "endChar": 24
      },
      "revId": "1d8041a41a458271b0a904ac997880390f56bbda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57517084_49fb531d",
        "filename": "services/core/java/com/android/server/policy/PhoneWindowManager.java",
        "patchSetId": 7
      },
      "lineNbr": 6422,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2019-06-25T01:17:58Z",
      "side": 1,
      "message": "I thought about this some more. Could you please describe this button a bit more? Is this just a dedicated camera HW button?\nIf screen is off, don\u0027t we want to launch camera as quickly as possible? If so, I assume that we want to launch camera on the first DOWN event in that case?\n\nIf the camera app is already open, then maybe we want to pass this button to the camera app, so that the app can decide how to handle (maybe focus on down / take picture on up)?\n\n\nIf you could explain the UX a bit more, it would be much appreciated.\n\nAs for the handler, you can use hasMessages [1] to see if a message is already enqueued. You can also look at repeat count and make that the decision based on that (only enqueue if repeatCount \u003d 0), but we should first figure out what to do with this key first.\n\n[1] https://developer.android.com/reference/android/os/Handler#hasMessages(int)",
      "parentUuid": "84987a58_e7034eef",
      "range": {
        "startLine": 6422,
        "startChar": 20,
        "endLine": 6422,
        "endChar": 24
      },
      "revId": "1d8041a41a458271b0a904ac997880390f56bbda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "453fd2e2_9de1ae9b",
        "filename": "services/core/java/com/android/server/policy/PhoneWindowManager.java",
        "patchSetId": 7
      },
      "lineNbr": 6422,
      "author": {
        "id": 1421169
      },
      "writtenOn": "2019-06-25T06:10:11Z",
      "side": 1,
      "message": "\u003e Could you please describe this button a bit more? Is this just a dedicated camera HW button?\n\nMy test device is a Sony Xperia XZ, which like (almost?) all Sony phones has a dedicated two-stage shutter button. In the stock firmware, the first stage (\"focus\") doesn\u0027t trigger anything outside the camera app, but pressing down further to the second stage and holding/long-pressing triggers the camera launch, even from KeyGuard or screen off. The stock firmware does not wait for the button release.\n\n\u003e If screen is off, don\u0027t we want to launch camera as quickly as possible? If so, I assume that we want to launch camera on the first DOWN event in that case?\n\nWhile I would likely enable such a behaviour for myself if given the choice, I would beware that this might trigger on accident a lot more often than with a long-press.\nWe could find ways to handle such accidental cases - more on that down below - but this is the most simple way.\nWe could however trigger IMAGE_CAPTURE/IMAGE_CAPTURE_SECURE directly, I\u0027d be open to that.\n\n\u003e If the camera app is already open, then maybe we want to pass this button to the camera app, so that the app can decide how to handle (maybe focus on down / take picture on up)?\n\nWe do already pass the key \"down\" with this patch, we only do not pass the \"up\" event if a long-press was detected. (The camera app snaps a picture on the down event)\n\n\u003e As for the handler, you can use hasMessages [1] to see if a message is already enqueued. You can also look at repeat count and make that the decision based on that (only enqueue if repeatCount \u003d 0), but we should first figure out what to do with this key first.\n\nGreat, thanks for the pointer!",
      "parentUuid": "57517084_49fb531d",
      "range": {
        "startLine": 6422,
        "startChar": 20,
        "endLine": 6422,
        "endChar": 24
      },
      "revId": "1d8041a41a458271b0a904ac997880390f56bbda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}