{
  "comments": [
    {
      "key": {
        "uuid": "AAAISH///Tw\u003d",
        "filename": "wifi/java/android/net/wifi/WifiNative.java",
        "patchSetId": 1
      },
      "lineNbr": 550,
      "author": {
        "id": 1003344
      },
      "writtenOn": "2012-08-14T20:50:41Z",
      "side": 1,
      "message": "PERSISTENT_NET_ID",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAISH///M8\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pGroup.java",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1003344
      },
      "writtenOn": "2012-08-14T20:50:41Z",
      "side": 1,
      "message": "Lets change this comment to:\n\n\"If a matching persistent profile is found, use it. Otherwise, create a new persistent profile\"",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIaH////8\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1013,
      "author": {
        "id": 1003344
      },
      "writtenOn": "2012-08-14T20:50:41Z",
      "side": 1,
      "message": "Why do you think we need a temporary option for createGroup ?\n\nFor now,  lets go with persistent as the only option with the existing API",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIcX///0A\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1013,
      "author": {
        "id": 1014552
      },
      "writtenOn": "2012-08-15T11:19:51Z",
      "side": 1,
      "message": "OK, so far I don\u0027t have a clear usecase for temporary group. Let\u0027s remove this.\n\nBTW, do you think delete/clear function is needed ??\nIf user connected to the other device wrongly, user would like to clear own profile probably.",
      "parentUuid": "AAAIaH////8\u003d",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIbn///xk\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1013,
      "author": {
        "id": 1003344
      },
      "writtenOn": "2012-08-15T17:10:50Z",
      "side": 1,
      "message": "I think showing up \"persisted networks\" list and then giving up the option of clearing can be done in settings for user.\n\nI do not think it needs to have an API for applications.",
      "parentUuid": "AAAIcX///0A\u003d",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIcX///xw\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1013,
      "author": {
        "id": 1014552
      },
      "writtenOn": "2012-08-15T23:13:36Z",
      "side": 1,
      "message": "Do you mean we need hidden APIs for obtaining/deleting the persistent group ?",
      "parentUuid": "AAAIbn///xk\u003d",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIQ3///70\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1003344
      },
      "writtenOn": "2012-08-14T20:50:41Z",
      "side": 1,
      "message": "CONNECT_FAILURE \u0026 CONNECT_SUCCESS",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIQ3///74\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 362,
      "author": {
        "id": 1003344
      },
      "writtenOn": "2012-08-14T20:50:41Z",
      "side": 1,
      "message": "can you look at using a LruCache  ? It will have the advantage of being a map and providing us with a cache which can remove the least recently used network ?\n\nPerhaps, the group owner address should be the key",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIcX///z0\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 362,
      "author": {
        "id": 1014552
      },
      "writtenOn": "2012-08-15T11:19:51Z",
      "side": 1,
      "message": "Thanks for your information, I\u0027ll try to use LruCache.\nBut it should be noted that we cannot store LRU information into wpa_supplicant.conf at default. In other words, once wifi is disabled, LRU info will be deleted.\n\nIf you want to use LRU perfectly, we must sort wpa_supplicant\u0027s profiles when wifi is disabled. Do you want me to implement this ?",
      "parentUuid": "AAAIQ3///74\u003d",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIcX///y8\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 362,
      "author": {
        "id": 1014552
      },
      "writtenOn": "2012-08-15T11:55:01Z",
      "side": 1,
      "message": "I saw LruCache, but it\u0027s a little difficult to use it for this because we may want to get the profile by network id or p2p device or \"p2p device and ssid\", and LruCache needs one key.\nSo, if you make wifiP2pGroupList LRU, we have to add LRU information to the list by myself.\nDo you want me to modify WifiP2pGroupList like this ??",
      "parentUuid": "AAAIcX///z0\u003d",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIbn///wE\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 362,
      "author": {
        "id": 1003344
      },
      "writtenOn": "2012-08-15T17:10:50Z",
      "side": 1,
      "message": "True. I thought LruCache has a values() that we could use to fall back on looking up on a different key.\n\nHow about having a HashMap and then using the dominant key (appears to be network id ?) for quick look up and then using values() to get all elements whenever we want to look up by something else like device address",
      "parentUuid": "AAAIcX///y8\u003d",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIcX///xs\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 362,
      "author": {
        "id": 1014552
      },
      "writtenOn": "2012-08-15T23:13:36Z",
      "side": 1,
      "message": "I found the snapshot() in LruCache.\nThis returns a copy of the current contents of the cache, so we could look up on a different key.",
      "parentUuid": "AAAIbn///wE\u003d",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIaX///uA\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 860,
      "author": {
        "id": 1003344
      },
      "writtenOn": "2012-08-14T20:50:41Z",
      "side": 1,
      "message": "This seems to be breaking the API to hide dialogs for apps that set it.\n\nWe are setting the config here before calling connect() which is checking for the difference between config \u0026 mSavedPeerConfig which will not exist since they are same",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIcX///zw\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 860,
      "author": {
        "id": 1014552
      },
      "writtenOn": "2012-08-15T11:19:51Z",
      "side": 1,
      "message": "Thanks. I\u0027ll delete this line and change the argument of connect().\n\nIn connect(), I checked the difference between config \u0026 mSavedPeerConfig.",
      "parentUuid": "AAAIaX///uA\u003d",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIaX///t4\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 966,
      "author": {
        "id": 1003344
      },
      "writtenOn": "2012-08-14T20:50:41Z",
      "side": 1,
      "message": "allignment",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIaX///r8\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 1164,
      "author": {
        "id": 1003344
      },
      "writtenOn": "2012-08-14T20:50:41Z",
      "side": 1,
      "message": "shouldnt we be checking if we exceeded the persistent group list size at this point ?",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIcX///zk\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 1164,
      "author": {
        "id": 1014552
      },
      "writtenOn": "2012-08-15T11:19:51Z",
      "side": 1,
      "message": "I check the size before creating p2p group, so it is unnecessary to check it here.",
      "parentUuid": "AAAIaX///r8\u003d",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAISH///OQ\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 1406,
      "author": {
        "id": 1003344
      },
      "writtenOn": "2012-08-14T20:50:41Z",
      "side": 1,
      "message": "long line",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIQ3///7g\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 1672,
      "author": {
        "id": 1003344
      },
      "writtenOn": "2012-08-14T20:50:41Z",
      "side": 1,
      "message": "Should be part of WifiP2pDeviceList",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIcX///zM\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 1672,
      "author": {
        "id": 1014552
      },
      "writtenOn": "2012-08-15T11:19:51Z",
      "side": 1,
      "message": "Sorry. This function is NOT used now. I\u0027ll delete it.",
      "parentUuid": "AAAIQ3///7g\u003d",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIQ3///7o\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 1681,
      "author": {
        "id": 1003344
      },
      "writtenOn": "2012-08-14T20:50:41Z",
      "side": 1,
      "message": "use mPeers.updateStatus() ?",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIcX///zQ\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 1681,
      "author": {
        "id": 1014552
      },
      "writtenOn": "2012-08-15T11:19:51Z",
      "side": 1,
      "message": "Sorry. This function is NOT used now. I\u0027ll delete it.",
      "parentUuid": "AAAIQ3///7o\u003d",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIQ3///7k\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 1691,
      "author": {
        "id": 1003344
      },
      "writtenOn": "2012-08-14T20:50:41Z",
      "side": 1,
      "message": "This should also go in WifiP2pDeviceList",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIcX///zU\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 1691,
      "author": {
        "id": 1014552
      },
      "writtenOn": "2012-08-15T11:19:51Z",
      "side": 1,
      "message": "Sorry. This function is NOT used now. I\u0027ll delete it.",
      "parentUuid": "AAAIQ3///7k\u003d",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIQ3///7w\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 1700,
      "author": {
        "id": 1003344
      },
      "writtenOn": "2012-08-14T20:50:41Z",
      "side": 1,
      "message": "mPeers already includes a get() funciton for deviceAddress",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIcX///zY\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 1700,
      "author": {
        "id": 1014552
      },
      "writtenOn": "2012-08-15T11:19:51Z",
      "side": 1,
      "message": "Thanks. I\u0027ll use get() in mPeers.",
      "parentUuid": "AAAIQ3///7w\u003d",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIaX///s0\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 1812,
      "author": {
        "id": 1003344
      },
      "writtenOn": "2012-08-14T20:50:41Z",
      "side": 1,
      "message": "mPeers.get() ?",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIaX///sw\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 1825,
      "author": {
        "id": 1003344
      },
      "writtenOn": "2012-08-14T20:50:41Z",
      "side": 1,
      "message": "has reached the limit",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIaX///sI\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 1869,
      "author": {
        "id": 1003344
      },
      "writtenOn": "2012-08-14T20:50:41Z",
      "side": 1,
      "message": "How can the groups size increase at this point ? It seems we only do mGroups.add() in updatePersistentNetworks()",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAIcX///zE\u003d",
        "filename": "wifi/java/android/net/wifi/p2p/WifiP2pService.java",
        "patchSetId": 1
      },
      "lineNbr": 1869,
      "author": {
        "id": 1014552
      },
      "writtenOn": "2012-08-15T11:19:51Z",
      "side": 1,
      "message": "Now, I check the size before creating group.\n\n\u003e It seems we only do mGroups.add() in updatePersistentNetworks()\n\nYes. updatePersistentNetworks() is called in start-up and the case when the persistent group is created.",
      "parentUuid": "AAAIaX///sI\u003d",
      "revId": "488871aba49e104451579ac91fbf10a98740b6e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}