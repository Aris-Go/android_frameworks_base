{
  "comments": [
    {
      "key": {
        "uuid": "6413da2c_f10a6aa1",
        "filename": "core/java/android/net/ipmemorystore/NetworkAttributes.java",
        "patchSetId": 4
      },
      "lineNbr": 147,
      "author": {
        "id": 1304263
      },
      "writtenOn": "2018-12-12T04:44:31Z",
      "side": 1,
      "message": "If dest is able to be null, should we add a null check otherwise we will get a null pointer exception while using it?",
      "range": {
        "startLine": 147,
        "startChar": 8,
        "endLine": 147,
        "endChar": 12
      },
      "revId": "c3b8041669b440b2b03a9a1bb1fb1b72d5c96e21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f930f804_dfceb986",
        "filename": "core/java/android/net/ipmemorystore/NetworkAttributes.java",
        "patchSetId": 4
      },
      "lineNbr": 147,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2018-12-12T05:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6413da2c_f10a6aa1",
      "range": {
        "startLine": 147,
        "startChar": 8,
        "endLine": 147,
        "endChar": 12
      },
      "revId": "c3b8041669b440b2b03a9a1bb1fb1b72d5c96e21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cea617e_c336a712",
        "filename": "core/java/android/net/ipmemorystore/SameL3NetworkResponse.java",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1304263
      },
      "writtenOn": "2018-12-12T04:44:31Z",
      "side": 1,
      "message": "Sorry, may I know what POD is?",
      "revId": "c3b8041669b440b2b03a9a1bb1fb1b72d5c96e21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1584d21d_5f86ad73",
        "filename": "core/java/android/net/ipmemorystore/SameL3NetworkResponse.java",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2018-12-12T05:48:25Z",
      "side": 1,
      "message": "It\u0027s the acronym of Plain Old Data : https://en.wikipedia.org/wiki/Passive_data_structure\n\nIt\u0027s a generic term used in object-oriented programming to mean a data container with no intelligence.\nBut in this case it\u0027s not really appropriate actually as it has an isSameNetwork() method. Reworded the comment.",
      "parentUuid": "9cea617e_c336a712",
      "revId": "c3b8041669b440b2b03a9a1bb1fb1b72d5c96e21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de21d8f2_7bbe8403",
        "filename": "core/java/android/net/ipmemorystore/SameL3NetworkResponse.java",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 1304263
      },
      "writtenOn": "2018-12-12T04:44:31Z",
      "side": 1,
      "message": "Not a strong option.\n\nI will expect to get boolean for \"isSameNetwork\" to indicate it\u0027s the same or not. Could we rename to somthing like, getNetorkDifferenceStatus?(but this one may not be good enough)",
      "range": {
        "startLine": 84,
        "startChar": 21,
        "endLine": 84,
        "endChar": 34
      },
      "revId": "c3b8041669b440b2b03a9a1bb1fb1b72d5c96e21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adf15c8f_d44b28d2",
        "filename": "core/java/android/net/ipmemorystore/SameL3NetworkResponse.java",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2018-12-12T05:48:25Z",
      "side": 1,
      "message": "You are absolutely right. Reworded to \"getNetworkSameness\". \"Sameness\" is not a common word (I was surprised to find it actually exists), but it should be clear enough anyway.",
      "parentUuid": "de21d8f2_7bbe8403",
      "range": {
        "startLine": 84,
        "startChar": 21,
        "endLine": 84,
        "endChar": 34
      },
      "revId": "c3b8041669b440b2b03a9a1bb1fb1b72d5c96e21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "befed2c5_ab955583",
        "filename": "core/java/android/net/ipmemorystore/SameL3NetworkResponse.java",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 1288034
      },
      "writtenOn": "2018-12-12T08:47:28Z",
      "side": 1,
      "message": "\"Similarity\" would also be an option. I don\u0027t have a strong opinion on this either though.",
      "parentUuid": "adf15c8f_d44b28d2",
      "range": {
        "startLine": 84,
        "startChar": 21,
        "endLine": 84,
        "endChar": 34
      },
      "revId": "c3b8041669b440b2b03a9a1bb1fb1b72d5c96e21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3842bb3f_75b02a32",
        "filename": "core/java/android/net/ipmemorystore/SameL3NetworkResponse.java",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2018-12-12T13:10:30Z",
      "side": 1,
      "message": "\"Similarity\" is a much more common word, but to me it implies some degree of similarity and some degree of difference. Here we are looking for a binary answer. The confidence is, concretely, a similarity score, but that\u0027s an implementation detail ; API-wise we are not trying to supply a similarity value but really to tell how confident we are that this is the *same* network. It\u0027s pretty nuanced :)",
      "parentUuid": "befed2c5_ab955583",
      "range": {
        "startLine": 84,
        "startChar": 21,
        "endLine": 84,
        "endChar": 34
      },
      "revId": "c3b8041669b440b2b03a9a1bb1fb1b72d5c96e21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58425f5f_be03042f",
        "filename": "core/java/android/net/ipmemorystore/SameL3NetworkResponse.java",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 1304263
      },
      "writtenOn": "2018-12-12T04:44:31Z",
      "side": 1,
      "message": "Will this able to be a configurable value? I am not sure if we could always say that it\u0027s the same network if the confidence is greater than 0.5 or that\u0027s our assumption for that? I mean if I prefer confidence \u003e 0.6 to be treated as the same network. Is that possible?\n\nNot necessary in this commit if that is a possible todo",
      "range": {
        "startLine": 86,
        "startChar": 28,
        "endLine": 86,
        "endChar": 31
      },
      "revId": "c3b8041669b440b2b03a9a1bb1fb1b72d5c96e21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e066a31b_7e9e9d6c",
        "filename": "core/java/android/net/ipmemorystore/SameL3NetworkResponse.java",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2018-12-12T05:48:25Z",
      "side": 1,
      "message": "The way I see it, how we determine whether it\u0027s the same network is an implementation detail that is owned by the memory store, therefore clients do not get a say in that. If you think it\u0027s going to be a common complaint, then I believe the right thing would be to hide the confidence instead of exposing it. So if we think 0.6 is a good cutoff (and therefore 0.5 returns DIFFERENT_NETWORK) we can do this, but I don\u0027t want to offer the ability to clients to choose the cutoff because I think it\u0027s the responsibility of the memory store to do that work for clients.\n\nImportantly, I think that for this API to be useful, it needs no never return \"maybe\", because there is nothing useful thot clients could do with this. If a client asks whether that\u0027s the same network, they already think \"maybe\", and they call the memory store to get clarity on this so we should provide them with a clear answer that they can blame on the memory store if it\u0027s not correct, rather than refuse responsibility.\n\nDoes that make sense, and does it address your concerns ?",
      "parentUuid": "58425f5f_be03042f",
      "range": {
        "startLine": 86,
        "startChar": 28,
        "endLine": 86,
        "endChar": 31
      },
      "revId": "c3b8041669b440b2b03a9a1bb1fb1b72d5c96e21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "681c6230_d16dab74",
        "filename": "core/java/android/net/ipmemorystore/SameL3NetworkResponse.java",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 1304263
      },
      "writtenOn": "2018-12-15T03:00:21Z",
      "side": 1,
      "message": "Ack. Understood.",
      "parentUuid": "e066a31b_7e9e9d6c",
      "range": {
        "startLine": 86,
        "startChar": 28,
        "endLine": 86,
        "endChar": 31
      },
      "revId": "c3b8041669b440b2b03a9a1bb1fb1b72d5c96e21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29726179_c8f79e73",
        "filename": "services/ipmemorystore/java/com/android/server/net/ipmemorystore/IpMemoryStoreService.java",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1304263
      },
      "writtenOn": "2018-12-12T04:44:31Z",
      "side": 1,
      "message": "Will it able to be null since it\u0027s marked as NonNull? or it does not mean listener could be null?",
      "range": {
        "startLine": 55,
        "startChar": 75,
        "endLine": 55,
        "endChar": 84
      },
      "revId": "c3b8041669b440b2b03a9a1bb1fb1b72d5c96e21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2821805_35a7519d",
        "filename": "services/ipmemorystore/java/com/android/server/net/ipmemorystore/IpMemoryStoreService.java",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2018-12-12T05:48:25Z",
      "side": 1,
      "message": "Oh this absolutely can be null. Thanks.",
      "parentUuid": "29726179_c8f79e73",
      "range": {
        "startLine": 55,
        "startChar": 75,
        "endLine": 55,
        "endChar": 84
      },
      "revId": "c3b8041669b440b2b03a9a1bb1fb1b72d5c96e21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76d81336_0f579138",
        "filename": "services/ipmemorystore/java/com/android/server/net/ipmemorystore/IpMemoryStoreService.java",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2018-12-12T13:14:03Z",
      "side": 1,
      "message": "(done, resolving)",
      "parentUuid": "b2821805_35a7519d",
      "range": {
        "startLine": 55,
        "startChar": 75,
        "endLine": 55,
        "endChar": 84
      },
      "revId": "c3b8041669b440b2b03a9a1bb1fb1b72d5c96e21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f879cfe_0210ecba",
        "filename": "services/ipmemorystore/java/com/android/server/net/ipmemorystore/IpMemoryStoreService.java",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1304263
      },
      "writtenOn": "2018-12-12T04:44:31Z",
      "side": 1,
      "message": "Do we need to document it?",
      "range": {
        "startLine": 76,
        "startChar": 12,
        "endLine": 76,
        "endChar": 53
      },
      "revId": "c3b8041669b440b2b03a9a1bb1fb1b72d5c96e21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a9daa66_8f5b360d",
        "filename": "services/ipmemorystore/java/com/android/server/net/ipmemorystore/IpMemoryStoreService.java",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2018-12-12T05:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f879cfe_0210ecba",
      "range": {
        "startLine": 76,
        "startChar": 12,
        "endLine": 76,
        "endChar": 53
      },
      "revId": "c3b8041669b440b2b03a9a1bb1fb1b72d5c96e21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4ad47b8_4483a628",
        "filename": "services/ipmemorystore/java/com/android/server/net/ipmemorystore/IpMemoryStoreService.java",
        "patchSetId": 4
      },
      "lineNbr": 92,
      "author": {
        "id": 1304263
      },
      "writtenOn": "2018-12-12T04:44:31Z",
      "side": 1,
      "message": "Will this also need a documented note @return to explain the behavior to align with the others?",
      "range": {
        "startLine": 92,
        "startChar": 6,
        "endLine": 92,
        "endChar": 7
      },
      "revId": "c3b8041669b440b2b03a9a1bb1fb1b72d5c96e21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f6fb5bd_6185b7fc",
        "filename": "services/ipmemorystore/java/com/android/server/net/ipmemorystore/IpMemoryStoreService.java",
        "patchSetId": 4
      },
      "lineNbr": 92,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2018-12-12T05:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e4ad47b8_4483a628",
      "range": {
        "startLine": 92,
        "startChar": 6,
        "endLine": 92,
        "endChar": 7
      },
      "revId": "c3b8041669b440b2b03a9a1bb1fb1b72d5c96e21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}