{
  "comments": [
    {
      "key": {
        "uuid": "AAAI83///f4\u003d",
        "filename": "services/java/com/android/server/pm/PackageManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 325,
      "author": {
        "id": 1002975
      },
      "writtenOn": "2012-09-07T16:01:20Z",
      "side": 1,
      "message": "Do we really need this? PackageManagerService is already the largest data structure in the system_server. I\u0027d rather not make it larger.",
      "revId": "4029ae0d89cd3cf54dab9c79bfdf2355051a1b0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAI3n///No\u003d",
        "filename": "services/java/com/android/server/pm/PackageManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 325,
      "author": {
        "id": 1013887
      },
      "writtenOn": "2012-09-07T17:14:31Z",
      "side": 1,
      "message": "We need a way to permanently store signatures that are found within the mac_permissions.xml policy file so we can make the association with an seinfo tag.  Presently there are only 4 (one for each of the AOSP keys). I can look again for existing structures that will serve the same purpose but haven\u0027t been able to find a proper substitute.",
      "parentUuid": "AAAI83///f4\u003d",
      "revId": "4029ae0d89cd3cf54dab9c79bfdf2355051a1b0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAI83///gE\u003d",
        "filename": "services/java/com/android/server/pm/PackageManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 3582,
      "author": {
        "id": 1002975
      },
      "writtenOn": "2012-09-07T16:01:20Z",
      "side": 1,
      "message": "None of the other PackageManagerService policy uses a single signature. It always matches all the signatures, so this seems wrong.",
      "revId": "4029ae0d89cd3cf54dab9c79bfdf2355051a1b0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAI3n///Nc\u003d",
        "filename": "services/java/com/android/server/pm/PackageManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 3582,
      "author": {
        "id": 1013887
      },
      "writtenOn": "2012-09-07T17:14:31Z",
      "side": 1,
      "message": "If we were to require all signatures to match then we could run into a potential problem with different seinfo labels being applicable for a single package. So in our case we let the first signature that matches use its seinfo tag to label the app instead of trying to write policy that determines all the possible signature combinations involved. But then again I don\u0027t believe AOSP allows multiple certs per app anyway.",
      "parentUuid": "AAAI83///gE\u003d",
      "revId": "4029ae0d89cd3cf54dab9c79bfdf2355051a1b0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAI83///TQ\u003d",
        "filename": "services/java/com/android/server/pm/PackageManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 3582,
      "author": {
        "id": 1015624
      },
      "writtenOn": "2012-09-07T21:03:41Z",
      "side": 1,
      "message": "pkg.mSignatures",
      "parentUuid": "AAAI83///gE\u003d",
      "revId": "4029ae0d89cd3cf54dab9c79bfdf2355051a1b0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAI/H///7U\u003d",
        "filename": "services/java/com/android/server/pm/PackageManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 3582,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2012-09-12T19:07:21Z",
      "side": 1,
      "message": "I think this was inspired by packages/apps/Nfc/src/com/android/nfc/NfceeAccessControl.java and  packages/apps/Nfc/etc/sample_nfcee_access.xml.  We aren\u0027t comparing the signatures of two packages but are instead matching on signature in the configuration.  Not sure what it would look like to specify multiple signers in such a configuration.  AOSP seems to allow multiple signers per package but unclear how/whether this is used in practice and what it actually means.",
      "parentUuid": "AAAI83///gE\u003d",
      "revId": "4029ae0d89cd3cf54dab9c79bfdf2355051a1b0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAI83///gA\u003d",
        "filename": "services/java/com/android/server/pm/PackageManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 3602,
      "author": {
        "id": 1002975
      },
      "writtenOn": "2012-09-07T16:01:20Z",
      "side": 1,
      "message": "Using .get(null) is also strange. Why not just set it to null?",
      "revId": "4029ae0d89cd3cf54dab9c79bfdf2355051a1b0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAI3n///Ng\u003d",
        "filename": "services/java/com/android/server/pm/PackageManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 3602,
      "author": {
        "id": 1013887
      },
      "writtenOn": "2012-09-07T17:14:31Z",
      "side": 1,
      "message": "Within our mac_permissions.xml policy file we allow a \u0027default\u0027 stanza. This of course performs the function of applying a policy and labeling when none of the other stanzas match. Since I was using a hashmap for all the non null signatures found within policy, the null key was available for use. So the idea was to not create another structure just for the default policy case.  The idea of the logic was to just grab the null key. If it was found, then we have a default policy in place and a non null seinfo label would be returned. If the null key wasn\u0027t found (no default policy stanza) then a null value would be returned.",
      "parentUuid": "AAAI83///gA\u003d",
      "revId": "4029ae0d89cd3cf54dab9c79bfdf2355051a1b0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAI83///TA\u003d",
        "filename": "services/java/com/android/server/pm/PackageManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 3602,
      "author": {
        "id": 1015624
      },
      "writtenOn": "2012-09-07T21:03:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAI83///gA\u003d",
      "revId": "4029ae0d89cd3cf54dab9c79bfdf2355051a1b0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAI83///SU\u003d",
        "filename": "services/java/com/android/server/pm/PackageManagerService.java",
        "patchSetId": 1
      },
      "lineNbr": 3602,
      "author": {
        "id": 1015624
      },
      "writtenOn": "2012-09-07T21:03:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAI3n///Ng\u003d",
      "revId": "4029ae0d89cd3cf54dab9c79bfdf2355051a1b0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}