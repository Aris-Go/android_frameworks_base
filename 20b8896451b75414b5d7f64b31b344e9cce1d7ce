{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5102683f_5ea20561",
        "filename": "services/core/java/com/android/server/ConnectivityService.java",
        "patchSetId": 1
      },
      "lineNbr": 3666,
      "author": {
        "id": 1470463
      },
      "writtenOn": "2021-03-05T15:13:51Z",
      "side": 1,
      "message": "Good catch. This I would imagine was a hard bug to find.",
      "range": {
        "startLine": 3666,
        "startChar": 16,
        "endLine": 3666,
        "endChar": 61
      },
      "revId": "20b8896451b75414b5d7f64b31b344e9cce1d7ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b2cdfef_91115f4c",
        "filename": "services/core/java/com/android/server/ConnectivityService.java",
        "patchSetId": 1
      },
      "lineNbr": 5293,
      "author": {
        "id": 1470463
      },
      "writtenOn": "2021-03-05T15:13:51Z",
      "side": 1,
      "message": "Is this necessary? Could you just do:\n\n mActiveRequest \u003d nri.getActiveRequest()",
      "range": {
        "startLine": 5283,
        "startChar": 12,
        "endLine": 5293,
        "endChar": 17
      },
      "revId": "20b8896451b75414b5d7f64b31b344e9cce1d7ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f88675c8_e1d7328e",
        "filename": "services/core/java/com/android/server/ConnectivityService.java",
        "patchSetId": 1
      },
      "lineNbr": 5293,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2021-03-08T10:23:56Z",
      "side": 1,
      "message": "That was also my first reflex. It doesn\u0027t work because getActiveRequest() will return a request from the old list. This code needs to set as the active request the one with the highest priority from the new list.\n\nInstead I could have called indexOf(getActiveRequest()) and use the same index in the new list. That would be faster, but would also implicitly depend on the list of new requests corresponding one-to-one with the list of passed requests, which is always true today but I don\u0027t think is part of the contract of this constructor.",
      "parentUuid": "5b2cdfef_91115f4c",
      "range": {
        "startLine": 5283,
        "startChar": 12,
        "endLine": 5293,
        "endChar": 17
      },
      "revId": "20b8896451b75414b5d7f64b31b344e9cce1d7ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02a241f6_ac0babaf",
        "filename": "services/core/java/com/android/server/ConnectivityService.java",
        "patchSetId": 1
      },
      "lineNbr": 5293,
      "author": {
        "id": 1470463
      },
      "writtenOn": "2021-03-09T03:39:38Z",
      "side": 1,
      "message": "I see. You have to do this because of l.3666 so as to avoid the blip.\n\nWhat about this? Only add the NRI originally if we need to add it? I put a comment to that effect at l.9135 on how to do this. It seems fairly simple? Also, if you did that, you could feasibly remove this entire block of code as well as your changes starting at l.3661.\n\nWhat do you think? Seems more intuitive to not remove/add the request to begin with since it is easy enough and at the same time, helps avoid adding this supporting code which even I took a minute to understand. I believe any reconciliation for those particular requests satisfier/activerequest would be fixed on rematch as well.",
      "parentUuid": "f88675c8_e1d7328e",
      "range": {
        "startLine": 5283,
        "startChar": 12,
        "endLine": 5293,
        "endChar": 17
      },
      "revId": "20b8896451b75414b5d7f64b31b344e9cce1d7ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35c5413d_06a556c3",
        "filename": "services/core/java/com/android/server/ConnectivityService.java",
        "patchSetId": 1
      },
      "lineNbr": 9135,
      "author": {
        "id": 1470463
      },
      "writtenOn": "2021-03-09T03:39:38Z",
      "side": 1,
      "message": "Maybe here or around here, you could change this if statement to support this or the like?\n\n    // Add a currently tracked nri if it is not going to be tracked anymore.\n    if (isPerAppTrackedNri(nri) \u0026\u0026 !isNriGoingToBeTracked) {\n        defaultCallbackRequests.add(nri);\n        continue;\n    }",
      "range": {
        "startLine": 9135,
        "startChar": 12,
        "endLine": 9135,
        "endChar": 42
      },
      "revId": "20b8896451b75414b5d7f64b31b344e9cce1d7ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45d11587_b9b592cf",
        "filename": "tests/net/java/com/android/server/ConnectivityServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 10683,
      "author": {
        "id": 1470463
      },
      "writtenOn": "2021-03-05T15:13:51Z",
      "side": 1,
      "message": "Comment?\n\n    // default NCs will be unregistered in tearDown",
      "revId": "20b8896451b75414b5d7f64b31b344e9cce1d7ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e8ba914_05d6e4a6",
        "filename": "tests/net/java/com/android/server/ConnectivityServiceTest.java",
        "patchSetId": 1
      },
      "lineNbr": 10683,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2021-03-08T10:23:56Z",
      "side": 1,
      "message": "Done.\n\nChanged from \"NCs\" to \"callbacks\" because in our code base NC rather consistently stands for NetworkCapabilities.",
      "parentUuid": "45d11587_b9b592cf",
      "revId": "20b8896451b75414b5d7f64b31b344e9cce1d7ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}