{
  "comments": [
    {
      "key": {
        "uuid": "82f23b16_b34914f1",
        "filename": "services/core/java/com/android/server/connectivity/tethering/EntitlementManager.java",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 1304263
      },
      "writtenOn": "2019-04-11T01:57:02Z",
      "side": 1,
      "message": "Maybe \"subId\" is enough?",
      "range": {
        "startLine": 79,
        "startChar": 51,
        "endLine": 79,
        "endChar": 64
      },
      "revId": "df4cf7a93e0793017e520e535615fd831cdb5840",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1eab37b_e3f0cd77",
        "filename": "services/core/java/com/android/server/connectivity/tethering/EntitlementManager.java",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 1304263
      },
      "writtenOn": "2019-04-11T01:57:02Z",
      "side": 1,
      "message": "EXTRA_SUBID?",
      "range": {
        "startLine": 79,
        "startChar": 32,
        "endLine": 79,
        "endChar": 47
      },
      "revId": "df4cf7a93e0793017e520e535615fd831cdb5840",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55432df3_0bfd7284",
        "filename": "services/core/java/com/android/server/connectivity/tethering/EntitlementManager.java",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-04-11T02:07:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "82f23b16_b34914f1",
      "range": {
        "startLine": 79,
        "startChar": 51,
        "endLine": 79,
        "endChar": 64
      },
      "revId": "df4cf7a93e0793017e520e535615fd831cdb5840",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "951a4c90_a05980a3",
        "filename": "services/core/java/com/android/server/connectivity/tethering/EntitlementManager.java",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-04-11T02:07:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a1eab37b_e3f0cd77",
      "range": {
        "startLine": 79,
        "startChar": 32,
        "endLine": 79,
        "endChar": 47
      },
      "revId": "df4cf7a93e0793017e520e535615fd831cdb5840",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86319fa4_9b56df63",
        "filename": "services/core/java/com/android/server/connectivity/tethering/EntitlementManager.java",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-04-10T11:59:56Z",
      "side": 1,
      "message": "Because this is a callback I\u0027m not too happy about having \"maybe\" in here. Callbacks warn you of something that happened ; \"maybe\" in there would mean you don\u0027t know whether it happened, which kind of defeats the purpose.\nThe \"maybe\" style is usually (reluctantly) used to do something if needed. Callbacks *must not* be called after what the receiver should do, they have to be called after the thing that happened.",
      "range": {
        "startLine": 149,
        "startChar": 20,
        "endLine": 149,
        "endChar": 44
      },
      "revId": "df4cf7a93e0793017e520e535615fd831cdb5840",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1db5db70_5d12b146",
        "filename": "services/core/java/com/android/server/connectivity/tethering/EntitlementManager.java",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-04-10T14:34:33Z",
      "side": 1,
      "message": "Indeed, thanks your input.",
      "parentUuid": "86319fa4_9b56df63",
      "range": {
        "startLine": 149,
        "startChar": 20,
        "endLine": 149,
        "endChar": 44
      },
      "revId": "df4cf7a93e0793017e520e535615fd831cdb5840",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e493bc7_bdcf2253",
        "filename": "services/core/java/com/android/server/connectivity/tethering/EntitlementManager.java",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-04-11T02:07:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1db5db70_5d12b146",
      "range": {
        "startLine": 149,
        "startChar": 20,
        "endLine": 149,
        "endChar": 44
      },
      "revId": "df4cf7a93e0793017e520e535615fd831cdb5840",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41e49e30_bd0ed0b7",
        "filename": "services/core/java/com/android/server/connectivity/tethering/EntitlementManager.java",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-04-10T11:59:56Z",
      "side": 1,
      "message": "See, here the problem is apparent : you are calling this in many cases where it\u0027s not needed. I suggest this should be called onStartProvisioning (or onBeforeProvisioning in this case maybe, because it has to be done before provisioning starts ?) and only ever called when provisioning is actually started, not every time this function is called.",
      "range": {
        "startLine": 185,
        "startChar": 18,
        "endLine": 185,
        "endChar": 42
      },
      "revId": "df4cf7a93e0793017e520e535615fd831cdb5840",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43b11a34_19f2a371",
        "filename": "services/core/java/com/android/server/connectivity/tethering/EntitlementManager.java",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-04-10T14:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "41e49e30_bd0ed0b7",
      "range": {
        "startLine": 185,
        "startChar": 18,
        "endLine": 185,
        "endChar": 42
      },
      "revId": "df4cf7a93e0793017e520e535615fd831cdb5840",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea96d940_d99df62a",
        "filename": "services/core/java/com/android/server/connectivity/tethering/EntitlementManager.java",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-04-11T08:07:12Z",
      "side": 1,
      "message": "Not done ? This is still called regardless of whether provisioning will start.",
      "parentUuid": "43b11a34_19f2a371",
      "range": {
        "startLine": 185,
        "startChar": 18,
        "endLine": 185,
        "endChar": 42
      },
      "revId": "df4cf7a93e0793017e520e535615fd831cdb5840",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b819e392_582aada4",
        "filename": "services/core/java/com/android/server/connectivity/tethering/EntitlementManager.java",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-04-11T08:45:31Z",
      "side": 1,
      "message": "The real purpose of this is re-examine subId because subId change intent may be losing and may be delay. Thus, we don\u0027t know whether we are base on correct subId. Maybe provisioning would come from needed to don\u0027t needed after this callback and vice versa.\nI think we need to call this whatever provisioning is needed or not. And follow up your suggestion name \"onBeforeProvisioning\".",
      "parentUuid": "ea96d940_d99df62a",
      "range": {
        "startLine": 185,
        "startChar": 18,
        "endLine": 185,
        "endChar": 42
      },
      "revId": "df4cf7a93e0793017e520e535615fd831cdb5840",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8928de2_ee7c7d3d",
        "filename": "services/core/java/com/android/server/connectivity/tethering/EntitlementManager.java",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-04-12T04:41:29Z",
      "side": 1,
      "message": "\u003e The real purpose of this is re-examine subId because subId change intent may be losing and may be delay. Thus, we don\u0027t know whether we are base on correct subId. Maybe provisioning would come from needed to don\u0027t needed after this callback and vice versa.\n\nI don\u0027t think this is okay from a design stand point because it violates separation of responsibility. You can\u0027t have a callback that\u0027s driven by the receiving end. One of two things is true :\n\n➀ Either EntitlementManager is observing an event and needs to tell its clients about it so that they can react on stuff that happened.\n → In this case, this is a callback. The callback is named after what happened, and it\u0027s called when and only when that thing happens.\n • This is driven by EntitlementManager. The \"real purpose\" in such a design is really to let clients know about the event, because they need to know.\n • The callback should fire only when the event actually happens.\n • It\u0027s not fine to have a callback design if \"the real purpose is to re-examine subId\".\n\n➁ Or Tethering needs to re-examine the subIds regularly.\n → In this case, Tethering needs to own the lifecycle of this.\n • Tethering needs to drive those changes and know when it should re-examine the subId.\n • EntitlementManager can of course be a part of this workflow, but either it\u0027s in charge of deciding or it\u0027s not.\n\n\nIf I understand your code correctly, it looks to me like ➀ is correct, and the subId should be updated if and only if entitlement is *really* going to start. If that is true, then the current design and the current name are fine, but you need to not call this when it\u0027s not happening.\n\nWhat is driving this ? Specifically *WHY* is this a good time to re-examine the subId ?",
      "parentUuid": "b819e392_582aada4",
      "range": {
        "startLine": 185,
        "startChar": 18,
        "endLine": 185,
        "endChar": 42
      },
      "revId": "df4cf7a93e0793017e520e535615fd831cdb5840",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d751a1a_650fc72e",
        "filename": "services/core/java/com/android/server/connectivity/tethering/EntitlementManager.java",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-04-12T08:12:45Z",
      "side": 1,
      "message": "Per talk in VC, let us move this callback into isTetherProvisioningRequired() to avoid violating separation of responsibility. But this also let this callback trigger more frequently. Here is the data from my local test.\nHow many times callback would be called for each operation.\n1. enable tethering: 2 times\n2. Switch Default data subscription: 4 times\n3. SIM hotswap: 7 times\n4. disable tethering: 3 times\nThe looks acceptable. I will upload the change later.",
      "parentUuid": "e8928de2_ee7c7d3d",
      "range": {
        "startLine": 185,
        "startChar": 18,
        "endLine": 185,
        "endChar": 42
      },
      "revId": "df4cf7a93e0793017e520e535615fd831cdb5840",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}