{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "25b548a2_33dcc8e5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1176763
      },
      "writtenOn": "2024-01-22T09:37:38Z",
      "side": 1,
      "message": "Tested w/ Pixel 5a which sets the IO priority correctly given UID.",
      "revId": "16c09591abe1f982887b05d89e264f69316f383d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0f4c956_4289aa0e",
        "filename": "core/jni/android_util_Process.cpp",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1930620
      },
      "writtenOn": "2024-01-22T19:47:33Z",
      "side": 1,
      "message": "It\u0027s not explicitly stated, but reading b/320456702 makes me think we were trying to apply attributes where `pid` does not exist under `uid_0`, so this `setProcessGroup` was failing. Probably with \"Failed to write \u003cval\u003e to /sys/fs/cgroup/uid_0/pid_\u003cpid\u003e/io.weight\" type error logs? Is that correct?\n\nSuppose this `pid` dies before we get here, and the read fails. We return 0 knowing that the `SetProcesProfilesCached` call that follows will also fail since that 0 UID is not correct. Should we return -1 instead and fail earlier in `android_os_Process_setProcessGroup` in that case? It\u0027d be kinda non-obvious to tell what happened from a \"Failed to write...\" log if that\u0027s what was happening.",
      "revId": "16c09591abe1f982887b05d89e264f69316f383d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a56a09d3_87f94049",
        "filename": "core/jni/android_util_Process.cpp",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2024-01-22T21:34:34Z",
      "side": 1,
      "message": "No error message was logged because the write failure happened for optional cgroup attributes.\n\nPIDs increase linearly and are only reused after PIDs wrap around a certain limit so the risk of PIDs being reused is low.\n\nAnyway, the above comment has been addressed and -1 is returned if a UID lookup fails.",
      "parentUuid": "c0f4c956_4289aa0e",
      "revId": "16c09591abe1f982887b05d89e264f69316f383d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba86210b_bb232041",
        "filename": "core/jni/android_util_Process.cpp",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1930620
      },
      "writtenOn": "2024-01-22T22:17:36Z",
      "side": 1,
      "message": "Except `SetProcessProfilesCached` takes a `uid_t`, which is unsigned and this would result in a different, non-zero, still-incorrect UID for that call. So we need to check the return of `uid_from_pid` before passing as a `uid_t`.",
      "parentUuid": "a56a09d3_87f94049",
      "revId": "16c09591abe1f982887b05d89e264f69316f383d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8bb6d811_e88783d2",
        "filename": "core/jni/android_util_Process.cpp",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2024-01-22T22:27:19Z",
      "side": 1,
      "message": "Is this really necessary? There are other contexts in which -1 is passed to a uid_t argument type. See also https://www.man7.org/linux/man-pages/man2/setreuid.2.html.",
      "parentUuid": "ba86210b_bb232041",
      "revId": "16c09591abe1f982887b05d89e264f69316f383d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd1134ac_9adf0f3e",
        "filename": "core/jni/android_util_Process.cpp",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2024-01-22T22:54:38Z",
      "side": 1,
      "message": "Treehugger reported a test failure if the error return value is changed from 0 into -1 so I have changed it back to 0.",
      "parentUuid": "8bb6d811_e88783d2",
      "revId": "16c09591abe1f982887b05d89e264f69316f383d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d21893f_4c224ef6",
        "filename": "core/jni/android_util_Process.cpp",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1930620
      },
      "writtenOn": "2024-01-23T00:27:29Z",
      "side": 1,
      "message": "I see build failures, but not test failures. But it sounds like it might be the type of error I\u0027m talking about. Trying to assign a negative UID to `uid_t` results in a large positive number like this in the absence of sign checks:\n```\nActivityManager: Force stopping com.android.cts.install.lib.testapp.A appid\u003d10109 user\u003d-1: deletePackageX\nlibprocessgroup: No such cgroup attribute: /sys/fs/cgroup/uid_4294877405/cgroup.freeze\n```\nUnfortunately the compiler doesn\u0027t currently warn about these, even though it could. A negative value should never be passed into a `uid_t`. If you know of places where that\u0027s done for this library, please point me to them so they can be fixed.",
      "parentUuid": "dd1134ac_9adf0f3e",
      "revId": "16c09591abe1f982887b05d89e264f69316f383d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}