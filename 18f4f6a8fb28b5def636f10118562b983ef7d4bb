{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "230a749a_aec0f756",
        "filename": "media/java/android/media/MediaCodec.java",
        "patchSetId": 2
      },
      "lineNbr": 4770,
      "author": {
        "id": 1018606
      },
      "writtenOn": "2023-12-11T23:56:28Z",
      "side": 1,
      "message": "byte array meaning 8-bit signed integers?",
      "revId": "18f4f6a8fb28b5def636f10118562b983ef7d4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72b16376_2a639842",
        "filename": "media/java/android/media/MediaCodec.java",
        "patchSetId": 2
      },
      "lineNbr": 4770,
      "author": {
        "id": 1392607
      },
      "writtenOn": "2023-12-12T01:19:32Z",
      "side": 1,
      "message": "Yes. We\u0027ll support both positive and negative values.",
      "parentUuid": "230a749a_aec0f756",
      "revId": "18f4f6a8fb28b5def636f10118562b983ef7d4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69d41a5d_65cf3be6",
        "filename": "media/java/android/media/MediaCodec.java",
        "patchSetId": 2
      },
      "lineNbr": 4770,
      "author": {
        "id": 1150374
      },
      "writtenOn": "2024-02-03T01:05:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "72b16376_2a639842",
      "revId": "18f4f6a8fb28b5def636f10118562b983ef7d4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dac6785_e060c019",
        "filename": "media/java/android/media/MediaCodec.java",
        "patchSetId": 2
      },
      "lineNbr": 4777,
      "author": {
        "id": 1018606
      },
      "writtenOn": "2023-12-11T23:56:28Z",
      "side": 1,
      "message": "I suppose the range could be different for different coding standards. Do we know if 8-bit signed integer is sufficient for current \u0026 future use cases?",
      "range": {
        "startLine": 4777,
        "startChar": 72,
        "endLine": 4777,
        "endChar": 82
      },
      "revId": "18f4f6a8fb28b5def636f10118562b983ef7d4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a047a7e_2974ee5e",
        "filename": "media/java/android/media/MediaCodec.java",
        "patchSetId": 2
      },
      "lineNbr": 4777,
      "author": {
        "id": 1392607
      },
      "writtenOn": "2023-12-12T01:19:32Z",
      "side": 1,
      "message": "Currently ROI is only available for AVC and HEVC, and QP range for both are the same [0, 51], so it\u0027s sufficient now.\n\nThinking about future codecs, AV1 QP range is [0, 255], we will have some solution eg use two bytes to present one 16x16 block, or define some ladder for the configuration, and the configuration is still being passed through byte array, and it\u0027s out of scope of this change.\n\nCurrent solution, I\u0027d prefer noting downing [-51, 51] range is for AVC and HEVC here.",
      "parentUuid": "8dac6785_e060c019",
      "range": {
        "startLine": 4777,
        "startChar": 72,
        "endLine": 4777,
        "endChar": 82
      },
      "revId": "18f4f6a8fb28b5def636f10118562b983ef7d4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8efcdef6_95c82354",
        "filename": "media/java/android/media/MediaCodec.java",
        "patchSetId": 2
      },
      "lineNbr": 4777,
      "author": {
        "id": 1150374
      },
      "writtenOn": "2023-12-12T15:09:11Z",
      "side": 1,
      "message": "Instead of mentioning [-51, 51] i am using byte limits. This will be standard agnostic and also bit depth independent. Because in hbd encoding, the qp range exceeds 0-51.",
      "parentUuid": "8a047a7e_2974ee5e",
      "range": {
        "startLine": 4777,
        "startChar": 72,
        "endLine": 4777,
        "endChar": 82
      },
      "revId": "18f4f6a8fb28b5def636f10118562b983ef7d4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "819651a3_418e2d4e",
        "filename": "media/java/android/media/MediaCodec.java",
        "patchSetId": 2
      },
      "lineNbr": 4777,
      "author": {
        "id": 1392607
      },
      "writtenOn": "2023-12-12T18:00:10Z",
      "side": 1,
      "message": "I think it\u0027s good to mention here that for 8-bit AVC and HEVC encoding, if this configuration exceeds [-51, 51] range an exception will be raised.",
      "parentUuid": "8efcdef6_95c82354",
      "range": {
        "startLine": 4777,
        "startChar": 72,
        "endLine": 4777,
        "endChar": 82
      },
      "revId": "18f4f6a8fb28b5def636f10118562b983ef7d4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c69e27a_66e4450c",
        "filename": "media/java/android/media/MediaCodec.java",
        "patchSetId": 2
      },
      "lineNbr": 4777,
      "author": {
        "id": 1150374
      },
      "writtenOn": "2024-02-03T01:05:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "819651a3_418e2d4e",
      "range": {
        "startLine": 4777,
        "startChar": 72,
        "endLine": 4777,
        "endChar": 82
      },
      "revId": "18f4f6a8fb28b5def636f10118562b983ef7d4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b87b3bb_792b67ce",
        "filename": "media/java/android/media/MediaCodec.java",
        "patchSetId": 2
      },
      "lineNbr": 4792,
      "author": {
        "id": 1018606
      },
      "writtenOn": "2023-12-11T23:56:28Z",
      "side": 1,
      "message": "need @FlaggedApi annotation",
      "range": {
        "startLine": 4792,
        "startChar": 15,
        "endLine": 4792,
        "endChar": 16
      },
      "revId": "18f4f6a8fb28b5def636f10118562b983ef7d4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eea2e30d_96683d86",
        "filename": "media/java/android/media/MediaCodec.java",
        "patchSetId": 2
      },
      "lineNbr": 4792,
      "author": {
        "id": 1150374
      },
      "writtenOn": "2024-02-03T01:05:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7b87b3bb_792b67ce",
      "range": {
        "startLine": 4792,
        "startChar": 15,
        "endLine": 4792,
        "endChar": 16
      },
      "revId": "18f4f6a8fb28b5def636f10118562b983ef7d4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a50cfe19_87a4d726",
        "filename": "media/java/android/media/MediaCodec.java",
        "patchSetId": 2
      },
      "lineNbr": 4797,
      "author": {
        "id": 1018606
      },
      "writtenOn": "2023-12-11T23:56:28Z",
      "side": 1,
      "message": "Let\u0027s discuss if we can do it without parsing strings. For example, we could define a data structure for the RoI rects:\n\n```java\nclass MediaFormat {\n    class RoiRect implements Parcelable {\n        Rect rect;\n        int qpOffset;\n        // Parcelable implementation to be used with Bundle.putParcelableArray()\n    }\n    public void setRoiRects(RoiRect[] rects);\n}\n```",
      "revId": "18f4f6a8fb28b5def636f10118562b983ef7d4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30f5e86f_8644ffd3",
        "filename": "media/java/android/media/MediaCodec.java",
        "patchSetId": 2
      },
      "lineNbr": 4797,
      "author": {
        "id": 1392607
      },
      "writtenOn": "2023-12-12T01:19:32Z",
      "side": 1,
      "message": "Yes I agree this is better. Reason I use String in my original design is that I want to take advantage of existing String related methods for block model setStringParameters etc, and looks like parsing a object parameter is not supported there. I.e. We\u0027ll add a `setObjectParameter()` in `MediaCodec.QueueRequest` and parse the parameter down to C2.\n\nFor byte buffer we can use `Bundle.putObject()`.\n\nHi Ram, could you please estimate addition code change needed there? Thanks!",
      "parentUuid": "a50cfe19_87a4d726",
      "revId": "18f4f6a8fb28b5def636f10118562b983ef7d4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c146c99_d1a4b0ee",
        "filename": "media/java/android/media/MediaCodec.java",
        "patchSetId": 2
      },
      "lineNbr": 4797,
      "author": {
        "id": 1546599
      },
      "writtenOn": "2024-02-12T20:56:02Z",
      "side": 1,
      "message": "As discussed with Lajos and Dichen, will keep this as a string for now.",
      "parentUuid": "30f5e86f_8644ffd3",
      "revId": "18f4f6a8fb28b5def636f10118562b983ef7d4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d2a56b9_37cb3d70",
        "filename": "media/java/android/media/MediaCodec.java",
        "patchSetId": 2
      },
      "lineNbr": 4813,
      "author": {
        "id": 1018606
      },
      "writtenOn": "2023-12-11T23:56:28Z",
      "side": 1,
      "message": "out of curiosity --- what is supposed to happen if the rects overlap?",
      "revId": "18f4f6a8fb28b5def636f10118562b983ef7d4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5c0fcad_72f7364e",
        "filename": "media/java/android/media/MediaCodec.java",
        "patchSetId": 2
      },
      "lineNbr": 4813,
      "author": {
        "id": 1392607
      },
      "writtenOn": "2023-12-12T01:19:32Z",
      "side": 1,
      "message": "The latter wins. I think it was mentioned in other CL. Hi Ram, could you add it here? Thanks!",
      "parentUuid": "2d2a56b9_37cb3d70",
      "revId": "18f4f6a8fb28b5def636f10118562b983ef7d4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba8bc9d2_d4ac8804",
        "filename": "media/java/android/media/MediaCodec.java",
        "patchSetId": 2
      },
      "lineNbr": 4813,
      "author": {
        "id": 1150374
      },
      "writtenOn": "2024-02-03T01:05:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5c0fcad_72f7364e",
      "revId": "18f4f6a8fb28b5def636f10118562b983ef7d4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}