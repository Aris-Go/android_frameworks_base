{
  "comments": [
    {
      "key": {
        "uuid": "4bfc4aca_213f8e12",
        "filename": "services/core/java/com/android/server/wm/TaskSnapshotPersister.java",
        "patchSetId": 7
      },
      "lineNbr": 221,
      "author": {
        "id": 1010211
      },
      "writtenOn": "2020-05-15T04:12:12Z",
      "side": 0,
      "message": "Sorry, just to check back here -- it should be fine to mkdirs now that we check if the user is ready first right?  I wouldn\u0027t be surprised if this dir changes later so having it create the full path seems like the right thing as long as we\u0027re able to do it",
      "range": {
        "startLine": 221,
        "startChar": 35,
        "endLine": 221,
        "endChar": 41
      },
      "revId": "6bf3920e7d35414792569c0d87df83fefdf6526f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55b86bf8_5c63b235",
        "filename": "services/core/java/com/android/server/wm/TaskSnapshotPersister.java",
        "patchSetId": 7
      },
      "lineNbr": 221,
      "author": {
        "id": 1060907
      },
      "writtenOn": "2020-05-15T15:31:13Z",
      "side": 0,
      "message": "Right now my preference would be to mkdir over mkdirs; this class of bug is really hard to catch and track down, and until we have everything locked down with SELinux I\u0027d rather processes were careful about what directories they create. It\u0027s not hard to change back if it turns out to be necessary later.",
      "parentUuid": "4bfc4aca_213f8e12",
      "range": {
        "startLine": 221,
        "startChar": 35,
        "endLine": 221,
        "endChar": 41
      },
      "revId": "6bf3920e7d35414792569c0d87df83fefdf6526f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa85e6de_e9aba4a7",
        "filename": "services/core/java/com/android/server/wm/TaskSnapshotPersister.java",
        "patchSetId": 7
      },
      "lineNbr": 221,
      "author": {
        "id": 1010211
      },
      "writtenOn": "2020-05-15T16:03:35Z",
      "side": 0,
      "message": "Ok, yeah we can go with this for now -- it feels like maybe there could be something in the kernel which could throw with a full stack trace on creating a directory for a user that\u0027s not unlocked, otherwise as you mentioned it\u0027s pretty much up to each caller to make sure they are doing the right thing which is a bit fragile",
      "parentUuid": "55b86bf8_5c63b235",
      "range": {
        "startLine": 221,
        "startChar": 35,
        "endLine": 221,
        "endChar": 41
      },
      "revId": "6bf3920e7d35414792569c0d87df83fefdf6526f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a9a0f07_c75cb88a",
        "filename": "services/core/java/com/android/server/wm/TaskSnapshotPersister.java",
        "patchSetId": 7
      },
      "lineNbr": 221,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2020-05-15T18:30:48Z",
      "side": 0,
      "message": "The kernel can\u0027t help because it just sees that userspace made an unencrypted directory.  The kernel doesn\u0027t know that the directory is supposed to be encrypted.  Instead, we should do all of (1) this fix to address this specific case, (2) add SELinux rules that limit creating these directories, and (3) make StorageManagerService stop ignoring errors when preparing the user\u0027s storage.",
      "parentUuid": "fa85e6de_e9aba4a7",
      "range": {
        "startLine": 221,
        "startChar": 35,
        "endLine": 221,
        "endChar": 41
      },
      "revId": "6bf3920e7d35414792569c0d87df83fefdf6526f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}