{
  "comments": [
    {
      "key": {
        "uuid": "1d6b1bc8_09865165",
        "filename": "tools/hiddenapi/merge_csv.py",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1010681
      },
      "writtenOn": "2020-01-21T07:52:46Z",
      "side": 1,
      "message": "should probably error out here if it doesn\u0027t exist?",
      "range": {
        "startLine": 38,
        "startChar": 4,
        "endLine": 38,
        "endChar": 28
      },
      "revId": "19b163a577018f2d938da6cd032272b6b1ebbfc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6df2f345_e09da580",
        "filename": "tools/hiddenapi/merge_csv.py",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1061164
      },
      "writtenOn": "2020-01-21T12:39:44Z",
      "side": 1,
      "message": "This is where I am struggling right now.. Soong doesn\u0027t (at the moment at least) support getting generated files from annotation processors. So, I can\u0027t pass generated .csv files directly. Instead, I am passing a directory where generated files would go (with SOURCE_OUTPUT), and trying to find and csv files there. Now, in sharded mode, not every shard would generate a csv file, but I can\u0027t filter those dirs on soong side...\n\nI pinged Soong team, maybe they have better suggestions.",
      "parentUuid": "1d6b1bc8_09865165",
      "range": {
        "startLine": 38,
        "startChar": 4,
        "endLine": 38,
        "endChar": 28
      },
      "revId": "19b163a577018f2d938da6cd032272b6b1ebbfc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19afaa63_f8ef2b4f",
        "filename": "tools/hiddenapi/merge_csv.py",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1010681
      },
      "writtenOn": "2020-01-22T08:02:21Z",
      "side": 1,
      "message": "Ok, makes sense. But we should fail in the case that we *don\u0027t* pass a directory in?\n\nI also feel like we should complain if we pass args.csv_name but then all of `files` are regular files not directories?\n\nBasically I don\u0027t want be break the old case where we just pass a filename in directly, but that file does not exist.",
      "parentUuid": "6df2f345_e09da580",
      "range": {
        "startLine": 38,
        "startChar": 4,
        "endLine": 38,
        "endChar": 28
      },
      "revId": "19b163a577018f2d938da6cd032272b6b1ebbfc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ccd71a2_a2e3d7cc",
        "filename": "tools/hiddenapi/merge_csv.py",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1010681
      },
      "writtenOn": "2020-01-21T07:52:46Z",
      "side": 1,
      "message": "Better to raise?",
      "range": {
        "startLine": 47,
        "startChar": 4,
        "endLine": 47,
        "endChar": 10
      },
      "revId": "19b163a577018f2d938da6cd032272b6b1ebbfc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c273915e_126dec3f",
        "filename": "tools/hiddenapi/merge_csv.py",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1061164
      },
      "writtenOn": "2020-01-21T12:39:44Z",
      "side": 1,
      "message": "Assert raises AssertionError already?",
      "parentUuid": "9ccd71a2_a2e3d7cc",
      "range": {
        "startLine": 47,
        "startChar": 4,
        "endLine": 47,
        "endChar": 10
      },
      "revId": "19b163a577018f2d938da6cd032272b6b1ebbfc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8254cbb_bcd2c3f7",
        "filename": "tools/hiddenapi/merge_csv.py",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1010681
      },
      "writtenOn": "2020-01-22T08:02:21Z",
      "side": 1,
      "message": "The python style guide says:\n\"Do not use assert statements for validating argument values of a public API. assert is used to ensure internal correctness, not to enforce correct usage nor to indicate that some unexpected event occurred.\"\nhttps://engdoc.corp.google.com/eng/doc/devguide/py/style/index.md?cl\u003dhead\n\nNot that this necessarily applies here, but seems good to stick to it?",
      "parentUuid": "c273915e_126dec3f",
      "range": {
        "startLine": 47,
        "startChar": 4,
        "endLine": 47,
        "endChar": 10
      },
      "revId": "19b163a577018f2d938da6cd032272b6b1ebbfc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}