{
  "comments": [
    {
      "key": {
        "uuid": "0dd372c3_83264f54",
        "filename": "core/java/android/net/NetworkCapabilities.java",
        "patchSetId": 2
      },
      "lineNbr": 419,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2020-03-12T09:00:07Z",
      "side": 1,
      "message": "Let\u0027s make this an allowed list instead. That way, whenever we add a new capability, we don\u0027t need to remember to add it to this list. With the code as is, we could create a security vulnerability if we add a new NET_CAPABILITY_SUPER_USEFUL and forget to add that to this list.",
      "range": {
        "startLine": 419,
        "startChar": 30,
        "endLine": 419,
        "endChar": 67
      },
      "revId": "cc02e14597398640011e1f3d669efa1d211dac47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cb266f0_0610878e",
        "filename": "core/java/android/net/NetworkCapabilities.java",
        "patchSetId": 2
      },
      "lineNbr": 419,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2020-03-13T11:44:40Z",
      "side": 1,
      "message": "Makes a lot of sense. Done.",
      "parentUuid": "0dd372c3_83264f54",
      "range": {
        "startLine": 419,
        "startChar": 30,
        "endLine": 419,
        "endChar": 67
      },
      "revId": "cc02e14597398640011e1f3d669efa1d211dac47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a03ba46_9897d5bb",
        "filename": "core/java/android/net/NetworkCapabilities.java",
        "patchSetId": 2
      },
      "lineNbr": 674,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2020-03-12T09:00:07Z",
      "side": 1,
      "message": "Should this be \"\u003d TRANSPORT_TEST\" instead? We don\u0027t want to allow a NetworkAgent to do something like TRANSPORT_TEST|TRANSPORT_WIFI and have NetworkRequests for TRANSPORT_WIFI match that agent, do we?\n\nAlso: for now, should we disallow setting other things that may not be necessary, such as signalStrength, UIDs and so on? In fact, should we start off with something paranoid such as:\n\n    // Ensures that this object only has the fields that are currently used in tests.\n    final int caps \u003d mNetworkCapabilities;\n    final NetworkSpecifier specifier \u003d mNetworkSpecifier;\n    clear();\n    mTransportTypes \u003d TRANSPORT_TEST;\n    mNetworkCapabilities \u003d caps \u0026 TEST_NETWORKS_ALLOWED_CAPABILITIES;\n    mNetworkSpecifier \u003d specifier;\n\n?",
      "range": {
        "startLine": 674,
        "startChar": 24,
        "endLine": 674,
        "endChar": 45
      },
      "revId": "cc02e14597398640011e1f3d669efa1d211dac47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "322c11ff_d781bd16",
        "filename": "core/java/android/net/NetworkCapabilities.java",
        "patchSetId": 2
      },
      "lineNbr": 674,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2020-03-13T11:44:40Z",
      "side": 1,
      "message": "I think you\u0027re misreading this code as adding the test transport. It is an assignment, but mTransportTypes is a bitmask, so \u003d 1 \u003c\u003c TRANSPORT_TEST is the correct way to assign it to only have TRANSPORT_TEST. Added braces and a comment to make this more obvious.\n\nAs for clearing most of it I think it\u0027s indeed safer, and we can change this code if we ever need to set other attributes. Changed the implementation to follow your suggestion.",
      "parentUuid": "3a03ba46_9897d5bb",
      "range": {
        "startLine": 674,
        "startChar": 24,
        "endLine": 674,
        "endChar": 45
      },
      "revId": "cc02e14597398640011e1f3d669efa1d211dac47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41c102fc_36c6c5bf",
        "filename": "services/core/java/com/android/server/ConnectivityService.java",
        "patchSetId": 2
      },
      "lineNbr": 5810,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2020-03-12T09:00:07Z",
      "side": 1,
      "message": "Do you need to do this, given the call to mixInCapabilities at line 5825?  If you\u0027re doing this just for readability reasons, then I think you can just use a comment such as:\n\n    // No need to restrict capabilities here, as that will be done by the call to\n    // mixInCapabilities a few lines below.",
      "range": {
        "startLine": 5810,
        "startChar": 12,
        "endLine": 5810,
        "endChar": 68
      },
      "revId": "cc02e14597398640011e1f3d669efa1d211dac47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fce5bd02_6ac9c502",
        "filename": "services/core/java/com/android/server/ConnectivityService.java",
        "patchSetId": 2
      },
      "lineNbr": 5810,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2020-03-13T11:44:40Z",
      "side": 1,
      "message": "Ah, really it\u0027s an artefact of a transitory state of the code, where the code was a little bit less hardened around the transport and I needed to make sure the very first capabilities set in l.5821 were sanitized for l.5825 to have the correct result in all cases.\n\nI don\u0027t think the current code would allow for such an issue to happen any longer, but removing this means we rely on mixInCapabilities to never trust the capabilities in the NAI for any side effect, because on the call from l.5825 it will see whatever the (possibly malicious) caller sent. Considering this is never performance-sensitive, I think I prefer to keep it, with a comment for why it\u0027s written that way. Let me know what you think.",
      "parentUuid": "41c102fc_36c6c5bf",
      "range": {
        "startLine": 5810,
        "startChar": 12,
        "endLine": 5810,
        "endChar": 68
      },
      "revId": "cc02e14597398640011e1f3d669efa1d211dac47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}