{
  "comments": [
    {
      "key": {
        "uuid": "bdd97277_131f0108",
        "filename": "services/core/java/com/android/server/connectivity/tethering/TetheringConfiguration.java",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-08-23T06:03:54Z",
      "side": 1,
      "message": "I know you want to keep use legacy one first. Could you add the control flag (maybe reference DhcpServer which is control by settings at line.334~337) ? It would be helpful for local testing.\n\ne.g.\n    private static boolean getEnableLegacyDnsProxyServer(Context ctx) {\n        final ContentResolver cr \u003d ctx.getContentResolver();\n        // Default enable legacy dns proxy server.\n        final int intVal \u003d Settings.Global.getInt(cr, TETHER_ENABLE_LEGACY_DNSP_ROXY_SERVER, 1);\n        return intVal !\u003d 0;\n    }",
      "range": {
        "startLine": 340,
        "startChar": 8,
        "endLine": 340,
        "endChar": 20
      },
      "revId": "6e1b6d28f8788db8e46ab81afd0903f5ff741992",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a6e3d57_107d13af",
        "filename": "services/core/java/com/android/server/connectivity/tethering/TetheringConfiguration.java",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1337176
      },
      "writtenOn": "2019-08-23T06:45:29Z",
      "side": 1,
      "message": "DeviceConfig version in ag/9242558\nHowever, DeviceConfig is not available here, just add interface for now",
      "parentUuid": "bdd97277_131f0108",
      "range": {
        "startLine": 340,
        "startChar": 8,
        "endLine": 340,
        "endChar": 20
      },
      "revId": "6e1b6d28f8788db8e46ab81afd0903f5ff741992",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b5b4eff_27552499",
        "filename": "services/core/java/com/android/server/connectivity/tethering/TetheringConfiguration.java",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1015428
      },
      "writtenOn": "2019-08-30T12:48:22Z",
      "side": 1,
      "message": "You should be able to use NetworkStackUtils.getDeviceConfigProperty right now, and it will work without you having to come back here when it\u0027s available.",
      "parentUuid": "4a6e3d57_107d13af",
      "range": {
        "startLine": 340,
        "startChar": 8,
        "endLine": 340,
        "endChar": 20
      },
      "revId": "6e1b6d28f8788db8e46ab81afd0903f5ff741992",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4058e0c7_349d27bd",
        "filename": "services/core/java/com/android/server/connectivity/tethering/TetheringConfiguration.java",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1288034
      },
      "writtenOn": "2019-09-02T03:38:28Z",
      "side": 1,
      "message": "Also no boolean flags should be pushed from the server, only int flags to compare with the module\u0027s version (so flags value X means \"enable this feature for module version \u003e\u003d X\").\n\nThis is important to ensure that when modules get rolled back, the features don\u0027t remain enabled on a version where they haven\u0027t been tested properly.\n\nXiao is working on this (probably including some utilities to check the flag values properly), so maybe you can see together with him ?",
      "parentUuid": "3b5b4eff_27552499",
      "range": {
        "startLine": 340,
        "startChar": 8,
        "endLine": 340,
        "endChar": 20
      },
      "revId": "6e1b6d28f8788db8e46ab81afd0903f5ff741992",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2a3a589_efbe6eee",
        "filename": "services/core/java/com/android/server/connectivity/tethering/TetheringConfiguration.java",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1337176
      },
      "writtenOn": "2019-09-03T12:09:46Z",
      "side": 1,
      "message": "\u003e You should be able to use NetworkStackUtils.getDev\n\nNot sure I understand correctly, we don\u0027t build NetworkStackUtils here, right?\n\u003e Also no boolean flags should be pushed from the server ...\n    Sounds a good approach, I will update it in ag/9242558 since no DeviceConfig here.",
      "parentUuid": "4058e0c7_349d27bd",
      "range": {
        "startLine": 340,
        "startChar": 8,
        "endLine": 340,
        "endChar": 20
      },
      "revId": "6e1b6d28f8788db8e46ab81afd0903f5ff741992",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ecadffb_d0d06c8b",
        "filename": "services/core/java/com/android/server/connectivity/tethering/TetheringConfiguration.java",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1337176
      },
      "writtenOn": "2019-09-09T03:30:54Z",
      "side": 1,
      "message": "I re-think this problem. \nYeah, we prababaly don\u0027t need DeviceFlags to control this feature.\nThis feature is for Android R, it might be tested in R devices first.\nHow can R dogfood users get the mainline update? Is there any specific process of mainline for R dogfood updating?\nOr they will just get the update by rom updating?\n\nLooks like having a version control is not useful in this case.\nAnyway, I think we could just merge this. Once we decide to enable new DnsProxy, we could refine the control mechanism.",
      "parentUuid": "e2a3a589_efbe6eee",
      "range": {
        "startLine": 340,
        "startChar": 8,
        "endLine": 340,
        "endChar": 20
      },
      "revId": "6e1b6d28f8788db8e46ab81afd0903f5ff741992",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eea5e050_737221c2",
        "filename": "services/core/java/com/android/server/connectivity/tethering/TetheringConfiguration.java",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1288034
      },
      "writtenOn": "2019-09-09T04:44:39Z",
      "side": 1,
      "message": "Right now the latest plan is to have the APK in the system image for R builds; so basically R builds get the latest version of what you merge here.\nIt\u0027s true that because this feature would only be used on R, you can ship it as any platform feature, without a flag rollout. But this is only because you happen to implement it early in R cycle, so you know that with a flag rollout it would 100% well before R is released anyway.\nI\u0027d still encourage having a flag for the feature because:\n - This would be consistent with development practices at other points in the development cycle\n - This will allow A/B testing at least on dogfood images, so you can measure impact of the feature - assuming you have metrics you\u0027d like to verify.",
      "parentUuid": "1ecadffb_d0d06c8b",
      "range": {
        "startLine": 340,
        "startChar": 8,
        "endLine": 340,
        "endChar": 20
      },
      "revId": "6e1b6d28f8788db8e46ab81afd0903f5ff741992",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}