{
  "comments": [
    {
      "key": {
        "uuid": "13087606_d6747339",
        "filename": "core/java/android/view/LayoutInflater.java",
        "patchSetId": 9
      },
      "lineNbr": 393,
      "author": {
        "id": 1044446
      },
      "writtenOn": "2019-01-11T20:41:46Z",
      "side": 1,
      "message": "Line wrap (or just import the SystemProperties class).",
      "range": {
        "startLine": 393,
        "startChar": 0,
        "endLine": 393,
        "endChar": 102
      },
      "revId": "7dcd489e33ac3fd3428adee4998e0fef25f47775",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3941f2b_3e2c7d1c",
        "filename": "core/java/android/view/LayoutInflater.java",
        "patchSetId": 9
      },
      "lineNbr": 472,
      "author": {
        "id": 1044446
      },
      "writtenOn": "2019-01-11T20:41:46Z",
      "side": 1,
      "message": "This code path appears to ignore the root and attachToRoot arguments, which is going to be problematic in most cases.",
      "range": {
        "startLine": 468,
        "startChar": 0,
        "endLine": 472,
        "endChar": 0
      },
      "revId": "7dcd489e33ac3fd3428adee4998e0fef25f47775",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "440c388a_9a7069b6",
        "filename": "core/java/android/view/LayoutInflater.java",
        "patchSetId": 9
      },
      "lineNbr": 493,
      "author": {
        "id": 1044446
      },
      "writtenOn": "2019-01-11T20:41:46Z",
      "side": 1,
      "message": "I saw this was already called out, but I\u0027m calling it out again. We shouldn\u0027t be using exceptions for normal control flow.",
      "range": {
        "startLine": 493,
        "startChar": 12,
        "endLine": 493,
        "endChar": 88
      },
      "revId": "7dcd489e33ac3fd3428adee4998e0fef25f47775",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84ad0388_1b333f85",
        "filename": "core/java/android/view/LayoutInflater.java",
        "patchSetId": 9
      },
      "lineNbr": 493,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2019-01-11T21:12:25Z",
      "side": 1,
      "message": "Worth adding null check for mPrecompiledClassLoader? I think that would handle the normal control flow case since it should not commonly get exceptions if mPrecompiledClassLoader is not null.",
      "range": {
        "startLine": 493,
        "startChar": 26,
        "endLine": 493,
        "endChar": 49
      },
      "revId": "7dcd489e33ac3fd3428adee4998e0fef25f47775",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c64f5061_6c049a6a",
        "filename": "core/java/android/view/LayoutInflater.java",
        "patchSetId": 9
      },
      "lineNbr": 493,
      "author": {
        "id": 1044446
      },
      "writtenOn": "2019-01-11T22:27:39Z",
      "side": 1,
      "message": "I\u0027m thinking more along the lines of loadClass throwing a ClassNotFoundException. Unless every possible resource package we\u0027re going to encounter already has a CompiledView ahead of time?",
      "parentUuid": "84ad0388_1b333f85",
      "range": {
        "startLine": 493,
        "startChar": 26,
        "endLine": 493,
        "endChar": 49
      },
      "revId": "7dcd489e33ac3fd3428adee4998e0fef25f47775",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3c626fa_16b94674",
        "filename": "core/java/android/view/LayoutInflater.java",
        "patchSetId": 9
      },
      "lineNbr": 493,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2019-01-11T22:32:28Z",
      "side": 1,
      "message": "Unfortunately, as far as I know, the only way to test if a class exists is to try to load it and catch the ClassNotFound exception if it doesn\u0027t exist. However, we only create this class loader if the compiled_view.dex file exists, and if it does it should be generated by us and therefore we know it has a CompiledView class in it. So I think we\u0027re about as good as we can do on loadClass.\n\nFor the getMethod call below, I am planning to fix this by generating a method in CompiledView that returns whether we can inflate the view. If that method returns true, then the getMethod call should succeed, and otherwise we won\u0027t call it.",
      "parentUuid": "c64f5061_6c049a6a",
      "range": {
        "startLine": 493,
        "startChar": 26,
        "endLine": 493,
        "endChar": 49
      },
      "revId": "7dcd489e33ac3fd3428adee4998e0fef25f47775",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e58140ee_0136b182",
        "filename": "core/java/android/view/LayoutInflater.java",
        "patchSetId": 9
      },
      "lineNbr": 494,
      "author": {
        "id": 1044446
      },
      "writtenOn": "2019-01-11T20:41:46Z",
      "side": 1,
      "message": "Remove TODO from code and file bug for it.",
      "range": {
        "startLine": 494,
        "startChar": 0,
        "endLine": 494,
        "endChar": 38
      },
      "revId": "7dcd489e33ac3fd3428adee4998e0fef25f47775",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60b65d1d_85af68b4",
        "filename": "core/java/android/view/LayoutInflater.java",
        "patchSetId": 9
      },
      "lineNbr": 1063,
      "author": {
        "id": 1044446
      },
      "writtenOn": "2019-01-11T20:41:46Z",
      "side": 1,
      "message": "Wrap with try { ... } and make sure to close the parser in finally { ... } block.",
      "range": {
        "startLine": 1059,
        "startChar": 12,
        "endLine": 1063,
        "endChar": 69
      },
      "revId": "7dcd489e33ac3fd3428adee4998e0fef25f47775",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}