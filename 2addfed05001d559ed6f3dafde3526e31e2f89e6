{
  "comments": [
    {
      "key": {
        "uuid": "2f6b9475_0f313ae2",
        "filename": "core/java/android/view/LayoutInflater.java",
        "patchSetId": 1
      },
      "lineNbr": 817,
      "author": {
        "id": 1060493
      },
      "writtenOn": "2018-12-14T19:22:56Z",
      "side": 1,
      "message": "You should prevent anyone from using any new hidden APIs with reflection. You may as well black list them immediately.",
      "range": {
        "startLine": 817,
        "startChar": 0,
        "endLine": 817,
        "endChar": 24
      },
      "revId": "2addfed05001d559ed6f3dafde3526e31e2f89e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "754dfd8c_f12b5c1d",
        "filename": "core/java/android/view/LayoutInflater.java",
        "patchSetId": 1
      },
      "lineNbr": 817,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2018-12-14T19:41:09Z",
      "side": 1,
      "message": "Good idea. I need to double check that that\u0027s feasible (actually, the way I have it now may not even work).\n\nWe still need to call this method from code the view compiler generates, but I think that might look like app code and not framework code. Also, if we eventually allow precompiled views to be built in to apps, then apps will need to be able to call this method directly.\n\nI\u0027ll investigate some more.",
      "parentUuid": "2f6b9475_0f313ae2",
      "range": {
        "startLine": 817,
        "startChar": 0,
        "endLine": 817,
        "endChar": 24
      },
      "revId": "2addfed05001d559ed6f3dafde3526e31e2f89e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d72bb95_29a9ab5f",
        "filename": "core/java/android/view/LayoutInflater.java",
        "patchSetId": 1
      },
      "lineNbr": 817,
      "author": {
        "id": 1060493
      },
      "writtenOn": "2018-12-14T19:58:43Z",
      "side": 1,
      "message": "If we want this to be accessible from a compiler, we must make this a public API. If it is on-device generated, I consider that ok hidden API.\n\nI thought only reflection would cause a call to be blocked. I didn\u0027t think it mattered which code was making the call. You\u0027re going to be making direct calls to this code. Is my understanding correct?",
      "parentUuid": "754dfd8c_f12b5c1d",
      "range": {
        "startLine": 817,
        "startChar": 0,
        "endLine": 817,
        "endChar": 24
      },
      "revId": "2addfed05001d559ed6f3dafde3526e31e2f89e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c467f1ca_dc7409b9",
        "filename": "core/java/android/view/LayoutInflater.java",
        "patchSetId": 1
      },
      "lineNbr": 817,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2018-12-14T23:05:51Z",
      "side": 1,
      "message": "I tried this out with these methods on the blacklist, and I got the following exception when trying to use a precompiled layout:\n\n    2018-12-14 14:54:10.417 3196-3196/com.example.eholk.myfirstapp W/holk.myfirstap: Accessing hidden method Landroid/view/LayoutInflater;-\u003etryCreateViewGroup(Landroid/view/View;Ljava/lang/String;Landroid/content/Context;Landroid/util/AttributeSet;)Landroid/view/ViewGroup; (blacklist, linking)\n\nSo it seems like the blacklist won\u0027t work, but I suspect that means the @UnsupportedAppUsage is the wrong choice.\n\nMaybe it\u0027s okay to make this a supported API? After all, people extending their LayoutInflater might want access to this too.\n\nI\u0027ll look around to see if there are any other options.",
      "parentUuid": "0d72bb95_29a9ab5f",
      "range": {
        "startLine": 817,
        "startChar": 0,
        "endLine": 817,
        "endChar": 24
      },
      "revId": "2addfed05001d559ed6f3dafde3526e31e2f89e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}