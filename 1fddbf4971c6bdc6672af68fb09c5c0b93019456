{
  "comments": [
    {
      "key": {
        "uuid": "8d314b48_97490ec0",
        "filename": "core/java/android/net/InetAddresses.java",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1103203
      },
      "writtenOn": "2018-11-01T14:08:45Z",
      "side": 1,
      "message": "Allowing both null and an empty string as an alias of each other seems like a poor choice for an API (perhaps \"localhost\" or similar will be another alias) because it reduces clarity for what states the application can be in / it can obscure problems.\n\nFrom an API perspective, perhaps it\u0027d be better to disallow either \"\" or null, or both?\n\n(Yes, I know that that\u0027s the behavior that the internal method implements, but having it in an API seems worse, and there\u0027s nothing stopping us implementing additional restrictions here even if we don\u0027t change the behavior of the delegate implementation).",
      "range": {
        "startLine": 37,
        "startChar": 68,
        "endLine": 37,
        "endChar": 91
      },
      "revId": "1fddbf4971c6bdc6672af68fb09c5c0b93019456",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69295566_c85f6526",
        "filename": "core/java/android/net/InetAddresses.java",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1039338
      },
      "writtenOn": "2018-11-01T15:19:37Z",
      "side": 1,
      "message": "localhost won\u0027t be an alias as this is for numeric addresses.\n\nI don\u0027t particularly see any issue with treating null and empty string the same or conversely, any particular advantage to treating them differently. Treating them differently to how the internal API works will just make it that little bit more difficult for developers to fix their Apps.",
      "parentUuid": "8d314b48_97490ec0",
      "range": {
        "startLine": 37,
        "startChar": 68,
        "endLine": 37,
        "endChar": 91
      },
      "revId": "1fddbf4971c6bdc6672af68fb09c5c0b93019456",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d7cf4b5_92608842",
        "filename": "core/java/android/net/InetAddresses.java",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1103203
      },
      "writtenOn": "2018-11-02T22:40:29Z",
      "side": 1,
      "message": "\u003e localhost won\u0027t be an alias as this is for numeric addresses.\n\nSo null / \"\" are aliases for \"127.0.0.1\" or \"::1\" (not documented which one)?\n\n\u003e Treating them differently to how the internal API works will just make it that little\n\u003e bit more difficult for developers to fix their Apps.\n\nNot necessarily. It depends on the relation between:\n\n(a) # of apps null / \"\" is an error condition where an exception is the *correct* thing to do\n\nand\n\n(b) # of apps that generally treat null / \"\" as aliases for the loopback address and want the current behavior\n\nIf (a) \u003e (b) (or even, I think, when (a) is not much smaller than (b)) then we\u0027d be *helping* app developers, not making things more difficult for them, because that would be the correct behavior for their apps.\n\nMy personal expectation of a method like this is that it throw NPE for null and IAE for \"\", so I would guess that (a) is indeed greater than (b). I haven\u0027t done an analysis so this is based purely on gut feeling - I just don\u0027t see why we would think that someone who gives us a null or \"\" was after the loopback address rather than an exception.\n\nIs there precedent for null and \"\" being regarded as aliases for the loopback address in any other public APIs? Alternatively, can we look at a couple of example apps and figure out which of the two behaviors (if they care at all) is correct for them?\n\nThat said, Lorenzo is the person reviewing this CL for API review, so I\u0027m also interested in his perspective.",
      "parentUuid": "69295566_c85f6526",
      "range": {
        "startLine": 37,
        "startChar": 68,
        "endLine": 37,
        "endChar": 91
      },
      "revId": "1fddbf4971c6bdc6672af68fb09c5c0b93019456",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ba4e3f8_79c8150b",
        "filename": "core/java/android/net/InetAddresses.java",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1039338
      },
      "writtenOn": "2018-11-14T15:08:03Z",
      "side": 1,
      "message": "\u003e So null / \"\" are aliases for \"127.0.0.1\" or \"::1\" (not documented which one)?\n\nIt is documented that it will return an instance of Inet6Address that represents the loopback address, i.e. ::1.\n\nI have added a comment on http://b/78686891 to see whether that caller depends on the behavior of this wrt null/\"\". I am not sure that it will help us much because even if they do not rely on that behavior that does not help us understand whether others may rely on it.\n\nI have had a quick look at the usages made of it internally and there are plenty of places where it seems to be passed \"\". I\u0027ve found paths through other public APIs that pass nulls through so it is possible that Apps rely on this behavior through those other APIs too.",
      "parentUuid": "4d7cf4b5_92608842",
      "range": {
        "startLine": 37,
        "startChar": 68,
        "endLine": 37,
        "endChar": 91
      },
      "revId": "1fddbf4971c6bdc6672af68fb09c5c0b93019456",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}