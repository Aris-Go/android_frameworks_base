{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cf6e5f28_07b8b867",
        "filename": "core/java/android/hardware/camera2/impl/CameraExtensionSessionImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 1255,
      "author": {
        "id": 1481938
      },
      "writtenOn": "2023-05-10T02:39:28Z",
      "side": 1,
      "message": "nite: Suggest to have the local lock to avoid possible risks of deadlock.",
      "range": {
        "startLine": 1255,
        "startChar": 0,
        "endLine": 1255,
        "endChar": 43
      },
      "revId": "56ae23d0bea010f4fe0a076996174940ca13463b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fd5740a_eee653b1",
        "filename": "core/java/android/hardware/camera2/impl/CameraExtensionSessionImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 1255,
      "author": {
        "id": 1141048
      },
      "writtenOn": "2023-05-11T00:41:07Z",
      "side": 1,
      "message": "The local lock is an option however the order with which we obtain multiple locks is starting to become a challenge so I opted to re-use the same lock that we utilize throughout the entire session stack.",
      "parentUuid": "cf6e5f28_07b8b867",
      "range": {
        "startLine": 1255,
        "startChar": 0,
        "endLine": 1255,
        "endChar": 43
      },
      "revId": "56ae23d0bea010f4fe0a076996174940ca13463b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d331eaa0_40aa0033",
        "filename": "core/java/android/hardware/camera2/impl/CameraExtensionSessionImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 1255,
      "author": {
        "id": 1481938
      },
      "writtenOn": "2023-05-11T08:34:03Z",
      "side": 1,
      "message": "ok that makes sense.",
      "parentUuid": "1fd5740a_eee653b1",
      "range": {
        "startLine": 1255,
        "startChar": 0,
        "endLine": 1255,
        "endChar": 43
      },
      "revId": "56ae23d0bea010f4fe0a076996174940ca13463b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ee42408_6adbb525",
        "filename": "core/java/android/hardware/camera2/impl/CameraExtensionSessionImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 1273,
      "author": {
        "id": 1481938
      },
      "writtenOn": "2023-05-10T02:39:28Z",
      "side": 1,
      "message": "Invoking listener inside the synchronized block could cause deadlock.  (because that listener will be running with the lock being held)\n\nIs it possible to run the listener outside of the synchronized block ?",
      "range": {
        "startLine": 1273,
        "startChar": 0,
        "endLine": 1273,
        "endChar": 67
      },
      "revId": "56ae23d0bea010f4fe0a076996174940ca13463b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5396baa0_fe685e78",
        "filename": "core/java/android/hardware/camera2/impl/CameraExtensionSessionImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 1273,
      "author": {
        "id": 1141048
      },
      "writtenOn": "2023-05-11T00:41:07Z",
      "side": 1,
      "message": "I generally agree that is not a good idea to hold a lock while calling a callback. However since we are synchronizing with \u0027release()\u0027 there is another aspect to consider. Releasing the lock can also invalidate any images the moment \u0027release()\u0027 has an opportunity to close the underlying image reader.\nAdditionally the callbacks that we use and register here do not interact with other locks (as far as I can tell).",
      "parentUuid": "9ee42408_6adbb525",
      "range": {
        "startLine": 1273,
        "startChar": 0,
        "endLine": 1273,
        "endChar": 67
      },
      "revId": "56ae23d0bea010f4fe0a076996174940ca13463b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3972875c_984688c2",
        "filename": "core/java/android/hardware/camera2/impl/CameraExtensionSessionImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 1273,
      "author": {
        "id": 1481938
      },
      "writtenOn": "2023-05-11T08:34:03Z",
      "side": 1,
      "message": "that\u0027s a good point. I am good with it.",
      "parentUuid": "5396baa0_fe685e78",
      "range": {
        "startLine": 1273,
        "startChar": 0,
        "endLine": 1273,
        "endChar": 67
      },
      "revId": "56ae23d0bea010f4fe0a076996174940ca13463b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "958b2607_13cc7eea",
        "filename": "core/java/android/hardware/camera2/impl/CameraExtensionSessionImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 1305,
      "author": {
        "id": 1481938
      },
      "writtenOn": "2023-05-11T08:36:52Z",
      "side": 1,
      "message": "nit: though this is invoked inside another synchronized method, but it is safer to also wrap it in syncrhonized block in case being invoke accidentally from other places in the future.",
      "range": {
        "startLine": 1287,
        "startChar": 0,
        "endLine": 1305,
        "endChar": 0
      },
      "revId": "56ae23d0bea010f4fe0a076996174940ca13463b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c9c1dcf_a92de7b0",
        "filename": "core/java/android/hardware/camera2/impl/CameraExtensionSessionImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 1313,
      "author": {
        "id": 1481938
      },
      "writtenOn": "2023-05-10T02:39:28Z",
      "side": 1,
      "message": "Same as above, \nInvoking listener inside the synchronized block could cause deadlock.  (because that listener will be running with the lock being held)\n\nIs it possible to run the listener outside of the synchronized block ?",
      "range": {
        "startLine": 1313,
        "startChar": 0,
        "endLine": 1313,
        "endChar": 77
      },
      "revId": "56ae23d0bea010f4fe0a076996174940ca13463b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6648f54_e1652fd4",
        "filename": "core/java/android/hardware/camera2/impl/CameraExtensionSessionImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 1340,
      "author": {
        "id": 1481938
      },
      "writtenOn": "2023-05-10T02:39:28Z",
      "side": 1,
      "message": "Same as above,  could we run the listener outside of the synchronized block ?",
      "range": {
        "startLine": 1340,
        "startChar": 0,
        "endLine": 1340,
        "endChar": 63
      },
      "revId": "56ae23d0bea010f4fe0a076996174940ca13463b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}