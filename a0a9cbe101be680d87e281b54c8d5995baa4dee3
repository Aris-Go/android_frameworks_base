{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "43f4e80e_79204488",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1146169
      },
      "writtenOn": "2023-11-30T16:31:13Z",
      "side": 1,
      "message": "The approach seems okay. I just think that the tracking of `vpnValidated` is maybe incorrect given the way that the network callbacks work",
      "revId": "a0a9cbe101be680d87e281b54c8d5995baa4dee3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3613eb3d_9631f985",
        "filename": "packages/SystemUI/res/drawable/stat_sys_no_internet_branded_vpn.xml",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1146169
      },
      "writtenOn": "2023-11-30T16:31:13Z",
      "side": 1,
      "message": "Nit: missing license",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 38
      },
      "revId": "a0a9cbe101be680d87e281b54c8d5995baa4dee3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17f23dae_1a530302",
        "filename": "packages/SystemUI/res/drawable/stat_sys_no_internet_branded_vpn.xml",
        "patchSetId": 2
      },
      "lineNbr": 2,
      "author": {
        "id": 1146169
      },
      "writtenOn": "2023-11-30T16:31:13Z",
      "side": 1,
      "message": "Do we have assets to define this resource and the one below?",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 2,
        "endChar": 9
      },
      "revId": "a0a9cbe101be680d87e281b54c8d5995baa4dee3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b41e1f79_e9c615e4",
        "filename": "packages/SystemUI/src/com/android/systemui/statusbar/policy/SecurityControllerImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 311,
      "author": {
        "id": 1146169
      },
      "writtenOn": "2023-11-30T16:31:13Z",
      "side": 1,
      "message": "Does this value also need to be stored in a map or SparseArray similar to how the `isVpnBranded` is done?",
      "range": {
        "startLine": 311,
        "startChar": 19,
        "endLine": 311,
        "endChar": 33
      },
      "revId": "a0a9cbe101be680d87e281b54c8d5995baa4dee3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "801414b1_f5c6de1c",
        "filename": "packages/SystemUI/src/com/android/systemui/statusbar/policy/SecurityControllerImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 1146169
      },
      "writtenOn": "2023-11-30T16:31:13Z",
      "side": 1,
      "message": "Looking at the way this callback is registered, `onCapabilitiesChanged` will be sent for any capability change on _any_ network that matches the request. Our REQUEST that we register with seems to me like it would match any network. So this `mValidated` bit will depend on the last network to have its capabilities changed.\n\nI don\u0027t think this is exactly what we want. We would want to monitor the VPN connection directly and see if its `VALIDATED` bit changes.\n\nI think the simplest thing to do here would be to first check that the network we\u0027ve gotten a callback for is a VPN network, so something like\n\n```\nif (nc.hasTransport(TRANSPORT_TYPE_VPN) {\n  // check validated\n}\n```\n\nThere may also be another option with the way that we register the network callback. But I\u0027m not sure if that would break the other places where we call `updateState()` which will update whenever any network appears or disappears.",
      "range": {
        "startLine": 510,
        "startChar": 49,
        "endLine": 510,
        "endChar": 73
      },
      "revId": "a0a9cbe101be680d87e281b54c8d5995baa4dee3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}