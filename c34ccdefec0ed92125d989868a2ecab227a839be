{
  "comments": [
    {
      "key": {
        "uuid": "d7b26a88_922cce27",
        "filename": "Android.bp",
        "patchSetId": 20
      },
      "lineNbr": 300,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-12T15:34:47Z",
      "side": 1,
      "message": "What does this do? Does it mean that any .aidl file in TetheringLib can be directly depended on by the framework? Is that what we want? Does it mean that the generated AIDL classes are in the bootclasspath and thus can never be changed?",
      "range": {
        "startLine": 300,
        "startChar": 12,
        "endLine": 300,
        "endChar": 57
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74d021da_ed6f1033",
        "filename": "Android.bp",
        "patchSetId": 20
      },
      "lineNbr": 300,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T12:22:12Z",
      "side": 1,
      "message": "Hmm, this can be removed. Yes, we should not expose AIDL outside of TetheringLib. In previous change, ConnectivityManager and TetheringClient(already be removed) would use Tethering AIDL. But now AIDL should be internal usage.",
      "parentUuid": "d7b26a88_922cce27",
      "range": {
        "startLine": 300,
        "startChar": 12,
        "endLine": 300,
        "endChar": 57
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6c0ecfb_f36b6398",
        "filename": "Android.bp",
        "patchSetId": 20
      },
      "lineNbr": 867,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-12T15:34:47Z",
      "side": 1,
      "message": "Out of curiosity, what does this do?",
      "range": {
        "startLine": 867,
        "startChar": 4,
        "endLine": 867,
        "endChar": 46
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da422c1b_68112acb",
        "filename": "Android.bp",
        "patchSetId": 20
      },
      "lineNbr": 867,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T12:22:12Z",
      "side": 1,
      "message": "Ack, removed this. I add this that I want to expose whole TetheringLib folder to framework previously. Now I should remove this because we don\u0027t want to expose AIDL.",
      "parentUuid": "b6c0ecfb_f36b6398",
      "range": {
        "startLine": 867,
        "startChar": 4,
        "endLine": 867,
        "endChar": 46
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e8af519_9a09de67",
        "filename": "core/java/android/app/SystemServiceRegistry.java",
        "patchSetId": 20
      },
      "lineNbr": 349,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-12T15:34:47Z",
      "side": 1,
      "message": "This doesn\u0027t seem tethering related, so it should probably go into its own CL with its own commit message.\n\nAdditionally: there is already code to get the networkstack service in NetworkStackClient#getRemoteConnector. Should there be two ways to fetch the service?",
      "range": {
        "startLine": 344,
        "startChar": 0,
        "endLine": 349,
        "endChar": 16
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4de949c0_45fd5325",
        "filename": "core/java/android/app/SystemServiceRegistry.java",
        "patchSetId": 20
      },
      "lineNbr": 349,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T12:22:12Z",
      "side": 1,
      "message": "Ack, removed. Will have its own CL.",
      "parentUuid": "1e8af519_9a09de67",
      "range": {
        "startLine": 344,
        "startChar": 0,
        "endLine": 349,
        "endChar": 16
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88804ba6_e81bb62e",
        "filename": "core/java/android/app/SystemServiceRegistry.java",
        "patchSetId": 20
      },
      "lineNbr": 352,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-12T15:34:47Z",
      "side": 1,
      "message": "Why StaticApplicationContextServiceFetcher and not CachedServiceFetcher? StaticApplicationContextServiceFetcher is a special case and it has this comment on it:\n\n     * TODO: Delete this once its only user (ConnectivityManager) is known to work well in the\n     * case where multiple application components each have their own ConnectivityManager object.\n\nIf you want to use it, then you\u0027ll at least have to udpate that comment to mention TetheringManager as well. But it would seem better just to use CachedServiceFetcher, assuming it\u0027s safe for there to be multiple TetheringManagers in the same application (and if not, we should make it safe).",
      "range": {
        "startLine": 352,
        "startChar": 20,
        "endLine": 352,
        "endChar": 58
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9541c8b5_e15d5928",
        "filename": "core/java/android/app/SystemServiceRegistry.java",
        "patchSetId": 20
      },
      "lineNbr": 352,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T12:22:12Z",
      "side": 1,
      "message": "Done, change to CachedServiceFetcher. You are right, I should use CachedServiceFetcher.",
      "parentUuid": "88804ba6_e81bb62e",
      "range": {
        "startLine": 352,
        "startChar": 20,
        "endLine": 352,
        "endChar": 58
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21602d51_680ba342",
        "filename": "core/java/android/net/ConnectivityManager.java",
        "patchSetId": 20
      },
      "lineNbr": 2572,
      "author": {
        "id": 1288034
      },
      "writtenOn": "2019-12-13T03:34:50Z",
      "side": 1,
      "message": "This is blocking even though this method is asynchronous with a callback.\nOn first boot it can take some time for the service to be available (sometimes 10~20 seconds), blocking for that much time seems too much.\nI think it would be better if TetheringManager implemented the waiting for ITetheringManager, and TetheringManager gets registered immediately on boot.",
      "range": {
        "startLine": 2572,
        "startChar": 7,
        "endLine": 2572,
        "endChar": 29
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79b424b7_e32bcaaa",
        "filename": "core/java/android/net/ConnectivityManager.java",
        "patchSetId": 20
      },
      "lineNbr": 2572,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T12:22:12Z",
      "side": 1,
      "message": "I think the simple way here is just blocking. This API will be deprecated that I would like to the new caller(maybe also replace existing caller) to use TetheringManager#startTethering. So the caller would use Context.getSystemService(Context.TETHERING_SERVICE) to get TetheringManager object.",
      "parentUuid": "21602d51_680ba342",
      "range": {
        "startLine": 2572,
        "startChar": 7,
        "endLine": 2572,
        "endChar": 29
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98408952_9d6fa886",
        "filename": "core/java/android/net/ConnectivityManager.java",
        "patchSetId": 20
      },
      "lineNbr": 2572,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-16T15:52:03Z",
      "side": 1,
      "message": "Doesn\u0027t that have the same problem? Context.getSystemService(Context.TETHERING_SERVICE) will return null just after boot, right?",
      "parentUuid": "79b424b7_e32bcaaa",
      "range": {
        "startLine": 2572,
        "startChar": 7,
        "endLine": 2572,
        "endChar": 29
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3b50d78_7752cf9e",
        "filename": "core/java/android/net/ConnectivityManager.java",
        "patchSetId": 20
      },
      "lineNbr": 2572,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-17T09:15:38Z",
      "side": 1,
      "message": "Yes, but application can aware this directly by null object instead of calling ConnectivityManager function and blocking a while. Currently I don\u0027t have better solution to deal with usage before boot complete. Remi\u0027s suggestion seems need to base on a service which live in system server and should also ready before tethering. That service can know whether tethering is ready and callback to handle queuing request of TetheringManager. But this seems strange that we just move our service(Tethering) out of system server. Another option is that maybe we can send a intent from tethering when it is ready. Then, TetheringManager can start to handle its queuing request when it receive intent. I will have follow up CL for this early boot problem. Lets review and discuss in that CL.",
      "parentUuid": "98408952_9d6fa886",
      "range": {
        "startLine": 2572,
        "startChar": 7,
        "endLine": 2572,
        "endChar": 29
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4cff8455_793fd026",
        "filename": "data/etc/hiddenapi-package-whitelist.xml",
        "patchSetId": 20
      },
      "lineNbr": 61,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-12T15:34:47Z",
      "side": 1,
      "message": "Can you add a STOPSHIP to remove these?",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 61,
        "endChar": 67
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b42be4ce_a2e0efa3",
        "filename": "data/etc/hiddenapi-package-whitelist.xml",
        "patchSetId": 20
      },
      "lineNbr": 61,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T12:22:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4cff8455_793fd026",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 61,
        "endChar": 67
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66ee7c88_5415385f",
        "filename": "packages/Tethering/AndroidManifest.xml",
        "patchSetId": 20
      },
      "lineNbr": 30,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-12T15:34:47Z",
      "side": 1,
      "message": "Are these actually needed? Doesn\u0027t the bluetooth package do this?",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 73
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a945e148_78c9ef7f",
        "filename": "packages/Tethering/AndroidManifest.xml",
        "patchSetId": 20
      },
      "lineNbr": 30,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T12:22:12Z",
      "side": 1,
      "message": "Yes, tethering need to call setBluetoothTethering or get bluetooth tethering setting from bluetooth package. Flow is: Settings -\u003e Tethering -\u003e PanService(need these permission) -\u003e if bluetooth interface created and configuration done -\u003e Tethering",
      "parentUuid": "66ee7c88_5415385f",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 73
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2946e52_be849b7b",
        "filename": "packages/Tethering/AndroidManifest.xml",
        "patchSetId": 20
      },
      "lineNbr": 30,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-16T15:52:03Z",
      "side": 1,
      "message": "Ack. Might want to run this past the BT team then. Doesn\u0027t have to block this CL though, we can always fix that later (e.g., by making PanService#setBluetoothTethering check another permission).",
      "parentUuid": "a945e148_78c9ef7f",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 73
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f04318f_cdcce8b0",
        "filename": "packages/Tethering/common/TetheringLib/Android.bp",
        "patchSetId": 20
      },
      "lineNbr": 65,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-12T15:34:47Z",
      "side": 1,
      "message": "Do we need all of these? If so, can you add comments to explain why?",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 65,
        "endChar": 82
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d926dbee_b09f7ab9",
        "filename": "packages/Tethering/common/TetheringLib/Android.bp",
        "patchSetId": 20
      },
      "lineNbr": 65,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T12:22:12Z",
      "side": 1,
      "message": "I reference metalava_framework_docs_args which is the used to generate framework stubs. And",
      "parentUuid": "4f04318f_cdcce8b0",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 65,
        "endChar": 82
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f79579d_163f81f4",
        "filename": "packages/Tethering/common/TetheringLib/Android.bp",
        "patchSetId": 20
      },
      "lineNbr": 65,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T13:00:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d926dbee_b09f7ab9",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 65,
        "endChar": 82
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7cb22939_d629fbc5",
        "filename": "packages/Tethering/common/TetheringLib/Android.bp",
        "patchSetId": 20
      },
      "lineNbr": 91,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-12T15:34:47Z",
      "side": 1,
      "message": "Not for this CL, but this could be easily confused with TetherStatsParcel. Maybe rename to TetheringStateParcel?",
      "range": {
        "startLine": 91,
        "startChar": 25,
        "endLine": 91,
        "endChar": 43
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f2ddfc4_77e12ee4",
        "filename": "packages/Tethering/common/TetheringLib/Android.bp",
        "patchSetId": 20
      },
      "lineNbr": 91,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T12:22:12Z",
      "side": 1,
      "message": "Ack, add to cleanup b/144742179",
      "parentUuid": "7cb22939_d629fbc5",
      "range": {
        "startLine": 91,
        "startChar": 25,
        "endLine": 91,
        "endChar": 43
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea5e3e00_5f026944",
        "filename": "packages/Tethering/common/TetheringLib/jarjar-rules.txt",
        "patchSetId": 20
      },
      "lineNbr": 1,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-12T15:34:47Z",
      "side": 1,
      "message": "Out of curiosity, what is the need for this? We don\u0027t seem to do anything like it for the network stack.",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 58
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8556c8c_cbd321cc",
        "filename": "packages/Tethering/common/TetheringLib/jarjar-rules.txt",
        "patchSetId": 20
      },
      "lineNbr": 1,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T12:22:12Z",
      "side": 1,
      "message": "This is used to solve circle dependencies as framework. That TetheringLib would be load into bootclass path and annotation is part of framework. So I have the problem that TetheringLib need annotation(framework) and framework need tethering. To fix this,  I static build annotation into  TetheringLib with jarar.",
      "parentUuid": "ea5e3e00_5f026944",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 58
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc767784_c1434116",
        "filename": "packages/Tethering/common/TetheringLib/jarjar-rules.txt",
        "patchSetId": 20
      },
      "lineNbr": 1,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-16T15:52:03Z",
      "side": 1,
      "message": "Ack. Is this the same way that other modules solve this problem?",
      "parentUuid": "f8556c8c_cbd321cc",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 58
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51ffd538_06069320",
        "filename": "packages/Tethering/common/TetheringLib/jarjar-rules.txt",
        "patchSetId": 20
      },
      "lineNbr": 1,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-17T09:15:38Z",
      "side": 1,
      "message": "I found media team build annotation as shared library and set installable to false. But I assume why they can do that is their sdk version is core_platform.\n\nhttps://osscs.corp.google.com/android/platform/superproject/+/master:frameworks/base/media/Android.bp;l\u003d33?ss\u003dandroid\u0026q\u003dframeworks%2Fbase%2Fmedia%2FAndroid.bp\n\nhttps://osscs.corp.google.com/android/platform/superproject/+/master:frameworks/base/media/Android.bp;l\u003d30?ss\u003dandroid\u0026q\u003dframeworks%2Fbase%2Fmedia%2FAndroid.bp",
      "parentUuid": "fc767784_c1434116",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 58
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b8765ae_1466c458",
        "filename": "packages/Tethering/common/TetheringLib/src/android/net/IIntResultListener.aidl",
        "patchSetId": 20
      },
      "lineNbr": 20,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-12T15:34:47Z",
      "side": 1,
      "message": "You can\u0027t listen to a module. Listen to module events?",
      "range": {
        "startLine": 20,
        "startChar": 60,
        "endLine": 20,
        "endChar": 66
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbb78ae8_167902f1",
        "filename": "packages/Tethering/common/TetheringLib/src/android/net/IIntResultListener.aidl",
        "patchSetId": 20
      },
      "lineNbr": 20,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T12:22:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b8765ae_1466c458",
      "range": {
        "startLine": 20,
        "startChar": 60,
        "endLine": 20,
        "endChar": 66
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5dbc919_22a77f7f",
        "filename": "packages/Tethering/common/TetheringLib/src/android/net/IIntResultListener.aidl",
        "patchSetId": 20
      },
      "lineNbr": 21,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-12T15:34:47Z",
      "side": 1,
      "message": "Does this need to be marked @hide? It\u0027s not in a path where it will go into the API text files, is it?",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 10
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f6e99e0_da1d0a87",
        "filename": "packages/Tethering/common/TetheringLib/src/android/net/IIntResultListener.aidl",
        "patchSetId": 20
      },
      "lineNbr": 21,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T12:22:12Z",
      "side": 1,
      "message": "We need specify this class as @hide, then it would not include into tethering_client_stub library which is expose to framework.",
      "parentUuid": "d5dbc919_22a77f7f",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 10
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0e9cc94_6d06808e",
        "filename": "packages/Tethering/common/TetheringLib/src/android/net/ITetheringConnector.aidl",
        "patchSetId": 20
      },
      "lineNbr": 22,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-12T15:34:47Z",
      "side": 1,
      "message": "Do you need this?",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 22,
        "endChar": 11
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "debd8de3_85e02aa1",
        "filename": "packages/Tethering/common/TetheringLib/src/android/net/ITetheringConnector.aidl",
        "patchSetId": 20
      },
      "lineNbr": 22,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T12:22:12Z",
      "side": 1,
      "message": "Yes, then we won\u0027t build this in tethering_client_stub library which is share library expose to framework.",
      "parentUuid": "f0e9cc94_6d06808e",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 22,
        "endChar": 11
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b7f0343_4bd321d4",
        "filename": "packages/Tethering/common/TetheringLib/src/android/net/ITetheringEventCallback.aidl",
        "patchSetId": 20
      },
      "lineNbr": 25,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-12T15:34:47Z",
      "side": 1,
      "message": "Do you need this?",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 8
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "715041a3_5e326f47",
        "filename": "packages/Tethering/common/TetheringLib/src/android/net/ITetheringEventCallback.aidl",
        "patchSetId": 20
      },
      "lineNbr": 25,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T12:22:12Z",
      "side": 1,
      "message": "Yes, then we won\u0027t build this in tethering_client_stub library which is share library expose to framework.",
      "parentUuid": "5b7f0343_4bd321d4",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 8
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "381090b0_5031d207",
        "filename": "packages/Tethering/common/TetheringLib/src/android/net/ITetheringEventCallback.aidl",
        "patchSetId": 20
      },
      "lineNbr": 25,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-16T15:52:03Z",
      "side": 1,
      "message": "What do you mean \"we won\u0027t build this\"? If this file is included into TetheringLib, and TetheringLib is included in the framework, the code will be built. It just won\u0027t make it into the API text files.",
      "parentUuid": "715041a3_5e326f47",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 8
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "972f9822_f65a1061",
        "filename": "packages/Tethering/common/TetheringLib/src/android/net/ITetheringEventCallback.aidl",
        "patchSetId": 20
      },
      "lineNbr": 25,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-17T09:15:38Z",
      "side": 1,
      "message": "It would not be built in framework_tethering_stubs(original name is tethering_client_stubs) \nhttps://android-review.googlesource.com/c/platform/frameworks/base/+/1156906/23/packages/Tethering/common/TetheringLib/Android.bp#53\ndroidstubs would default skip @hide API.\n\nAnd I don\u0027t want framework and  other system service use our @hide class/method. I would like them just build framework_tethering_stubs.",
      "parentUuid": "381090b0_5031d207",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 8
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa4f2a7_08d10792",
        "filename": "packages/Tethering/proguard.flags",
        "patchSetId": 20
      },
      "lineNbr": 1,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-12T15:34:47Z",
      "side": 1,
      "message": "Can you explain why we need these? Is it because MessageUtils uses them via reflection?",
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d5ee134_4b65b8c1",
        "filename": "packages/Tethering/proguard.flags",
        "patchSetId": 20
      },
      "lineNbr": 1,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T12:22:12Z",
      "side": 1,
      "message": "Yes, MessageUtils parse input Class\u0027s static field which is similar as reflection.\nhttps://osscs.corp.google.com/android/platform/superproject/+/master:frameworks/base/packages/Tethering/src/com/android/server/connectivity/tethering/Tethering.java;l\u003d136?ss\u003dandroid\u0026q\u003dTethering.java\nhttps://osscs.corp.google.com/android/platform/superproject/+/master:frameworks/base/core/java/com/android/internal/util/MessageUtils.java;l\u003d52?ss\u003dandroid\u0026q\u003dMessageUtils.java",
      "parentUuid": "3fa4f2a7_08d10792",
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e6dd8fb_c9f3a783",
        "filename": "packages/Tethering/proguard.flags",
        "patchSetId": 20
      },
      "lineNbr": 1,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-16T15:52:03Z",
      "side": 1,
      "message": "Then please add comments to explain that, since it\u0027s non-obvious.",
      "parentUuid": "7d5ee134_4b65b8c1",
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "187aaa8a_dfbfa858",
        "filename": "packages/Tethering/src/com/android/server/connectivity/tethering/Tethering.java",
        "patchSetId": 20
      },
      "lineNbr": 1807,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-12T15:34:47Z",
      "side": 1,
      "message": "Looks like this callback is switching from a single callback to a list of callbacks. Unlike most of this CL, that could cause a change in behaviour. There doesn\u0027t seem to be test coverage of it. Can it go into its own CL?\n\nOr am I misreading this?",
      "range": {
        "startLine": 1802,
        "startChar": 0,
        "endLine": 1807,
        "endChar": 45
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1c1b359_bbd455cb",
        "filename": "packages/Tethering/src/com/android/server/connectivity/tethering/Tethering.java",
        "patchSetId": 20
      },
      "lineNbr": 1807,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T12:22:12Z",
      "side": 1,
      "message": "Done, you don\u0027t misread. And thanks for point out this, I fix a bug when I improve the test for multiple callback registered 😜",
      "parentUuid": "187aaa8a_dfbfa858",
      "range": {
        "startLine": 1802,
        "startChar": 0,
        "endLine": 1807,
        "endChar": 45
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1fb0164_e9db3787",
        "filename": "packages/Tethering/src/com/android/server/connectivity/tethering/Tethering.java",
        "patchSetId": 20
      },
      "lineNbr": 1807,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-16T15:52:03Z",
      "side": 1,
      "message": "Well, the original question was \"can this go into its own CL\". :-) Can it? Or does that make things too complicated because lots of other changes need to happen as well?",
      "parentUuid": "b1c1b359_bbd455cb",
      "range": {
        "startLine": 1802,
        "startChar": 0,
        "endLine": 1807,
        "endChar": 45
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35829862_2046c3f6",
        "filename": "packages/Tethering/src/com/android/server/connectivity/tethering/Tethering.java",
        "patchSetId": 20
      },
      "lineNbr": 1807,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-17T09:15:38Z",
      "side": 1,
      "message": "Keep it in the same CL would be simpler. Yes, the reason is they should be merged together.",
      "parentUuid": "a1fb0164_e9db3787",
      "range": {
        "startLine": 1802,
        "startChar": 0,
        "endLine": 1807,
        "endChar": 45
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2734f99_b176b26a",
        "filename": "services/core/Android.bp",
        "patchSetId": 20
      },
      "lineNbr": 35,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-12T15:34:47Z",
      "side": 1,
      "message": "What is this dependency for? Does something in services.net talk to tethering?",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 27
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fc544df_399d1711",
        "filename": "services/core/Android.bp",
        "patchSetId": 20
      },
      "lineNbr": 35,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T12:22:12Z",
      "side": 1,
      "message": "Yes, SystemServiceRegistry.java",
      "parentUuid": "a2734f99_b176b26a",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 27
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77ec0242_d2c92e6f",
        "filename": "services/java/com/android/server/SystemServer.java",
        "patchSetId": 20
      },
      "lineNbr": 2222,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-12T15:34:47Z",
      "side": 1,
      "message": "This contains a lot of implementation details about the tethering module which don\u0027t really seem appropriate here. Can we put them somewhere else? What was the reason they can\u0027t be in TetheringManager? How about putting them in NetworkStackClient?",
      "range": {
        "startLine": 2216,
        "startChar": 0,
        "endLine": 2222,
        "endChar": 27
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfa4a57f_cddfdd04",
        "filename": "services/java/com/android/server/SystemServer.java",
        "patchSetId": 20
      },
      "lineNbr": 2222,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T12:22:12Z",
      "side": 1,
      "message": "The reason is all of these(ConnectivityModuleConnector and ServiceManager) are @hide, they can\u0027t be in TetheringManager.\nAgree with you that we should hide the implementation detail. Have a b/146312721 for TODO.",
      "parentUuid": "77ec0242_d2c92e6f",
      "range": {
        "startLine": 2216,
        "startChar": 0,
        "endLine": 2222,
        "endChar": 27
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6bce61f_46da6962",
        "filename": "services/java/com/android/server/SystemServer.java",
        "patchSetId": 20
      },
      "lineNbr": 2222,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-16T15:52:03Z",
      "side": 1,
      "message": "Ack, thanks.",
      "parentUuid": "bfa4a57f_cddfdd04",
      "range": {
        "startLine": 2216,
        "startChar": 0,
        "endLine": 2222,
        "endChar": 27
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64c319f9_a7c7cbe0",
        "filename": "services/net/Android.bp",
        "patchSetId": 20
      },
      "lineNbr": 1,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2019-12-12T15:34:47Z",
      "side": 1,
      "message": "Out of curiosity, what\u0027s the reason this no longer needs to be static?",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 12
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "886e74cc_988385b8",
        "filename": "services/net/Android.bp",
        "patchSetId": 20
      },
      "lineNbr": 1,
      "author": {
        "id": 1308504
      },
      "writtenOn": "2019-12-16T12:22:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "64c319f9_a7c7cbe0",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 12
      },
      "revId": "c34ccdefec0ed92125d989868a2ecab227a839be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}